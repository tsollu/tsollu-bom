{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"\u9996\u9875"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"220524_Apollo_Client_Usage/","text":"Apollo Client \u4f7f\u7528\u6307\u5357 \u00b6 Apollo\uff08\u963f\u6ce2\u7f57\uff09\u662f\u4e00\u6b3e\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u914d\u7f6e\u7ba1\u7406\u4e2d\u5fc3\uff0c\u8bde\u751f\u4e8e\u643a\u7a0b\u6846\u67b6\u7814\u53d1\u90e8\uff0c\u80fd\u591f\u96c6\u4e2d\u5316\u7ba1\u7406\u5e94\u7528\u4e0d\u540c\u73af\u5883\u3001\u4e0d\u540c\u96c6\u7fa4\u7684\u914d\u7f6e\uff0c\u914d\u7f6e\u4fee\u6539\u540e\u80fd\u591f\u5b9e\u65f6\u63a8\u9001\u5230\u5e94\u7528\u7aef\uff0c\u5e76\u4e14\u5177\u5907\u89c4\u8303\u7684\u6743\u9650\u3001\u6d41\u7a0b\u6cbb\u7406\u7b49\u7279\u6027\uff0c\u9002\u7528\u4e8e\u5fae\u670d\u52a1\u914d\u7f6e\u7ba1\u7406\u573a\u666f\u3002 \u670d\u52a1\u7aef\u57fa\u4e8e Spring Boot \u548c Spring Cloud \u5f00\u53d1\uff0c\u6253\u5305\u540e\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u989d\u5916\u5b89\u88c5 Tomcat \u7b49\u5e94\u7528\u5bb9\u5668\u3002 Java \u5ba2\u6237\u7aef\u4e0d\u4f9d\u8d56\u4efb\u4f55\u6846\u67b6\uff0c\u80fd\u591f\u8fd0\u884c\u4e8e\u6240\u6709 Java \u8fd0\u884c\u65f6\u73af\u5883\uff0c\u540c\u65f6\u5bf9 Spring/Spring Boot \u73af\u5883\u4e5f\u6709\u8f83\u597d\u7684\u652f\u6301\u3002 \u66f4\u591a\u4ea7\u54c1\u4ecb\u7ecd\u8bf7\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a https://www.apolloconfig.com/ kaddo-components-apollo \u6a21\u5757\u662f\u57fa\u4e8e Spring Boot \u548c Apollo Client \u5f00\u53d1\u7684\u5feb\u901f\u96c6\u6210\u65b9\u6848\u3002\u91cd\u70b9\u89e3\u51b3\u4e86\u5728 Spring Boot \u4e2d\u4f7f\u7528 @ConfigurationProperties \u6ce8\u89e3\u65f6\u914d\u7f6e\u53c2\u6570\u4e0d\u66f4\u65b0\u7684\u95ee\u9898\u3002 \u5feb\u901f\u4f7f\u7528 \u00b6 1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u914d\u7f6e\uff1a <!-- Apollo Client >=2.0.0 --> <dependency> <groupId>com.kaddo</groupId> <artifactId>kaddo-components-apollo</artifactId> <version>${kaddo.version}</version> </dependency> 2\uff09\u6dfb\u52a0\u914d\u7f6e\u53c2\u6570\uff1a ## Apollo Configuration # \u591a\u73af\u5883\u65f6\uff0c\u9700\u8981\u901a\u8fc7\u542f\u52a8\u53c2\u6570\u6765\u6307\u5b9a\u914d\u7f6e\u73af\u5883\uff1a-Denv=DEV app.id=YOUR-APP-ID apollo.bootstrap.enabled=true apollo.bootstrap.eagerLoad.enabled=true apollo.bootstrap.namespaces=application apollo.meta=http://config-service-url apollo.cache-dir=./config-cache apollo.cluster=default \u914d\u7f6e\u53c2\u6570\u8be6\u89e3 \u00b6 Apollo Client \u652f\u6301\u901a\u8fc7\u542f\u52a8\u53c2\u6570\u548c Spring Boot application.properties / bootstrap.properties \u5c5e\u6027\u6587\u4ef6\u914d\u7f6e\u3002 \u4ee5\u4e0b\u662f Apollo Client \u914d\u7f6e\u53c2\u6570\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u67e5\u770b\u5b98\u65b9\u6587\u6863\u53ef\u4e86\u89e3\u66f4\u591a\u53c2\u6570\u914d\u7f6e\u4fe1\u606f\uff1a https://www.apolloconfig.com/#/zh/usage/java-sdk-user-guide # [\u5fc5\u9009] \u5f00\u542f Apollo \u914d\u7f6e # [\u6ce8\u610f] \u5982\u679c\u914d\u7f6e\u4e2d\u4f7f\u7528\u4e86 @EnableApolloConfig \u6ce8\u89e3\uff0c\u8be5\u914d\u7f6e\u5c06\u4e0d\u4f1a\u751f\u6548\u3002 apollo.bootstrap.enabled=true # [\u5fc5\u9009] \u6307\u5b9a app.id # AppId\u662f\u5e94\u7528\u7684\u8eab\u4efd\u4fe1\u606f\uff0c\u662f\u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u914d\u7f6e\u7684\u4e00\u4e2a\u91cd\u8981\u4fe1\u606f\u3002 # \u542f\u52a8\u53c2\u6570\uff1a-Dapp.id=YOUR-APP-ID # \u7cfb\u7edf\u53c2\u6570\uff1aAPP_ID=YOUR-APP-ID app.id=YOUR-APP-ID # [\u5fc5\u9009] \u6307\u5b9a\u914d\u7f6e\u670d\u52a1\u5668\u5730\u5740 # \u4e3a\u4e86\u5b9e\u73b0 meta server \u7684\u9ad8\u53ef\u7528\uff0c\u63a8\u8350\u901a\u8fc7 SLB \u505a\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\u3002 # \u542f\u52a8\u53c2\u6570\uff1a-Dapollo.meta=http://config-service-url # \u7cfb\u7edf\u53c2\u6570\uff1aAPOLLO_META=http://config-service-url # \u5982\u679c\u662f\u5728\u8fd0\u884cJAR\u6587\u4ef6\u4e2d\u6307\u5b9a\uff0c\u9700\u8981\u6ce8\u610f\u683c\u5f0f\u662f\uff1ajava -Dapollo.meta=http://config-service-url -jar xxx.jar apollo.meta=http://config-service-url # [\u5fc5\u9009] \u6307\u5b9a\u914d\u7f6e\u73af\u5883 # \u542f\u52a8\u53c2\u6570\uff1a-Denv=DEV # \u7cfb\u7edf\u53c2\u6570\uff1aENV=DEV # \u591a\u73af\u5883\u65f6\uff0c\u8be5\u53c2\u6570\u5fc5\u987b\u901a\u8fc7\u542f\u52a8\u53c2\u6570\u6216\u7cfb\u7edf\u53c2\u6570\u6765\u6307\u5b9a\u3002 # \u5982\u679c\u662f\u8fd0\u884cJAR\u6587\u4ef6\uff0c\u9700\u8981\u6ce8\u610f\u683c\u5f0f\u662fjava -Denv=DEV -jar xxx.jar # [\u53ef\u9009] \u6307\u5b9a\u96c6\u7fa4\u73af\u5883 # Apollo\u652f\u6301\u914d\u7f6e\u6309\u7167\u96c6\u7fa4\u5212\u5206\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4e00\u4e2aAppId\u548c\u4e00\u4e2a\u73af\u5883\uff0c\u5bf9\u4e0d\u540c\u7684\u96c6\u7fa4\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u914d\u7f6e\u3002 # \u5982\u679c\u8fd8\u662f\u6ca1\u627e\u5230\u6307\u5b9a\u96c6\u7fa4\uff0c\u4f1a\u4ece\u9ed8\u8ba4\u7684\u96c6\u7fa4\uff08default\uff09\u52a0\u8f7d\u3002 # \u542f\u52a8\u53c2\u6570\uff1a-Dapollo.cluster=SomeCluster apollo.cluster=default # [\u53ef\u9009] \u8bbe\u7f6e\u5185\u5b58\u4e2d\u7684\u914d\u7f6e\u9879\u662f\u5426\u4fdd\u6301\u548c\u9875\u9762\u4e0a\u7684\u987a\u5e8f\u4e00\u81f4\uff0c\u9ed8\u8ba4false # \u6709\u4e9b\u573a\u666f\u4f1a\u5f3a\u4f9d\u8d56\u914d\u7f6e\u9879\u7684\u987a\u5e8f\uff08\u5982spring cloud zuul\u7684\u8def\u7531\u89c4\u5219\uff09 # \u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5f00\u542f OrderedProperties \u7279\u6027\u6765\u4f7f\u5f97\u5185\u5b58\u4e2d\u7684\u914d\u7f6e\u987a\u5e8f\u548c\u9875\u9762\u4e0a\u770b\u5230\u7684\u4e00\u81f4\u3002 # -Dapollo.property.order.enable=true # apollo.property.order.enable=false # [\u53ef\u9009] \u5c06 Apollo \u914d\u7f6e\u52a0\u8f7d\u63d0\u5230\u521d\u59cb\u5316\u65e5\u5fd7\u7cfb\u7edf\u4e4b\u524d\uff0c\u4e0d\u8fc7\u8fd9\u4f1a\u5bfc\u81f4 Apollo \u7684\u542f\u52a8\u8fc7\u7a0b\u65e0\u6cd5\u901a\u8fc7\u65e5\u5fd7\u7684\u65b9\u5f0f\u8f93\u51fa\u3002 apollo.bootstrap.eagerLoad.enabled=true # [\u53ef\u9009] \u81ea\u5b9a\u4e49\u7f13\u5b58\u8def\u5f84 # \u542f\u52a8\u53c2\u6570\uff1a-Dapollo.cache-dir=/opt/data/config-cache # \u7cfb\u7edf\u53c2\u6570\uff1aAPOLLO_CACHE_DIR=/opt/data/config-cache apollo.cache-dir=/opt/data/config-cache # [\u53ef\u9009] \u914d\u7f6e\u8bbf\u95ee\u5bc6\u94a5\uff08\u5982\u679c\u914d\u7f6e\u4e2d\u5fc3\u8981\u6c42\u4f7f\u7528\u8bbf\u95ee\u5bc6\u94a5\uff0c\u5219\u5fc5\u987b\u914d\u7f6e\uff09 # \u542f\u52a8\u53c2\u6570\uff1a-Dapollo.access-key.secret=1cf998c4e2ad4704b45a98a509d15719 # \u7cfb\u7edf\u53c2\u6570\uff1aAPOLLO_ACCESS_KEY_SECRET=1cf998c4e2ad4704b45a98a509d15719 # \u5982\u679c\u662f\u8fd0\u884cJAR\u6587\u4ef6\uff0c\u9700\u8981\u6ce8\u610f\u683c\u5f0f\u662fjava -Dapollo.access-key.secret=1cf998c4e2ad4704b45a98a509d15719 -jar xxx.jar # apollo.access-key.secret=1cf998c4e2ad4704b45a98a509d15719 # [\u5fc5\u9009] \u6307\u5b9a\u52a0\u8f7d\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u9ed8\u8ba4\u4f1a\u52a0\u8f7d application apollo.bootstrap.namespaces=application,FX.apollo,application.yml Environment \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b3\u79cd\u65b9\u5f0f\u7684\u4efb\u610f\u4e00\u4e2a\u914d\u7f6e\uff1a 1\uff09\u901a\u8fc7 Java System Property (\u63a8\u8350) \u53ef\u4ee5\u901a\u8fc7 Java \u7684 System Property env \u6765\u6307\u5b9a\u73af\u5883\u3002 \u5728 Java \u7a0b\u5e8f\u542f\u52a8\u811a\u672c\u4e2d\uff0c\u53ef\u4ee5\u6307\u5b9a -Denv=YOUR-ENVIRONMENT \u5982\u679c\u662f\u8fd0\u884c JAR \u6587\u4ef6\uff0c\u9700\u8981\u6ce8\u610f\u683c\u5f0f\u662f java -Denv=YOUR-ENVIRONMENT -jar xxx.jar \u6ce8\u610f key \u4e3a\u5168\u5c0f\u5199 2\uff09\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684 System Environment \u8fd8\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684 System Environment ENV \u6765\u6307\u5b9a ENV=YOUR-ENVIRONMENT \u6ce8\u610f key \u4e3a\u5168\u5927\u5199 3\uff09\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6 \u6700\u540e\u4e00\u4e2a\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6765\u6307\u5b9a env=YOUR-ENVIRONMENT \u5bf9\u4e8e Mac/Linux\uff0c\u9ed8\u8ba4\u6587\u4ef6\u4f4d\u7f6e\u4e3a /opt/settings/server.properties \u5bf9\u4e8e Windows\uff0c\u9ed8\u8ba4\u6587\u4ef6\u4f4d\u7f6e\u4e3a C:\\opt\\settings\\server.properties \u672c\u5730\u7f13\u5b58\u8def\u5f84 \u00b6 Apollo \u5ba2\u6237\u7aef\u4f1a\u628a\u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u5230\u7684\u914d\u7f6e\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7f13\u5b58\u4e00\u4efd\uff0c\u7528\u4e8e\u5728\u9047\u5230\u670d\u52a1\u4e0d\u53ef\u7528\uff0c\u6216\u7f51\u7edc\u4e0d\u901a\u7684\u65f6\u5019\uff0c\u4f9d\u7136\u80fd\u4ece\u672c\u5730\u6062\u590d\u914d\u7f6e\uff0c\u4e0d\u5f71\u54cd\u5e94\u7528\u6b63\u5e38\u8fd0\u884c\u3002 \u672c\u5730\u7f13\u5b58\u8def\u5f84\u9ed8\u8ba4\u4f4d\u4e8e\u4ee5\u4e0b\u8def\u5f84\uff0c\u6240\u4ee5\u8bf7\u786e\u4fdd /opt/data \u6216 C:\\opt\\data \u76ee\u5f55\u5b58\u5728\uff0c\u4e14\u5e94\u7528\u6709\u8bfb\u5199\u6743\u9650\u3002 Mac/Linux: /opt/data/{appId}/config-cache Windows: C:\\opt\\data{appId}\\config-cache \u6216\u8005\uff0c\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff08\u63a8\u8350\uff09\uff1a apollo.cache-dir=./config-cache \u672c\u5730\u914d\u7f6e\u6587\u4ef6\u4f1a\u4ee5\u4e0b\u9762\u7684\u6587\u4ef6\u540d\u683c\u5f0f\u653e\u7f6e\u4e8e\u672c\u5730\u7f13\u5b58\u8def\u5f84\u4e0b\uff1a {appId}+{cluster}+{namespace}.properties appId \u5c31\u662f\u5e94\u7528\u81ea\u5df1\u7684 appId\uff08\u53ef\u89c4\u8303\u547d\u540d\u89c4\u5219\uff09\uff0c\u5982 100004458 cluster \u5c31\u662f\u5e94\u7528\u4f7f\u7528\u7684\u96c6\u7fa4\uff0c\u4e00\u822c\u5728\u672c\u5730\u6a21\u5f0f\u4e0b\u6ca1\u6709\u505a\u8fc7\u914d\u7f6e\u7684\u8bdd\uff0c\u5c31\u662f default namespace \u5c31\u662f\u5e94\u7528\u4f7f\u7528\u7684\u914d\u7f6e namespace\uff0c\u4e00\u822c\u662f application \u5728 Spring \u4e2d\u7684\u4f7f\u7528 \u00b6 Spring \u5e94\u7528\u901a\u5e38\u4f1a\u4f7f\u7528 Placeholder \u6765\u6ce8\u5165\u914d\u7f6e\uff0c\u4f7f\u7528\u683c\u5f0f\u5982 ${someKey:someDefaultValue}\u3002\u5192\u53f7\u524d\u9762\u7684\u662f key\uff0c\u5192\u53f7\u540e\u9762\u7684\u662f\u9ed8\u8ba4\u503c\u3002 \u5efa\u8bae\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u5c3d\u91cf\u7ed9\u51fa\u9ed8\u8ba4\u503c\uff0c\u4ee5\u514d\u7531\u4e8e key \u6ca1\u6709\u5b9a\u4e49\u5bfc\u81f4\u8fd0\u884c\u65f6\u9519\u8bef\u3002 \u4ece Apollo v0.10.0 \u5f00\u59cb\u7684\u7248\u672c\u652f\u6301 Placeholder \u5728\u8fd0\u884c\u65f6\u81ea\u52a8\u66f4\u65b0\u3002 1\uff09\u5047\u8bbe\u6709\u4e00\u4e2a TestJavaConfigBean\uff0c\u901a\u8fc7 Java Config \u7684\u65b9\u5f0f\u53ef\u4ee5\u4f7f\u7528 @Value \u7684\u65b9\u5f0f\u6ce8\u5165\uff1a public class TestJavaConfigBean { @Value(\"${timeout:100}\") private int timeout; private int batch; @Value(\"${batch:200}\") public void setBatch(int batch) { this.batch = batch; } public int getTimeout() { return timeout; } public int getBatch() { return batch; } } \u5728 Configuration \u7c7b\u4e2d\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u4f7f\u7528\uff08\u5047\u8bbe\u5e94\u7528\u9ed8\u8ba4\u7684 application namespace \u4e2d\u6709 timeout \u548c batch \u7684\u914d\u7f6e\u9879\uff09\uff1a @Configuration @EnableApolloConfig public class AppConfig { @Bean public TestJavaConfigBean javaConfigBean() { return new TestJavaConfigBean(); } } 2\uff09Spring Boot \u63d0\u4f9b\u4e86 @ConfigurationProperties \u628a\u914d\u7f6e\u6ce8\u5165\u5230 bean \u5bf9\u8c61\u4e2d\u3002 Apollo \u4e5f\u652f\u6301\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4f1a\u628a redis.cache.expireSeconds \u548c redis.cache.commandTimeout \u5206\u522b\u6ce8\u5165\u5230 SampleRedisConfig \u7684 expireSeconds \u548c commandTimeout \u5b57\u6bb5\u4e2d\u3002 @ConfigurationProperties(prefix = \"redis.cache\") public class SampleRedisConfig { private int expireSeconds; private int commandTimeout; public void setExpireSeconds(int expireSeconds) { this.expireSeconds = expireSeconds; } public void setCommandTimeout(int commandTimeout) { this.commandTimeout = commandTimeout; } } \u5728 Configuration \u7c7b\u4e2d\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u4f7f\u7528\uff08\u5047\u8bbe\u5e94\u7528\u9ed8\u8ba4\u7684 application namespace \u4e2d\u6709 redis.cache.expireSeconds \u548c redis.cache.commandTimeout \u7684\u914d\u7f6e\u9879\uff09\uff1a @Configuration @EnableApolloConfig public class AppConfig { @Bean public SampleRedisConfig sampleRedisConfig() { return new SampleRedisConfig(); } }","title":"Apollo Client \u4f7f\u7528\u6307\u5357"},{"location":"220524_Apollo_Client_Usage/#apollo-client","text":"Apollo\uff08\u963f\u6ce2\u7f57\uff09\u662f\u4e00\u6b3e\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u914d\u7f6e\u7ba1\u7406\u4e2d\u5fc3\uff0c\u8bde\u751f\u4e8e\u643a\u7a0b\u6846\u67b6\u7814\u53d1\u90e8\uff0c\u80fd\u591f\u96c6\u4e2d\u5316\u7ba1\u7406\u5e94\u7528\u4e0d\u540c\u73af\u5883\u3001\u4e0d\u540c\u96c6\u7fa4\u7684\u914d\u7f6e\uff0c\u914d\u7f6e\u4fee\u6539\u540e\u80fd\u591f\u5b9e\u65f6\u63a8\u9001\u5230\u5e94\u7528\u7aef\uff0c\u5e76\u4e14\u5177\u5907\u89c4\u8303\u7684\u6743\u9650\u3001\u6d41\u7a0b\u6cbb\u7406\u7b49\u7279\u6027\uff0c\u9002\u7528\u4e8e\u5fae\u670d\u52a1\u914d\u7f6e\u7ba1\u7406\u573a\u666f\u3002 \u670d\u52a1\u7aef\u57fa\u4e8e Spring Boot \u548c Spring Cloud \u5f00\u53d1\uff0c\u6253\u5305\u540e\u53ef\u4ee5\u76f4\u63a5\u8fd0\u884c\uff0c\u4e0d\u9700\u8981\u989d\u5916\u5b89\u88c5 Tomcat \u7b49\u5e94\u7528\u5bb9\u5668\u3002 Java \u5ba2\u6237\u7aef\u4e0d\u4f9d\u8d56\u4efb\u4f55\u6846\u67b6\uff0c\u80fd\u591f\u8fd0\u884c\u4e8e\u6240\u6709 Java \u8fd0\u884c\u65f6\u73af\u5883\uff0c\u540c\u65f6\u5bf9 Spring/Spring Boot \u73af\u5883\u4e5f\u6709\u8f83\u597d\u7684\u652f\u6301\u3002 \u66f4\u591a\u4ea7\u54c1\u4ecb\u7ecd\u8bf7\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a https://www.apolloconfig.com/ kaddo-components-apollo \u6a21\u5757\u662f\u57fa\u4e8e Spring Boot \u548c Apollo Client \u5f00\u53d1\u7684\u5feb\u901f\u96c6\u6210\u65b9\u6848\u3002\u91cd\u70b9\u89e3\u51b3\u4e86\u5728 Spring Boot \u4e2d\u4f7f\u7528 @ConfigurationProperties \u6ce8\u89e3\u65f6\u914d\u7f6e\u53c2\u6570\u4e0d\u66f4\u65b0\u7684\u95ee\u9898\u3002","title":"Apollo Client \u4f7f\u7528\u6307\u5357"},{"location":"220524_Apollo_Client_Usage/#_1","text":"1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u914d\u7f6e\uff1a <!-- Apollo Client >=2.0.0 --> <dependency> <groupId>com.kaddo</groupId> <artifactId>kaddo-components-apollo</artifactId> <version>${kaddo.version}</version> </dependency> 2\uff09\u6dfb\u52a0\u914d\u7f6e\u53c2\u6570\uff1a ## Apollo Configuration # \u591a\u73af\u5883\u65f6\uff0c\u9700\u8981\u901a\u8fc7\u542f\u52a8\u53c2\u6570\u6765\u6307\u5b9a\u914d\u7f6e\u73af\u5883\uff1a-Denv=DEV app.id=YOUR-APP-ID apollo.bootstrap.enabled=true apollo.bootstrap.eagerLoad.enabled=true apollo.bootstrap.namespaces=application apollo.meta=http://config-service-url apollo.cache-dir=./config-cache apollo.cluster=default","title":"\u5feb\u901f\u4f7f\u7528"},{"location":"220524_Apollo_Client_Usage/#_2","text":"Apollo Client \u652f\u6301\u901a\u8fc7\u542f\u52a8\u53c2\u6570\u548c Spring Boot application.properties / bootstrap.properties \u5c5e\u6027\u6587\u4ef6\u914d\u7f6e\u3002 \u4ee5\u4e0b\u662f Apollo Client \u914d\u7f6e\u53c2\u6570\u7684\u8be6\u7ec6\u8bf4\u660e\uff0c\u67e5\u770b\u5b98\u65b9\u6587\u6863\u53ef\u4e86\u89e3\u66f4\u591a\u53c2\u6570\u914d\u7f6e\u4fe1\u606f\uff1a https://www.apolloconfig.com/#/zh/usage/java-sdk-user-guide # [\u5fc5\u9009] \u5f00\u542f Apollo \u914d\u7f6e # [\u6ce8\u610f] \u5982\u679c\u914d\u7f6e\u4e2d\u4f7f\u7528\u4e86 @EnableApolloConfig \u6ce8\u89e3\uff0c\u8be5\u914d\u7f6e\u5c06\u4e0d\u4f1a\u751f\u6548\u3002 apollo.bootstrap.enabled=true # [\u5fc5\u9009] \u6307\u5b9a app.id # AppId\u662f\u5e94\u7528\u7684\u8eab\u4efd\u4fe1\u606f\uff0c\u662f\u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u914d\u7f6e\u7684\u4e00\u4e2a\u91cd\u8981\u4fe1\u606f\u3002 # \u542f\u52a8\u53c2\u6570\uff1a-Dapp.id=YOUR-APP-ID # \u7cfb\u7edf\u53c2\u6570\uff1aAPP_ID=YOUR-APP-ID app.id=YOUR-APP-ID # [\u5fc5\u9009] \u6307\u5b9a\u914d\u7f6e\u670d\u52a1\u5668\u5730\u5740 # \u4e3a\u4e86\u5b9e\u73b0 meta server \u7684\u9ad8\u53ef\u7528\uff0c\u63a8\u8350\u901a\u8fc7 SLB \u505a\u52a8\u6001\u8d1f\u8f7d\u5747\u8861\u3002 # \u542f\u52a8\u53c2\u6570\uff1a-Dapollo.meta=http://config-service-url # \u7cfb\u7edf\u53c2\u6570\uff1aAPOLLO_META=http://config-service-url # \u5982\u679c\u662f\u5728\u8fd0\u884cJAR\u6587\u4ef6\u4e2d\u6307\u5b9a\uff0c\u9700\u8981\u6ce8\u610f\u683c\u5f0f\u662f\uff1ajava -Dapollo.meta=http://config-service-url -jar xxx.jar apollo.meta=http://config-service-url # [\u5fc5\u9009] \u6307\u5b9a\u914d\u7f6e\u73af\u5883 # \u542f\u52a8\u53c2\u6570\uff1a-Denv=DEV # \u7cfb\u7edf\u53c2\u6570\uff1aENV=DEV # \u591a\u73af\u5883\u65f6\uff0c\u8be5\u53c2\u6570\u5fc5\u987b\u901a\u8fc7\u542f\u52a8\u53c2\u6570\u6216\u7cfb\u7edf\u53c2\u6570\u6765\u6307\u5b9a\u3002 # \u5982\u679c\u662f\u8fd0\u884cJAR\u6587\u4ef6\uff0c\u9700\u8981\u6ce8\u610f\u683c\u5f0f\u662fjava -Denv=DEV -jar xxx.jar # [\u53ef\u9009] \u6307\u5b9a\u96c6\u7fa4\u73af\u5883 # Apollo\u652f\u6301\u914d\u7f6e\u6309\u7167\u96c6\u7fa4\u5212\u5206\uff0c\u4e5f\u5c31\u662f\u8bf4\u5bf9\u4e8e\u4e00\u4e2aAppId\u548c\u4e00\u4e2a\u73af\u5883\uff0c\u5bf9\u4e0d\u540c\u7684\u96c6\u7fa4\u53ef\u4ee5\u6709\u4e0d\u540c\u7684\u914d\u7f6e\u3002 # \u5982\u679c\u8fd8\u662f\u6ca1\u627e\u5230\u6307\u5b9a\u96c6\u7fa4\uff0c\u4f1a\u4ece\u9ed8\u8ba4\u7684\u96c6\u7fa4\uff08default\uff09\u52a0\u8f7d\u3002 # \u542f\u52a8\u53c2\u6570\uff1a-Dapollo.cluster=SomeCluster apollo.cluster=default # [\u53ef\u9009] \u8bbe\u7f6e\u5185\u5b58\u4e2d\u7684\u914d\u7f6e\u9879\u662f\u5426\u4fdd\u6301\u548c\u9875\u9762\u4e0a\u7684\u987a\u5e8f\u4e00\u81f4\uff0c\u9ed8\u8ba4false # \u6709\u4e9b\u573a\u666f\u4f1a\u5f3a\u4f9d\u8d56\u914d\u7f6e\u9879\u7684\u987a\u5e8f\uff08\u5982spring cloud zuul\u7684\u8def\u7531\u89c4\u5219\uff09 # \u9488\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u5f00\u542f OrderedProperties \u7279\u6027\u6765\u4f7f\u5f97\u5185\u5b58\u4e2d\u7684\u914d\u7f6e\u987a\u5e8f\u548c\u9875\u9762\u4e0a\u770b\u5230\u7684\u4e00\u81f4\u3002 # -Dapollo.property.order.enable=true # apollo.property.order.enable=false # [\u53ef\u9009] \u5c06 Apollo \u914d\u7f6e\u52a0\u8f7d\u63d0\u5230\u521d\u59cb\u5316\u65e5\u5fd7\u7cfb\u7edf\u4e4b\u524d\uff0c\u4e0d\u8fc7\u8fd9\u4f1a\u5bfc\u81f4 Apollo \u7684\u542f\u52a8\u8fc7\u7a0b\u65e0\u6cd5\u901a\u8fc7\u65e5\u5fd7\u7684\u65b9\u5f0f\u8f93\u51fa\u3002 apollo.bootstrap.eagerLoad.enabled=true # [\u53ef\u9009] \u81ea\u5b9a\u4e49\u7f13\u5b58\u8def\u5f84 # \u542f\u52a8\u53c2\u6570\uff1a-Dapollo.cache-dir=/opt/data/config-cache # \u7cfb\u7edf\u53c2\u6570\uff1aAPOLLO_CACHE_DIR=/opt/data/config-cache apollo.cache-dir=/opt/data/config-cache # [\u53ef\u9009] \u914d\u7f6e\u8bbf\u95ee\u5bc6\u94a5\uff08\u5982\u679c\u914d\u7f6e\u4e2d\u5fc3\u8981\u6c42\u4f7f\u7528\u8bbf\u95ee\u5bc6\u94a5\uff0c\u5219\u5fc5\u987b\u914d\u7f6e\uff09 # \u542f\u52a8\u53c2\u6570\uff1a-Dapollo.access-key.secret=1cf998c4e2ad4704b45a98a509d15719 # \u7cfb\u7edf\u53c2\u6570\uff1aAPOLLO_ACCESS_KEY_SECRET=1cf998c4e2ad4704b45a98a509d15719 # \u5982\u679c\u662f\u8fd0\u884cJAR\u6587\u4ef6\uff0c\u9700\u8981\u6ce8\u610f\u683c\u5f0f\u662fjava -Dapollo.access-key.secret=1cf998c4e2ad4704b45a98a509d15719 -jar xxx.jar # apollo.access-key.secret=1cf998c4e2ad4704b45a98a509d15719 # [\u5fc5\u9009] \u6307\u5b9a\u52a0\u8f7d\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u9ed8\u8ba4\u4f1a\u52a0\u8f7d application apollo.bootstrap.namespaces=application,FX.apollo,application.yml Environment \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b3\u79cd\u65b9\u5f0f\u7684\u4efb\u610f\u4e00\u4e2a\u914d\u7f6e\uff1a 1\uff09\u901a\u8fc7 Java System Property (\u63a8\u8350) \u53ef\u4ee5\u901a\u8fc7 Java \u7684 System Property env \u6765\u6307\u5b9a\u73af\u5883\u3002 \u5728 Java \u7a0b\u5e8f\u542f\u52a8\u811a\u672c\u4e2d\uff0c\u53ef\u4ee5\u6307\u5b9a -Denv=YOUR-ENVIRONMENT \u5982\u679c\u662f\u8fd0\u884c JAR \u6587\u4ef6\uff0c\u9700\u8981\u6ce8\u610f\u683c\u5f0f\u662f java -Denv=YOUR-ENVIRONMENT -jar xxx.jar \u6ce8\u610f key \u4e3a\u5168\u5c0f\u5199 2\uff09\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684 System Environment \u8fd8\u53ef\u4ee5\u901a\u8fc7\u64cd\u4f5c\u7cfb\u7edf\u7684 System Environment ENV \u6765\u6307\u5b9a ENV=YOUR-ENVIRONMENT \u6ce8\u610f key \u4e3a\u5168\u5927\u5199 3\uff09\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6 \u6700\u540e\u4e00\u4e2a\u63a8\u8350\u7684\u65b9\u5f0f\u662f\u901a\u8fc7\u914d\u7f6e\u6587\u4ef6\u6765\u6307\u5b9a env=YOUR-ENVIRONMENT \u5bf9\u4e8e Mac/Linux\uff0c\u9ed8\u8ba4\u6587\u4ef6\u4f4d\u7f6e\u4e3a /opt/settings/server.properties \u5bf9\u4e8e Windows\uff0c\u9ed8\u8ba4\u6587\u4ef6\u4f4d\u7f6e\u4e3a C:\\opt\\settings\\server.properties","title":"\u914d\u7f6e\u53c2\u6570\u8be6\u89e3"},{"location":"220524_Apollo_Client_Usage/#_3","text":"Apollo \u5ba2\u6237\u7aef\u4f1a\u628a\u4ece\u670d\u52a1\u7aef\u83b7\u53d6\u5230\u7684\u914d\u7f6e\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7f13\u5b58\u4e00\u4efd\uff0c\u7528\u4e8e\u5728\u9047\u5230\u670d\u52a1\u4e0d\u53ef\u7528\uff0c\u6216\u7f51\u7edc\u4e0d\u901a\u7684\u65f6\u5019\uff0c\u4f9d\u7136\u80fd\u4ece\u672c\u5730\u6062\u590d\u914d\u7f6e\uff0c\u4e0d\u5f71\u54cd\u5e94\u7528\u6b63\u5e38\u8fd0\u884c\u3002 \u672c\u5730\u7f13\u5b58\u8def\u5f84\u9ed8\u8ba4\u4f4d\u4e8e\u4ee5\u4e0b\u8def\u5f84\uff0c\u6240\u4ee5\u8bf7\u786e\u4fdd /opt/data \u6216 C:\\opt\\data \u76ee\u5f55\u5b58\u5728\uff0c\u4e14\u5e94\u7528\u6709\u8bfb\u5199\u6743\u9650\u3002 Mac/Linux: /opt/data/{appId}/config-cache Windows: C:\\opt\\data{appId}\\config-cache \u6216\u8005\uff0c\u6307\u5b9a\u914d\u7f6e\u6587\u4ef6\u8def\u5f84\uff08\u63a8\u8350\uff09\uff1a apollo.cache-dir=./config-cache \u672c\u5730\u914d\u7f6e\u6587\u4ef6\u4f1a\u4ee5\u4e0b\u9762\u7684\u6587\u4ef6\u540d\u683c\u5f0f\u653e\u7f6e\u4e8e\u672c\u5730\u7f13\u5b58\u8def\u5f84\u4e0b\uff1a {appId}+{cluster}+{namespace}.properties appId \u5c31\u662f\u5e94\u7528\u81ea\u5df1\u7684 appId\uff08\u53ef\u89c4\u8303\u547d\u540d\u89c4\u5219\uff09\uff0c\u5982 100004458 cluster \u5c31\u662f\u5e94\u7528\u4f7f\u7528\u7684\u96c6\u7fa4\uff0c\u4e00\u822c\u5728\u672c\u5730\u6a21\u5f0f\u4e0b\u6ca1\u6709\u505a\u8fc7\u914d\u7f6e\u7684\u8bdd\uff0c\u5c31\u662f default namespace \u5c31\u662f\u5e94\u7528\u4f7f\u7528\u7684\u914d\u7f6e namespace\uff0c\u4e00\u822c\u662f application","title":"\u672c\u5730\u7f13\u5b58\u8def\u5f84"},{"location":"220524_Apollo_Client_Usage/#spring","text":"Spring \u5e94\u7528\u901a\u5e38\u4f1a\u4f7f\u7528 Placeholder \u6765\u6ce8\u5165\u914d\u7f6e\uff0c\u4f7f\u7528\u683c\u5f0f\u5982 ${someKey:someDefaultValue}\u3002\u5192\u53f7\u524d\u9762\u7684\u662f key\uff0c\u5192\u53f7\u540e\u9762\u7684\u662f\u9ed8\u8ba4\u503c\u3002 \u5efa\u8bae\u5728\u5b9e\u9645\u4f7f\u7528\u65f6\u5c3d\u91cf\u7ed9\u51fa\u9ed8\u8ba4\u503c\uff0c\u4ee5\u514d\u7531\u4e8e key \u6ca1\u6709\u5b9a\u4e49\u5bfc\u81f4\u8fd0\u884c\u65f6\u9519\u8bef\u3002 \u4ece Apollo v0.10.0 \u5f00\u59cb\u7684\u7248\u672c\u652f\u6301 Placeholder \u5728\u8fd0\u884c\u65f6\u81ea\u52a8\u66f4\u65b0\u3002 1\uff09\u5047\u8bbe\u6709\u4e00\u4e2a TestJavaConfigBean\uff0c\u901a\u8fc7 Java Config \u7684\u65b9\u5f0f\u53ef\u4ee5\u4f7f\u7528 @Value \u7684\u65b9\u5f0f\u6ce8\u5165\uff1a public class TestJavaConfigBean { @Value(\"${timeout:100}\") private int timeout; private int batch; @Value(\"${batch:200}\") public void setBatch(int batch) { this.batch = batch; } public int getTimeout() { return timeout; } public int getBatch() { return batch; } } \u5728 Configuration \u7c7b\u4e2d\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u4f7f\u7528\uff08\u5047\u8bbe\u5e94\u7528\u9ed8\u8ba4\u7684 application namespace \u4e2d\u6709 timeout \u548c batch \u7684\u914d\u7f6e\u9879\uff09\uff1a @Configuration @EnableApolloConfig public class AppConfig { @Bean public TestJavaConfigBean javaConfigBean() { return new TestJavaConfigBean(); } } 2\uff09Spring Boot \u63d0\u4f9b\u4e86 @ConfigurationProperties \u628a\u914d\u7f6e\u6ce8\u5165\u5230 bean \u5bf9\u8c61\u4e2d\u3002 Apollo \u4e5f\u652f\u6301\u8fd9\u79cd\u65b9\u5f0f\uff0c\u4e0b\u9762\u7684\u4f8b\u5b50\u4f1a\u628a redis.cache.expireSeconds \u548c redis.cache.commandTimeout \u5206\u522b\u6ce8\u5165\u5230 SampleRedisConfig \u7684 expireSeconds \u548c commandTimeout \u5b57\u6bb5\u4e2d\u3002 @ConfigurationProperties(prefix = \"redis.cache\") public class SampleRedisConfig { private int expireSeconds; private int commandTimeout; public void setExpireSeconds(int expireSeconds) { this.expireSeconds = expireSeconds; } public void setCommandTimeout(int commandTimeout) { this.commandTimeout = commandTimeout; } } \u5728 Configuration \u7c7b\u4e2d\u6309\u7167\u4e0b\u9762\u7684\u65b9\u5f0f\u4f7f\u7528\uff08\u5047\u8bbe\u5e94\u7528\u9ed8\u8ba4\u7684 application namespace \u4e2d\u6709 redis.cache.expireSeconds \u548c redis.cache.commandTimeout \u7684\u914d\u7f6e\u9879\uff09\uff1a @Configuration @EnableApolloConfig public class AppConfig { @Bean public SampleRedisConfig sampleRedisConfig() { return new SampleRedisConfig(); } }","title":"\u5728 Spring \u4e2d\u7684\u4f7f\u7528"},{"location":"220528_lombok/","text":"Lombok \u4f7f\u7528\u6307\u5357 \u00b6 Lombok \u662f\u4e00\u4e2a Java \u5e93\uff0c\u80fd\u81ea\u52a8\u63d2\u5165\u7f16\u8f91\u5668\u548c\u6784\u5efa\u5de5\u5177\u4e2d\uff0c\u7b80\u5316 Java \u5f00\u53d1\u3002\u901a\u8fc7\u6dfb\u52a0\u6ce8\u89e3\u7684\u65b9\u5f0f\uff0c\u4e0d\u9700\u8981\u4e3a\u7c7b\u7f16\u5199 getter \u6216 eques \u7b49\u65b9\u6cd5\uff0c\u540c\u65f6\u53ef\u4ee5\u81ea\u52a8\u5316\u65e5\u5fd7\u53d8\u91cf\u3002 \u7b80\u800c\u8a00\u4e4b\uff1aLombok \u80fd\u4ee5\u7b80\u5355\u7684\u6ce8\u89e3\u5f62\u5f0f\u6765\u7b80\u5316 Java \u4ee3\u7801\uff0c\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u5f00\u53d1\u6548\u7387\u3002 \u5b98\u7f51\u94fe\u63a5\uff1a https://projectlombok.org/ \u4ee5\u524d\u7684 Java \u9879\u76ee\u4e2d\uff0c\u5145\u65a5\u7740\u592a\u591a\u4e0d\u53cb\u597d\u7684\u4ee3\u7801\uff1aPOJO \u7684 getter/setter/toString\uff1b\u5f02\u5e38\u5904\u7406\uff1bI/O \u6d41\u7684\u5173\u95ed\u64cd\u4f5c\u7b49\u7b49\uff0c\u8fd9\u4e9b\u6837\u677f\u4ee3\u7801\u65e2\u6ca1\u6709\u6280\u672f\u542b\u91cf\uff0c\u53c8\u5f71\u54cd\u7740\u4ee3\u7801\u7684\u7f8e\u89c2\uff0cLombok\u5e94\u8fd0\u800c\u751f\u3002\u5bf9\u4e8e Lombok \u7684\u4f7f\u7528\uff0c\u4e5f\u5b58\u5728\u7740\u4e0d\u5c11\u4e89\u8bba\u3002\u4f46\u662f\uff0cIDEA 2020 \u6700\u540e\u4e00\u4e2a\u53d1\u5e03\u7248\u672c\u5df2\u7ecf\u5185\u7f6e\u4e86 Lombok \u63d2\u4ef6\uff0c\u5e76\u4e14 SpringBoot 2.1.x \u4e4b\u540e\u7684\u7248\u672c\u4e5f\u5728 Starter \u4e2d\u5185\u7f6e\u4e86 Lombok \u4f9d\u8d56\u3002\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u90fd\u8981\u652f\u6301 Lombok \u5462\uff1f\u672c\u6587\u5c31\u6765\u804a\u804a Lombok \u7684\u4f7f\u7528\uff0c\u770b\u770b\u5b83\u6709\u4f55\u795e\u5947\u4e4b\u5904\uff01 \u5feb\u901f\u4f7f\u7528 \u00b6 1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u7684\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u914d\u7f6e\uff1a <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> <scope>provided</scope> </dependency> 2\uff09\u5e38\u7528\u6ce8\u89e3\uff1a \u6ce8\u89e3 \u8bf4\u660e @Setter \u6ce8\u89e3\u5728\u7c7b\u6216\u5b57\u6bb5\uff0c\u6ce8\u89e3\u5728\u7c7b\u65f6\u4e3a\u6240\u6709\u5b57\u6bb5\u751f\u6210 setter \u65b9\u6cd5\uff0c\u6ce8\u89e3\u5728\u5b57\u6bb5\u4e0a\u65f6\u53ea\u4e3a\u8be5\u5b57\u6bb5\u751f\u6210 setter \u65b9\u6cd5\u3002 @Getter \u4f7f\u7528\u65b9\u6cd5\u540c\u4e0a\uff0c\u533a\u522b\u5728\u4e8e\u751f\u6210\u7684\u662f getter \u65b9\u6cd5\u3002 @ToString \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210 toString \u65b9\u6cd5\u3002 @EqualsAndHashCode \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210 hashCode \u548c equals \u65b9\u6cd5\u3002 @NoArgsConstructor \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u3002 @RequiredArgsConstructor \u6ce8\u89e3\u5728\u7c7b\uff0c\u4e3a\u7c7b\u4e2d\u9700\u8981\u7279\u6b8a\u5904\u7406\u7684\u5b57\u6bb5\u751f\u6210\u6784\u9020\u65b9\u6cd5\uff0c\u6bd4\u5982 final \u548c\u88ab @NonNull \u6ce8\u89e3\u7684\u5b57\u6bb5\u3002 @AllArgsConstructor \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210\u5305\u542b\u7c7b\u4e2d\u6240\u6709\u5b57\u6bb5\u7684\u6784\u9020\u65b9\u6cd5\u3002 @Data \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210 setter/getter\u3001equals\u3001canEqual\u3001hashCode\u3001toString \u65b9\u6cd5\uff0c\u5982\u4e3a final \u5c5e\u6027\uff0c\u5219\u4e0d\u4f1a\u4e3a\u8be5\u5c5e\u6027\u751f\u6210 setter \u65b9\u6cd5\u3002 @Slf4j \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210 log \u53d8\u91cf\uff0c\u4e25\u683c\u610f\u4e49\u6765\u8bf4\u662f\u5e38\u91cf\u3002\u7b49\u540c\u4e8e\uff1aprivate static final Logger log = LoggerFactory.getLogger(UserController.class); \u5b89\u88c5\u63d2\u4ef6 \u00b6 \u5728 IntelliJ IDEA \u6216\u8005 Eclipse \u4e2d\u4f7f\u7528 Lombok \u9700\u8981\u5b89\u88c5 Lombok Plugin\u3002\u56e0\u6b64\uff0cLombok \u4e5f\u5b58\u5728\u4e00\u5b9a\u98ce\u9669\uff0c\u5728\u4e00\u4e9b\u5f00\u53d1\u5de5\u5177\u4e2d\u6ca1\u6709 Project Lombok \u652f\u6301\u9009\u62e9\u3002 IDE \u548c JDK \u5347\u7ea7\u4e5f\u5b58\u5728\u7834\u88c2\u7684\u98ce\u9669\uff0c\u4ee5\u53ca\u56f4\u7ed5\u9879\u76ee\u7684\u76ee\u6807\u548c\u5b9e\u65bd\u5b58\u5728\u4e89\u8bae\u3002 \u5b98\u65b9\u6587\u6863\u5df2\u63d0\u4f9b\u4e86\u4e0d\u540c IDEA \u7684\u63d2\u4ef6\u5b89\u88c5\u65b9\u6cd5\uff1a Eclipse: https://projectlombok.org/setup/eclipse IntelliJ IDEA: https://projectlombok.org/setup/intellij","title":"Lombok \u4f7f\u7528\u6307\u5357"},{"location":"220528_lombok/#lombok","text":"Lombok \u662f\u4e00\u4e2a Java \u5e93\uff0c\u80fd\u81ea\u52a8\u63d2\u5165\u7f16\u8f91\u5668\u548c\u6784\u5efa\u5de5\u5177\u4e2d\uff0c\u7b80\u5316 Java \u5f00\u53d1\u3002\u901a\u8fc7\u6dfb\u52a0\u6ce8\u89e3\u7684\u65b9\u5f0f\uff0c\u4e0d\u9700\u8981\u4e3a\u7c7b\u7f16\u5199 getter \u6216 eques \u7b49\u65b9\u6cd5\uff0c\u540c\u65f6\u53ef\u4ee5\u81ea\u52a8\u5316\u65e5\u5fd7\u53d8\u91cf\u3002 \u7b80\u800c\u8a00\u4e4b\uff1aLombok \u80fd\u4ee5\u7b80\u5355\u7684\u6ce8\u89e3\u5f62\u5f0f\u6765\u7b80\u5316 Java \u4ee3\u7801\uff0c\u63d0\u9ad8\u5f00\u53d1\u4eba\u5458\u7684\u5f00\u53d1\u6548\u7387\u3002 \u5b98\u7f51\u94fe\u63a5\uff1a https://projectlombok.org/ \u4ee5\u524d\u7684 Java \u9879\u76ee\u4e2d\uff0c\u5145\u65a5\u7740\u592a\u591a\u4e0d\u53cb\u597d\u7684\u4ee3\u7801\uff1aPOJO \u7684 getter/setter/toString\uff1b\u5f02\u5e38\u5904\u7406\uff1bI/O \u6d41\u7684\u5173\u95ed\u64cd\u4f5c\u7b49\u7b49\uff0c\u8fd9\u4e9b\u6837\u677f\u4ee3\u7801\u65e2\u6ca1\u6709\u6280\u672f\u542b\u91cf\uff0c\u53c8\u5f71\u54cd\u7740\u4ee3\u7801\u7684\u7f8e\u89c2\uff0cLombok\u5e94\u8fd0\u800c\u751f\u3002\u5bf9\u4e8e Lombok \u7684\u4f7f\u7528\uff0c\u4e5f\u5b58\u5728\u7740\u4e0d\u5c11\u4e89\u8bba\u3002\u4f46\u662f\uff0cIDEA 2020 \u6700\u540e\u4e00\u4e2a\u53d1\u5e03\u7248\u672c\u5df2\u7ecf\u5185\u7f6e\u4e86 Lombok \u63d2\u4ef6\uff0c\u5e76\u4e14 SpringBoot 2.1.x \u4e4b\u540e\u7684\u7248\u672c\u4e5f\u5728 Starter \u4e2d\u5185\u7f6e\u4e86 Lombok \u4f9d\u8d56\u3002\u4e3a\u4ec0\u4e48\u4ed6\u4eec\u90fd\u8981\u652f\u6301 Lombok \u5462\uff1f\u672c\u6587\u5c31\u6765\u804a\u804a Lombok \u7684\u4f7f\u7528\uff0c\u770b\u770b\u5b83\u6709\u4f55\u795e\u5947\u4e4b\u5904\uff01","title":"Lombok \u4f7f\u7528\u6307\u5357"},{"location":"220528_lombok/#_1","text":"1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u7684\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u914d\u7f6e\uff1a <dependency> <groupId>org.projectlombok</groupId> <artifactId>lombok</artifactId> <scope>provided</scope> </dependency> 2\uff09\u5e38\u7528\u6ce8\u89e3\uff1a \u6ce8\u89e3 \u8bf4\u660e @Setter \u6ce8\u89e3\u5728\u7c7b\u6216\u5b57\u6bb5\uff0c\u6ce8\u89e3\u5728\u7c7b\u65f6\u4e3a\u6240\u6709\u5b57\u6bb5\u751f\u6210 setter \u65b9\u6cd5\uff0c\u6ce8\u89e3\u5728\u5b57\u6bb5\u4e0a\u65f6\u53ea\u4e3a\u8be5\u5b57\u6bb5\u751f\u6210 setter \u65b9\u6cd5\u3002 @Getter \u4f7f\u7528\u65b9\u6cd5\u540c\u4e0a\uff0c\u533a\u522b\u5728\u4e8e\u751f\u6210\u7684\u662f getter \u65b9\u6cd5\u3002 @ToString \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210 toString \u65b9\u6cd5\u3002 @EqualsAndHashCode \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210 hashCode \u548c equals \u65b9\u6cd5\u3002 @NoArgsConstructor \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210\u65e0\u53c2\u7684\u6784\u9020\u65b9\u6cd5\u3002 @RequiredArgsConstructor \u6ce8\u89e3\u5728\u7c7b\uff0c\u4e3a\u7c7b\u4e2d\u9700\u8981\u7279\u6b8a\u5904\u7406\u7684\u5b57\u6bb5\u751f\u6210\u6784\u9020\u65b9\u6cd5\uff0c\u6bd4\u5982 final \u548c\u88ab @NonNull \u6ce8\u89e3\u7684\u5b57\u6bb5\u3002 @AllArgsConstructor \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210\u5305\u542b\u7c7b\u4e2d\u6240\u6709\u5b57\u6bb5\u7684\u6784\u9020\u65b9\u6cd5\u3002 @Data \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210 setter/getter\u3001equals\u3001canEqual\u3001hashCode\u3001toString \u65b9\u6cd5\uff0c\u5982\u4e3a final \u5c5e\u6027\uff0c\u5219\u4e0d\u4f1a\u4e3a\u8be5\u5c5e\u6027\u751f\u6210 setter \u65b9\u6cd5\u3002 @Slf4j \u6ce8\u89e3\u5728\u7c7b\uff0c\u751f\u6210 log \u53d8\u91cf\uff0c\u4e25\u683c\u610f\u4e49\u6765\u8bf4\u662f\u5e38\u91cf\u3002\u7b49\u540c\u4e8e\uff1aprivate static final Logger log = LoggerFactory.getLogger(UserController.class);","title":"\u5feb\u901f\u4f7f\u7528"},{"location":"220528_lombok/#_2","text":"\u5728 IntelliJ IDEA \u6216\u8005 Eclipse \u4e2d\u4f7f\u7528 Lombok \u9700\u8981\u5b89\u88c5 Lombok Plugin\u3002\u56e0\u6b64\uff0cLombok \u4e5f\u5b58\u5728\u4e00\u5b9a\u98ce\u9669\uff0c\u5728\u4e00\u4e9b\u5f00\u53d1\u5de5\u5177\u4e2d\u6ca1\u6709 Project Lombok \u652f\u6301\u9009\u62e9\u3002 IDE \u548c JDK \u5347\u7ea7\u4e5f\u5b58\u5728\u7834\u88c2\u7684\u98ce\u9669\uff0c\u4ee5\u53ca\u56f4\u7ed5\u9879\u76ee\u7684\u76ee\u6807\u548c\u5b9e\u65bd\u5b58\u5728\u4e89\u8bae\u3002 \u5b98\u65b9\u6587\u6863\u5df2\u63d0\u4f9b\u4e86\u4e0d\u540c IDEA \u7684\u63d2\u4ef6\u5b89\u88c5\u65b9\u6cd5\uff1a Eclipse: https://projectlombok.org/setup/eclipse IntelliJ IDEA: https://projectlombok.org/setup/intellij","title":"\u5b89\u88c5\u63d2\u4ef6"},{"location":"220606_Mybatis_Plus/","text":"MyBatis-Plus \u00b6 MyBatis-Plus \u662f\u4e00\u4e2a MyBatis \u7684\u589e\u5f3a\u5de5\u5177\uff0c\u5728 MyBatis \u7684\u57fa\u7840\u4e0a\u53ea\u505a\u589e\u5f3a\u4e0d\u505a\u6539\u53d8\uff0c\u4e3a\u7b80\u5316\u5f00\u53d1\u3001\u63d0\u9ad8\u6548\u7387\u800c\u751f\u3002 kaddo-components-mybatis-plus \u6a21\u5757\u7ef4\u62a4\u4e86\u4e00\u5957\u8f83\u4e3a\u5e38\u7528\u7684 MyBatis-Plus \u914d\u7f6e\uff0c\u652f\u6301\u5728\u9879\u76ee\u5f00\u53d1\u4e2d\u5feb\u901f\u6784\u5efa\u548c\u4f7f\u7528\u3002 \u5feb\u901f\u5f00\u59cb \u00b6 1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0 Maven \u4f9d\u8d56\uff1a <dependency> <groupId>com.kaddo</groupId> <artifactId>kaddo-components-mybatis-plus</artifactId> <version>${kaddo.version}</version> </dependency> 2\uff09\u7136\u540e\uff0c\u6839\u636e\u6570\u636e\u5e93\u9009\u62e9\u9a71\u52a8\uff0c\u4ee5 H2 \u6570\u636e\u5e93\u4e3a\u4f8b\uff1a <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> <scope>runtime</scope> </dependency> 3\uff09\u5728 application.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 H2 \u6570\u636e\u5e93\u7684\u76f8\u5173\u914d\u7f6e\uff1a # DataSource Configuration spring.datasource.driver-class-name=org.h2.Driver spring.datasource.schema=classpath:db/schema-h2.sql spring.datasource.data=classpath:db/data-h2.sql spring.datasource.url=jdbc:h2:mem:test spring.datasource.username=root spring.datasource.password=test 4\uff09\u5728 application.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 MyBatis-Plus \u914d\u7f6e\uff1a ## MyBatis-Plus Configuration mybatis-plus.type-aliases-package=com.baomidou.mybatisplus.samples.quickstart.model mybatis-plus.mapper-locations=classpath*:/mapper/**/*.xml mybatis-plus.configuration.map-underscore-to-camel-case=true mybatis-plus.configuration.default-executor-type=reuse mybatis-plus.configuration.default-fetch-size=100 mybatis-plus.configuration.default-statement-timeout=30 mybatis-plus.configuration.cache-enabled=true 5\uff09\u5728 Spring Boot \u542f\u52a8\u7c7b\u4e2d\u6dfb\u52a0 @MapperScan \u6ce8\u89e3\uff0c\u626b\u63cf Mapper \u6587\u4ef6\u5939\uff1a @SpringBootApplication @MapperScan(\"com.baomidou.mybatisplus.samples.quickstart.mapper\") public class Application { public static void main(String[] args) { SpringApplication.run(Application.class, args); } } 6\uff09\u7f16\u5199\u5b9e\u4f53\u7c7b\u548c\u6570\u636e\u5c42\u5bf9\u8c61\uff1a @Data public class User { private Long id; private String name; private Integer age; private String email; } \u7f16\u5199 Mapper \u5305\u4e0b\u7684 UserMapper \u63a5\u53e3\uff1a @Mapper public interface UserMapper extends BaseMapper<User> { } 7\uff09\u5f00\u59cb\u4f7f\u7528\uff1a @SpringBootTest public class SampleTest { @Autowired private UserMapper userMapper; @Test public void testSelect() { System.out.println((\"----- selectAll method test ------\")); List<User> userList = userMapper.selectList(null); Assert.assertEquals(5, userList.size()); userList.forEach(System.out::println); } } \u914d\u7f6e\u8be6\u89e3 \u00b6 MyBatis \u7684\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u4e86\u4f1a\u6df1\u6df1\u5f71\u54cd MyBatis \u884c\u4e3a\u7684\u8bbe\u7f6e\u548c\u5c5e\u6027\u4fe1\u606f\u3002\u5b98\u65b9\u914d\u7f6e\u6587\u6863\uff1a https://mybatis.org/mybatis-3/zh/configuration.html ## MyBatis-Plus Configuration # \u6307\u5b9a MyBatis XML \u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e\u3002 # \u6ce8\u610f\uff1aSpring Boot \u9879\u76ee\u4e0d\u652f\u6301 config-location \u548c configuration.* \u540c\u65f6\u51fa\u73b0\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u4f7f\u7528\u8be5\u5c5e\u6027\u3002 mybatis-plus.config-location=classpath*:mybatis-config.xml # MyBatis Mapper \u6240\u5bf9\u5e94\u7684 XML \u6587\u4ef6\u4f4d\u7f6e\uff0c\u544a\u8bc9 Mapper \u6240\u5bf9\u5e94\u7684 XML \u6587\u4ef6\u4f4d\u7f6e\u3002 # \u9ed8\u8ba4\u503c\uff1aclasspath*:/mapper/**/*.xml\uff0c\u591a\u4e2a\u7528\u82f1\u6587\u9017\u53f7\u5206\u9694\u3002 mybatis-plus.mapper-locations=classpath*:/mapper/**/*.xml # MyBaits \u522b\u540d\u5305\u626b\u63cf\u8def\u5f84\uff0c\u901a\u8fc7\u8be5\u5c5e\u6027\u53ef\u4ee5\u7ed9\u5305\u4e2d\u7684\u7c7b\u6ce8\u518c\u522b\u540d\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e\u3002 # \u4e5f\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3 @Alias(\"author\") \u6765\u6307\u5b9a\u7c7b\u7684\u522b\u540d\u3002 mybatis-plus.type-aliases-package=com.baomidou.mybatisplus.samples.quickstart.model # TypeHandler \u626b\u63cf\u8def\u5f84\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u8be5\u5c5e\u6027\uff0cSqlSessionFactoryBean \u4f1a\u628a\u8be5\u5305\u4e0b\u9762\u7684\u7c7b\u6ce8\u518c\u4e3a\u5bf9\u5e94\u7684 TypeHandler\u3002 # \u901a\u5e38\u7528\u4e8e\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e\u3002 mybatis-plus.type-handlers-package= # \u542f\u52a8\u65f6\u662f\u5426\u68c0\u67e5 MyBatis XML \u6587\u4ef6\u7684\u5b58\u5728\uff0c\u9ed8\u8ba4\u4e0d\u68c0\u67e5\u3002 mybatis-plus.check-config-location=false # \u901a\u8fc7\u8be5\u5c5e\u6027\u53ef\u6307\u5b9a MyBatis \u7684\u6267\u884c\u5668\uff0cMyBatis \u7684\u6267\u884c\u5668\u603b\u5171\u6709\u4e09\u79cd\uff1a # ExecutorType.SIMPLE\uff1a\u8be5\u6267\u884c\u5668\u7c7b\u578b\u4e0d\u505a\u7279\u6b8a\u7684\u4e8b\u60c5\uff0c\u4e3a\u6bcf\u4e2a\u8bed\u53e5\u7684\u6267\u884c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9884\u5904\u7406\u8bed\u53e5\uff08PreparedStatement\uff09 # ExecutorType.REUSE\uff1a\u8be5\u6267\u884c\u5668\u7c7b\u578b\u4f1a\u590d\u7528\u9884\u5904\u7406\u8bed\u53e5\uff08PreparedStatement\uff09 # ExecutorType.BATCH\uff1a\u8be5\u6267\u884c\u5668\u7c7b\u578b\u4f1a\u6279\u91cf\u6267\u884c\u6240\u6709\u7684\u66f4\u65b0\u8bed\u53e5 # \u9ed8\u8ba4\u503c\uff1aSIMPLE mybatis-plus.executor-type=SIMPLE # \u662f\u5426\u5f00\u542f\u81ea\u52a8\u9a7c\u5cf0\u547d\u540d\u89c4\u5219\uff08camel case\uff09\u6620\u5c04\uff0c\u9ed8\u8ba4\u503c\uff1atrue mybatis-plus.configuration.map-underscore-to-camel-case=true # \u9ed8\u8ba4\u679a\u4e3e\u5904\u7406\u7c7b\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u8be5\u5c5e\u6027\uff0c\u679a\u4e3e\u5c06\u7edf\u4e00\u4f7f\u7528\u6307\u5b9a\u5904\u7406\u5668\u8fdb\u884c\u5904\u7406\u3002 # \u9ed8\u8ba4\u4e3a\u5b58\u50a8\u679a\u4e3e\u7c7b\u7684\u540d\u79f0\u3002 mybatis-plus.configuration.default-enum-type-handler=org.apache.ibatis.type.EnumTypeHandler # MyBatis \u81ea\u52a8\u6620\u5c04\u7b56\u7565\uff0c\u901a\u8fc7\u8be5\u914d\u7f6e\u53ef\u6307\u5b9a MyBatis \u662f\u5426\u5e76\u4e14\u5982\u4f55\u6765\u81ea\u52a8\u6620\u5c04\u6570\u636e\u8868\u5b57\u6bb5\u4e0e\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u603b\u5171\u6709 3 \u79cd\u53ef\u9009\u503c\uff1a # AutoMappingBehavior.NONE\uff1a\u4e0d\u542f\u7528\u81ea\u52a8\u6620\u5c04 # AutoMappingBehavior.PARTIAL\uff1a\u53ea\u5bf9\u975e\u5d4c\u5957\u7684 resultMap \u8fdb\u884c\u81ea\u52a8\u6620\u5c04 # AutoMappingBehavior.FULL\uff1a\u5bf9\u6240\u6709\u7684 resultMap \u90fd\u8fdb\u884c\u81ea\u52a8\u6620\u5c04 # \u9ed8\u8ba4\u503c\uff1aPARTIAL mybatis-plus.configuration.auto-mapping-behavior=PARTIAL # \u5f00\u542f Mybatis \u4e8c\u7ea7\u7f13\u5b58\uff0c\u9ed8\u8ba4\u503c\uff1atrue\u3002 mybatis-plus.configuration.cache-enabled=true # \u4e3a\u9a71\u52a8\u7684\u7ed3\u679c\u96c6\u83b7\u53d6\u6570\u91cf\uff08fetchSize\uff09\u8bbe\u7f6e\u4e00\u4e2a\u5efa\u8bae\u503c\u3002\u6b64\u53c2\u6570\u53ea\u53ef\u4ee5\u5728\u67e5\u8be2\u8bbe\u7f6e\u4e2d\u88ab\u8986\u76d6\u3002 mybatis-plus.configuration.default-fetch-size=100 # \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u5b83\u51b3\u5b9a\u6570\u636e\u5e93\u9a71\u52a8\u7b49\u5f85\u6570\u636e\u5e93\u54cd\u5e94\u7684\u79d2\u6570\u3002 mybatis-plus.configuration.default-statement-timeout=30 \u6ce8\u89e3 \u00b6 MyBatis-Plus \u63d0\u4f9b\u4e86\u4e00\u4e9b\u6ce8\u89e3\uff0c\u4ec5\u4f9b\u53c2\u8003\uff1a https://baomidou.com/pages/223848/ @TableName @TableId @TableField @Version @EnumValue @TableLogic @SqlParser @KeySequence @InterceptorIgnore @OrderBy \u6838\u5fc3\u529f\u80fd \u00b6 \u4f7f\u7528 MyBatis-Plus \u63d0\u4f9b\u7684\u589e\u5f3a\u529f\u80fd\u65f6\uff0c\u9996\u5148\u8981\u5bf9 MyBatis-Plus \u6709\u4e00\u5b9a\u7684\u4e86\u89e3\uff0c\u5426\u5219\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u7528 MyBatis \u7684\u539f\u751f\u529f\u80fd\u3002 MyBatis-Plus \u63d0\u4f9b\u7684\u589e\u5f3a\u529f\u80fd\u5177\u6709\u4e00\u5b9a\u7684\u4fbf\u5229\u6027\uff0c\u4ecd\u7136\u63a8\u8350\u4f7f\u7528 MyBatis XML \u914d\u7f6e\u7684\u65b9\u5f0f\uff0c\u8fd9\u6837 SQL \u7ba1\u7406\u66f4\u52a0\u6e05\u6670\u3002 1\uff09CRUD \u63a5\u53e3 IService : Service CRUD \u63a5\u53e3 BaseMapper : Mapper CRUD \u63a5\u53e3 ActiveRecord \u6a21\u5f0f\uff0c\u5728\u7ee7\u627f BaseMapper \u63a5\u53e3\u540e\uff0c\u5b9e\u4f53\u7c7b\u7ee7\u627f Model \u5373\u53ef\u8fdb\u884c CRUD \u64cd\u4f5c\u3002 2\uff09\u6761\u4ef6\u6784\u9020\u5668 AbstractWrapper QueryWrapper UpdateWrapper 3\uff09\u4e3b\u952e\u7b56\u7565 \u4e3b\u952e\u751f\u6210\u7b56\u7565\u5fc5\u987b\u4f7f\u7528 INPUT \u5185\u7f6e\u652f\u6301\uff1a DB2KeyGenerator H2KeyGenerator KingbaseKeyGenerator OracleKeyGenerator PostgreKeyGenerator \u5982\u679c\u5185\u7f6e\u652f\u6301\u4e0d\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u53ef\u5b9e\u73b0 IKeyGenerator \u63a5\u53e3\u6765\u8fdb\u884c\u6269\u5c55. @KeySequence(value = \"SEQ_ORACLE_STRING_KEY\", clazz = String.class) public class YourEntity { @TableId(value = \"ID_STR\", type = IdType.INPUT) private String idStr; } \u6269\u5c55 \u00b6 \u975e\u5fc5\u8981\u4e0d\u4f7f\u7528\u3002 \u63d2\u4ef6 \u00b6 MyBatis-Plus \u63d0\u4f9b\u4e86\u591a\u4e2a\u63d2\u4ef6\uff0c\u53ef\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a https://baomidou.com/pages/2976a3/ kaddo-components-mybatis-plus \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63d2\u4ef6\u7684\u9ed8\u8ba4\u914d\u7f6e\uff1a @Configuration(proxyBeanMethods = false) @ConditionalOnClass({SqlSessionFactory.class, SqlSessionFactoryBean.class}) public class KaddoMybatisPlusAutoConfiguration { /** * \u9ed8\u8ba4\u7684 MyBatis-Plus \u63d2\u4ef6\u914d\u7f6e\uff0c\u4e0d\u6ee1\u8db3\u9700\u6c42\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u91cd\u65b0\u914d\u7f6e\uff0c\u67e5\u770b MyBatis-Plus \u5b98\u65b9\u6587\u6863\u4e86\u89e3\u66f4\u591a\u8be6\u60c5\u3002 */ @Bean @ConditionalOnMissingBean(MybatisPlusInterceptor.class) public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // \u5206\u9875\u63d2\u4ef6\uff08\u5355\u9875\u5206\u9875\u6761\u6570\u9650\u52365000\u6761 - \u9ed8\u8ba4\u65e0\u9650\u5236\uff09 PaginationInnerInterceptor paginationInnerInterceptor = new PaginationInnerInterceptor(); paginationInnerInterceptor.setMaxLimit(5000L); interceptor.addInnerInterceptor(paginationInnerInterceptor); // \u4e50\u89c2\u9501\u63d2\u4ef6\uff08\u5728\u5b9e\u4f53\u7c7b\u7684\u5b57\u6bb5\u4e0a\u52a0\u4e0a @Version \u6ce8\u89e3\uff09 OptimisticLockerInnerInterceptor optimisticLockerInnerInterceptor = new OptimisticLockerInnerInterceptor(); interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor); // \u9632\u5168\u8868\u66f4\u65b0\u4e0e\u5220\u9664\u63d2\u4ef6\uff08\u9488\u5bf9 update \u548c delete \u8bed\u53e5\uff0c\u963b\u6b62\u6076\u610f\u7684\u5168\u8868\u66f4\u65b0\u548c\u5220\u9664\uff09 BlockAttackInnerInterceptor blockAttackInnerInterceptor = new BlockAttackInnerInterceptor(); interceptor.addInnerInterceptor(blockAttackInnerInterceptor); return interceptor; } } \u5206\u9875\u63d2\u4ef6\u7684\u4f7f\u7528 \u00b6 IPage<UserVo> selectPageVo(IPage<?> page, Integer state); // or (class MyPage extends Ipage<UserVo>{ private Integer state; }) MyPage selectPageVo(MyPage page); // or List<UserVo> selectPageVo(IPage<UserVo> page, Integer state); // IPage<Board> page = new Page(); <select id=\"selectPageVo\" resultType=\"xxx.xxx.xxx.UserVo\"> SELECT id,name FROM user WHERE state=#{state} </select> \u5982\u679c\u8fd4\u56de\u7c7b\u578b\u662f IPage \u5219\u5165\u53c2\u7684 IPage \u4e0d\u80fd\u4e3a null\uff0c\u56e0\u4e3a\u8fd4\u56de\u7684 IPage \u5373\u5165\u53c2\u7684 IPage\u3002 \u5982\u679c\u8fd4\u56de\u7c7b\u578b\u662f List \u5219\u5165\u53c2\u7684 IPage \u53ef\u4ee5\u4e3a null\uff0c\u4f46\u9700\u8981\u4f60\u624b\u52a8\u5904\u7406\u5206\u9875 IPage.setRecords(\u8fd4\u56de\u7684 List); \u5982\u679c xml \u9700\u8981\u4ece page \u91cc\u53d6\u503c\uff0c\u9700\u8981\u4f7f\u7528 page.\u5c5e\u6027 \u83b7\u53d6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 @Param (\"page\") \u6ce8\u89e3\u81ea\u5b9a\u4e49\u3002","title":"MyBatis-Plus"},{"location":"220606_Mybatis_Plus/#mybatis-plus","text":"MyBatis-Plus \u662f\u4e00\u4e2a MyBatis \u7684\u589e\u5f3a\u5de5\u5177\uff0c\u5728 MyBatis \u7684\u57fa\u7840\u4e0a\u53ea\u505a\u589e\u5f3a\u4e0d\u505a\u6539\u53d8\uff0c\u4e3a\u7b80\u5316\u5f00\u53d1\u3001\u63d0\u9ad8\u6548\u7387\u800c\u751f\u3002 kaddo-components-mybatis-plus \u6a21\u5757\u7ef4\u62a4\u4e86\u4e00\u5957\u8f83\u4e3a\u5e38\u7528\u7684 MyBatis-Plus \u914d\u7f6e\uff0c\u652f\u6301\u5728\u9879\u76ee\u5f00\u53d1\u4e2d\u5feb\u901f\u6784\u5efa\u548c\u4f7f\u7528\u3002","title":"MyBatis-Plus"},{"location":"220606_Mybatis_Plus/#_1","text":"1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0 Maven \u4f9d\u8d56\uff1a <dependency> <groupId>com.kaddo</groupId> <artifactId>kaddo-components-mybatis-plus</artifactId> <version>${kaddo.version}</version> </dependency> 2\uff09\u7136\u540e\uff0c\u6839\u636e\u6570\u636e\u5e93\u9009\u62e9\u9a71\u52a8\uff0c\u4ee5 H2 \u6570\u636e\u5e93\u4e3a\u4f8b\uff1a <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> <scope>runtime</scope> </dependency> 3\uff09\u5728 application.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 H2 \u6570\u636e\u5e93\u7684\u76f8\u5173\u914d\u7f6e\uff1a # DataSource Configuration spring.datasource.driver-class-name=org.h2.Driver spring.datasource.schema=classpath:db/schema-h2.sql spring.datasource.data=classpath:db/data-h2.sql spring.datasource.url=jdbc:h2:mem:test spring.datasource.username=root spring.datasource.password=test 4\uff09\u5728 application.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 MyBatis-Plus \u914d\u7f6e\uff1a ## MyBatis-Plus Configuration mybatis-plus.type-aliases-package=com.baomidou.mybatisplus.samples.quickstart.model mybatis-plus.mapper-locations=classpath*:/mapper/**/*.xml mybatis-plus.configuration.map-underscore-to-camel-case=true mybatis-plus.configuration.default-executor-type=reuse mybatis-plus.configuration.default-fetch-size=100 mybatis-plus.configuration.default-statement-timeout=30 mybatis-plus.configuration.cache-enabled=true 5\uff09\u5728 Spring Boot \u542f\u52a8\u7c7b\u4e2d\u6dfb\u52a0 @MapperScan \u6ce8\u89e3\uff0c\u626b\u63cf Mapper \u6587\u4ef6\u5939\uff1a @SpringBootApplication @MapperScan(\"com.baomidou.mybatisplus.samples.quickstart.mapper\") public class Application { public static void main(String[] args) { SpringApplication.run(Application.class, args); } } 6\uff09\u7f16\u5199\u5b9e\u4f53\u7c7b\u548c\u6570\u636e\u5c42\u5bf9\u8c61\uff1a @Data public class User { private Long id; private String name; private Integer age; private String email; } \u7f16\u5199 Mapper \u5305\u4e0b\u7684 UserMapper \u63a5\u53e3\uff1a @Mapper public interface UserMapper extends BaseMapper<User> { } 7\uff09\u5f00\u59cb\u4f7f\u7528\uff1a @SpringBootTest public class SampleTest { @Autowired private UserMapper userMapper; @Test public void testSelect() { System.out.println((\"----- selectAll method test ------\")); List<User> userList = userMapper.selectList(null); Assert.assertEquals(5, userList.size()); userList.forEach(System.out::println); } }","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"220606_Mybatis_Plus/#_2","text":"MyBatis \u7684\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u4e86\u4f1a\u6df1\u6df1\u5f71\u54cd MyBatis \u884c\u4e3a\u7684\u8bbe\u7f6e\u548c\u5c5e\u6027\u4fe1\u606f\u3002\u5b98\u65b9\u914d\u7f6e\u6587\u6863\uff1a https://mybatis.org/mybatis-3/zh/configuration.html ## MyBatis-Plus Configuration # \u6307\u5b9a MyBatis XML \u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e\u3002 # \u6ce8\u610f\uff1aSpring Boot \u9879\u76ee\u4e0d\u652f\u6301 config-location \u548c configuration.* \u540c\u65f6\u51fa\u73b0\uff0c\u56e0\u6b64\u4e0d\u63a8\u8350\u4f7f\u7528\u8be5\u5c5e\u6027\u3002 mybatis-plus.config-location=classpath*:mybatis-config.xml # MyBatis Mapper \u6240\u5bf9\u5e94\u7684 XML \u6587\u4ef6\u4f4d\u7f6e\uff0c\u544a\u8bc9 Mapper \u6240\u5bf9\u5e94\u7684 XML \u6587\u4ef6\u4f4d\u7f6e\u3002 # \u9ed8\u8ba4\u503c\uff1aclasspath*:/mapper/**/*.xml\uff0c\u591a\u4e2a\u7528\u82f1\u6587\u9017\u53f7\u5206\u9694\u3002 mybatis-plus.mapper-locations=classpath*:/mapper/**/*.xml # MyBaits \u522b\u540d\u5305\u626b\u63cf\u8def\u5f84\uff0c\u901a\u8fc7\u8be5\u5c5e\u6027\u53ef\u4ee5\u7ed9\u5305\u4e2d\u7684\u7c7b\u6ce8\u518c\u522b\u540d\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e\u3002 # \u4e5f\u53ef\u4ee5\u4f7f\u7528\u6ce8\u89e3 @Alias(\"author\") \u6765\u6307\u5b9a\u7c7b\u7684\u522b\u540d\u3002 mybatis-plus.type-aliases-package=com.baomidou.mybatisplus.samples.quickstart.model # TypeHandler \u626b\u63cf\u8def\u5f84\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u8be5\u5c5e\u6027\uff0cSqlSessionFactoryBean \u4f1a\u628a\u8be5\u5305\u4e0b\u9762\u7684\u7c7b\u6ce8\u518c\u4e3a\u5bf9\u5e94\u7684 TypeHandler\u3002 # \u901a\u5e38\u7528\u4e8e\u81ea\u5b9a\u4e49\u7c7b\u578b\u8f6c\u6362\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e\u3002 mybatis-plus.type-handlers-package= # \u542f\u52a8\u65f6\u662f\u5426\u68c0\u67e5 MyBatis XML \u6587\u4ef6\u7684\u5b58\u5728\uff0c\u9ed8\u8ba4\u4e0d\u68c0\u67e5\u3002 mybatis-plus.check-config-location=false # \u901a\u8fc7\u8be5\u5c5e\u6027\u53ef\u6307\u5b9a MyBatis \u7684\u6267\u884c\u5668\uff0cMyBatis \u7684\u6267\u884c\u5668\u603b\u5171\u6709\u4e09\u79cd\uff1a # ExecutorType.SIMPLE\uff1a\u8be5\u6267\u884c\u5668\u7c7b\u578b\u4e0d\u505a\u7279\u6b8a\u7684\u4e8b\u60c5\uff0c\u4e3a\u6bcf\u4e2a\u8bed\u53e5\u7684\u6267\u884c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u9884\u5904\u7406\u8bed\u53e5\uff08PreparedStatement\uff09 # ExecutorType.REUSE\uff1a\u8be5\u6267\u884c\u5668\u7c7b\u578b\u4f1a\u590d\u7528\u9884\u5904\u7406\u8bed\u53e5\uff08PreparedStatement\uff09 # ExecutorType.BATCH\uff1a\u8be5\u6267\u884c\u5668\u7c7b\u578b\u4f1a\u6279\u91cf\u6267\u884c\u6240\u6709\u7684\u66f4\u65b0\u8bed\u53e5 # \u9ed8\u8ba4\u503c\uff1aSIMPLE mybatis-plus.executor-type=SIMPLE # \u662f\u5426\u5f00\u542f\u81ea\u52a8\u9a7c\u5cf0\u547d\u540d\u89c4\u5219\uff08camel case\uff09\u6620\u5c04\uff0c\u9ed8\u8ba4\u503c\uff1atrue mybatis-plus.configuration.map-underscore-to-camel-case=true # \u9ed8\u8ba4\u679a\u4e3e\u5904\u7406\u7c7b\uff0c\u5982\u679c\u914d\u7f6e\u4e86\u8be5\u5c5e\u6027\uff0c\u679a\u4e3e\u5c06\u7edf\u4e00\u4f7f\u7528\u6307\u5b9a\u5904\u7406\u5668\u8fdb\u884c\u5904\u7406\u3002 # \u9ed8\u8ba4\u4e3a\u5b58\u50a8\u679a\u4e3e\u7c7b\u7684\u540d\u79f0\u3002 mybatis-plus.configuration.default-enum-type-handler=org.apache.ibatis.type.EnumTypeHandler # MyBatis \u81ea\u52a8\u6620\u5c04\u7b56\u7565\uff0c\u901a\u8fc7\u8be5\u914d\u7f6e\u53ef\u6307\u5b9a MyBatis \u662f\u5426\u5e76\u4e14\u5982\u4f55\u6765\u81ea\u52a8\u6620\u5c04\u6570\u636e\u8868\u5b57\u6bb5\u4e0e\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u603b\u5171\u6709 3 \u79cd\u53ef\u9009\u503c\uff1a # AutoMappingBehavior.NONE\uff1a\u4e0d\u542f\u7528\u81ea\u52a8\u6620\u5c04 # AutoMappingBehavior.PARTIAL\uff1a\u53ea\u5bf9\u975e\u5d4c\u5957\u7684 resultMap \u8fdb\u884c\u81ea\u52a8\u6620\u5c04 # AutoMappingBehavior.FULL\uff1a\u5bf9\u6240\u6709\u7684 resultMap \u90fd\u8fdb\u884c\u81ea\u52a8\u6620\u5c04 # \u9ed8\u8ba4\u503c\uff1aPARTIAL mybatis-plus.configuration.auto-mapping-behavior=PARTIAL # \u5f00\u542f Mybatis \u4e8c\u7ea7\u7f13\u5b58\uff0c\u9ed8\u8ba4\u503c\uff1atrue\u3002 mybatis-plus.configuration.cache-enabled=true # \u4e3a\u9a71\u52a8\u7684\u7ed3\u679c\u96c6\u83b7\u53d6\u6570\u91cf\uff08fetchSize\uff09\u8bbe\u7f6e\u4e00\u4e2a\u5efa\u8bae\u503c\u3002\u6b64\u53c2\u6570\u53ea\u53ef\u4ee5\u5728\u67e5\u8be2\u8bbe\u7f6e\u4e2d\u88ab\u8986\u76d6\u3002 mybatis-plus.configuration.default-fetch-size=100 # \u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u5b83\u51b3\u5b9a\u6570\u636e\u5e93\u9a71\u52a8\u7b49\u5f85\u6570\u636e\u5e93\u54cd\u5e94\u7684\u79d2\u6570\u3002 mybatis-plus.configuration.default-statement-timeout=30","title":"\u914d\u7f6e\u8be6\u89e3"},{"location":"220606_Mybatis_Plus/#_3","text":"MyBatis-Plus \u63d0\u4f9b\u4e86\u4e00\u4e9b\u6ce8\u89e3\uff0c\u4ec5\u4f9b\u53c2\u8003\uff1a https://baomidou.com/pages/223848/ @TableName @TableId @TableField @Version @EnumValue @TableLogic @SqlParser @KeySequence @InterceptorIgnore @OrderBy","title":"\u6ce8\u89e3"},{"location":"220606_Mybatis_Plus/#_4","text":"\u4f7f\u7528 MyBatis-Plus \u63d0\u4f9b\u7684\u589e\u5f3a\u529f\u80fd\u65f6\uff0c\u9996\u5148\u8981\u5bf9 MyBatis-Plus \u6709\u4e00\u5b9a\u7684\u4e86\u89e3\uff0c\u5426\u5219\u8fd8\u662f\u8001\u8001\u5b9e\u5b9e\u7528 MyBatis \u7684\u539f\u751f\u529f\u80fd\u3002 MyBatis-Plus \u63d0\u4f9b\u7684\u589e\u5f3a\u529f\u80fd\u5177\u6709\u4e00\u5b9a\u7684\u4fbf\u5229\u6027\uff0c\u4ecd\u7136\u63a8\u8350\u4f7f\u7528 MyBatis XML \u914d\u7f6e\u7684\u65b9\u5f0f\uff0c\u8fd9\u6837 SQL \u7ba1\u7406\u66f4\u52a0\u6e05\u6670\u3002 1\uff09CRUD \u63a5\u53e3 IService : Service CRUD \u63a5\u53e3 BaseMapper : Mapper CRUD \u63a5\u53e3 ActiveRecord \u6a21\u5f0f\uff0c\u5728\u7ee7\u627f BaseMapper \u63a5\u53e3\u540e\uff0c\u5b9e\u4f53\u7c7b\u7ee7\u627f Model \u5373\u53ef\u8fdb\u884c CRUD \u64cd\u4f5c\u3002 2\uff09\u6761\u4ef6\u6784\u9020\u5668 AbstractWrapper QueryWrapper UpdateWrapper 3\uff09\u4e3b\u952e\u7b56\u7565 \u4e3b\u952e\u751f\u6210\u7b56\u7565\u5fc5\u987b\u4f7f\u7528 INPUT \u5185\u7f6e\u652f\u6301\uff1a DB2KeyGenerator H2KeyGenerator KingbaseKeyGenerator OracleKeyGenerator PostgreKeyGenerator \u5982\u679c\u5185\u7f6e\u652f\u6301\u4e0d\u6ee1\u8db3\u4f60\u7684\u9700\u6c42\uff0c\u53ef\u5b9e\u73b0 IKeyGenerator \u63a5\u53e3\u6765\u8fdb\u884c\u6269\u5c55. @KeySequence(value = \"SEQ_ORACLE_STRING_KEY\", clazz = String.class) public class YourEntity { @TableId(value = \"ID_STR\", type = IdType.INPUT) private String idStr; }","title":"\u6838\u5fc3\u529f\u80fd"},{"location":"220606_Mybatis_Plus/#_5","text":"\u975e\u5fc5\u8981\u4e0d\u4f7f\u7528\u3002","title":"\u6269\u5c55"},{"location":"220606_Mybatis_Plus/#_6","text":"MyBatis-Plus \u63d0\u4f9b\u4e86\u591a\u4e2a\u63d2\u4ef6\uff0c\u53ef\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a https://baomidou.com/pages/2976a3/ kaddo-components-mybatis-plus \u6a21\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u63d2\u4ef6\u7684\u9ed8\u8ba4\u914d\u7f6e\uff1a @Configuration(proxyBeanMethods = false) @ConditionalOnClass({SqlSessionFactory.class, SqlSessionFactoryBean.class}) public class KaddoMybatisPlusAutoConfiguration { /** * \u9ed8\u8ba4\u7684 MyBatis-Plus \u63d2\u4ef6\u914d\u7f6e\uff0c\u4e0d\u6ee1\u8db3\u9700\u6c42\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u91cd\u65b0\u914d\u7f6e\uff0c\u67e5\u770b MyBatis-Plus \u5b98\u65b9\u6587\u6863\u4e86\u89e3\u66f4\u591a\u8be6\u60c5\u3002 */ @Bean @ConditionalOnMissingBean(MybatisPlusInterceptor.class) public MybatisPlusInterceptor mybatisPlusInterceptor() { MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); // \u5206\u9875\u63d2\u4ef6\uff08\u5355\u9875\u5206\u9875\u6761\u6570\u9650\u52365000\u6761 - \u9ed8\u8ba4\u65e0\u9650\u5236\uff09 PaginationInnerInterceptor paginationInnerInterceptor = new PaginationInnerInterceptor(); paginationInnerInterceptor.setMaxLimit(5000L); interceptor.addInnerInterceptor(paginationInnerInterceptor); // \u4e50\u89c2\u9501\u63d2\u4ef6\uff08\u5728\u5b9e\u4f53\u7c7b\u7684\u5b57\u6bb5\u4e0a\u52a0\u4e0a @Version \u6ce8\u89e3\uff09 OptimisticLockerInnerInterceptor optimisticLockerInnerInterceptor = new OptimisticLockerInnerInterceptor(); interceptor.addInnerInterceptor(optimisticLockerInnerInterceptor); // \u9632\u5168\u8868\u66f4\u65b0\u4e0e\u5220\u9664\u63d2\u4ef6\uff08\u9488\u5bf9 update \u548c delete \u8bed\u53e5\uff0c\u963b\u6b62\u6076\u610f\u7684\u5168\u8868\u66f4\u65b0\u548c\u5220\u9664\uff09 BlockAttackInnerInterceptor blockAttackInnerInterceptor = new BlockAttackInnerInterceptor(); interceptor.addInnerInterceptor(blockAttackInnerInterceptor); return interceptor; } }","title":"\u63d2\u4ef6"},{"location":"220606_Mybatis_Plus/#_7","text":"IPage<UserVo> selectPageVo(IPage<?> page, Integer state); // or (class MyPage extends Ipage<UserVo>{ private Integer state; }) MyPage selectPageVo(MyPage page); // or List<UserVo> selectPageVo(IPage<UserVo> page, Integer state); // IPage<Board> page = new Page(); <select id=\"selectPageVo\" resultType=\"xxx.xxx.xxx.UserVo\"> SELECT id,name FROM user WHERE state=#{state} </select> \u5982\u679c\u8fd4\u56de\u7c7b\u578b\u662f IPage \u5219\u5165\u53c2\u7684 IPage \u4e0d\u80fd\u4e3a null\uff0c\u56e0\u4e3a\u8fd4\u56de\u7684 IPage \u5373\u5165\u53c2\u7684 IPage\u3002 \u5982\u679c\u8fd4\u56de\u7c7b\u578b\u662f List \u5219\u5165\u53c2\u7684 IPage \u53ef\u4ee5\u4e3a null\uff0c\u4f46\u9700\u8981\u4f60\u624b\u52a8\u5904\u7406\u5206\u9875 IPage.setRecords(\u8fd4\u56de\u7684 List); \u5982\u679c xml \u9700\u8981\u4ece page \u91cc\u53d6\u503c\uff0c\u9700\u8981\u4f7f\u7528 page.\u5c5e\u6027 \u83b7\u53d6\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7 @Param (\"page\") \u6ce8\u89e3\u81ea\u5b9a\u4e49\u3002","title":"\u5206\u9875\u63d2\u4ef6\u7684\u4f7f\u7528"},{"location":"220615_Alibaba_Druid/","text":"Druid Spring Boot Starter \u00b6 Alibaba Druid \u662f\u4e00\u4e2a JDBC \u7ec4\u4ef6\u5e93\uff0c\u5305\u542b\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u3001SQL Parser \u7b49\u7ec4\u4ef6\uff0c\u88ab\u5927\u91cf\u4e1a\u52a1\u548c\u6280\u672f\u4ea7\u54c1\u4f7f\u7528\u6216\u96c6\u6210\uff0c\u7ecf\u5386\u8fc7\u4e25\u82db\u7684\u7ebf\u4e0a\u4e1a\u52a1\u573a\u666f\u8003\u9a8c\uff0c\u662f\u503c\u5f97\u4fe1\u8d56\u7684\u6280\u672f\u4ea7\u54c1\u3002Druid Spring Boot Starter \u7528\u4e8e\u5e2e\u52a9\u4f60\u5728 Spring Boot \u9879\u76ee\u4e2d\u8f7b\u677e\u96c6\u6210 Druid \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u548c\u76d1\u63a7\u3002 https://github.com/alibaba/druid \u5feb\u901f\u4f7f\u7528 \u00b6 1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u914d\u7f6e\uff08\u5f15\u5165 Kaddo \u6846\u67b6\u4e0d\u9700\u8981\u6307\u5b9a\u7248\u672c\u53f7\uff09\uff1a <dependency> <groupId>com.alibaba</groupId> <artifactId>druid-spring-boot-starter</artifactId> <version>${alibaba-druid.version}</version> </dependency> 2\uff09\u6dfb\u52a0\u6570\u636e\u6e90\u914d\u7f6e\uff1a ## Spring DruidDataSource Configuration # spring.datasource.druid.enable=true # spring.datasource.druid.name=DataSource-1 # spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver spring.datasource.druid.url=jdbc:mysql://localhost:3306/dbname?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.druid.username=root spring.datasource.druid.password=123456 spring.datasource.druid.initial-size=10 spring.datasource.druid.min-idle=10 spring.datasource.druid.max-active=100 spring.datasource.druid.max-wait=6000 spring.datasource.druid.test-while-idle=true spring.datasource.druid.test-on-borrow=false spring.datasource.druid.test-on-return=false spring.datasource.druid.validation-query=select 1 spring.datasource.druid.time-between-eviction-runs-millis=30000 spring.datasource.druid.min-evictable-idle-time-millis=600000 spring.datasource.druid.max-evictable-idle-time-millis=900000 spring.datasource.druid.keep-alive=true 3\uff09Druid \u652f\u6301\u6839\u636e url \u6765\u81ea\u52a8\u63a2\u6d4b JDBC \u9a71\u52a8\uff0c\u5df2\u5728 druid-xxx.jar/META-INF/druid-driver.properties \u5c5e\u6027\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002 jdbc:derby:=org.apache.derby.jdbc.EmbeddedDriver jdbc:mysql:=com.mysql.jdbc.Driver jdbc:log4jdbc:=net.sf.log4jdbc.DriverSpy jdbc:oracle:=oracle.jdbc.driver.OracleDriver jdbc:microsoft:=com.microsoft.jdbc.sqlserver.SQLServerDriver jdbc:jtds:=net.sourceforge.jtds.jdbc.Driver jdbc:postgresql:=org.postgresql.Driver jdbc:fake:=com.alibaba.druid.mock.MockDriver jdbc:hsqldb:=org.hsqldb.jdbcDriver jdbc:db2:=COM.ibm.db2.jdbc.app.DB2Driver jdbc:sqlite:=org.sqlite.JDBC jdbc:ingres:=com.ingres.jdbc.IngresDriver jdbc:h2:=org.h2.Driver jdbc:mckoi:=com.mckoi.JDBCDriver jdbc:clickhouse:=ru.yandex.clickhouse.ClickHouseDriver jdbc:highgo:=com.highgo.jdbc.Driver \u5982\u679c\u672a\u80fd\u81ea\u52a8\u63a2\u6d4b JDBC \u9a71\u52a8\uff0c\u5219\u9700\u6307\u5b9a\u9a71\u52a8\u7c7b\uff1a spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver \u8fde\u63a5\u6c60\u914d\u7f6e \u00b6 Druid Spring Boot Starter \u914d\u7f6e\u5c5e\u6027\u7684\u540d\u79f0\u5b8c\u5168\u9075\u7167 Druid\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 Spring Boot \u914d\u7f6e\u6587\u4ef6\u6765\u914d\u7f6e Druid \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u548c\u76d1\u63a7\u3002 JDBC \u914d\u7f6e\uff1a # \u5355\u6570\u636e\u6e90\u65f6\uff0cDruid \u517c\u5bb9 JDBC \u7684\u914d\u7f6e\u5982\u4e0b\uff1a spring.datasource.druid.url= # \u6216spring.datasource.url= spring.datasource.druid.username= # \u6216spring.datasource.username= spring.datasource.druid.password= # \u6216spring.datasource.password= spring.datasource.druid.driver-class-name= #\u6216 spring.datasource.driver-class-name= \u8fde\u63a5\u6c60\u914d\u7f6e\u8be6\u89e3\uff1a # \u542f\u52a8 Druid \u8fde\u63a5\u6c60\uff0c\u9ed8\u8ba4\u5f00\u542f # \u591a\u6570\u636e\u6e90\u914d\u7f6e\u65f6\uff0c\u8be5\u53c2\u6570\u4e0d\u751f\u6548 spring.datasource.druid.enable=true # \u6307\u5b9a\u9a71\u52a8\u7c7b\u540d\uff0c\u9ed8\u8ba4\u4ece URL \u4e2d\u81ea\u52a8\u63a2\u6d4b spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver # \u8bbe\u7f6e\u6570\u636e\u5e93\u8fde\u63a5 spring.datasource.druid.url=jdbc:mysql://localhost:3306/dbname # \u8bbe\u7f6e\u6570\u636e\u5e93\u7528\u6237\u540d spring.datasource.druid.username=root # \u8bbe\u7f6e\u6570\u636e\u5e93\u5bc6\u7801 spring.datasource.druid.password=123456 # \u5141\u8bb8\u8bbf\u95ee\u5e95\u5c42\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.access-to-underlying-connection-allowed=true # \u542f\u7528\u5f02\u6b65\u5173\u95ed\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1afalse # \u5982\u679c removeAbandoned = true\uff0c\u5219\u81ea\u52a8\u5f00\u542f\u3002 spring.datasource.druid.async-close-connection-enable=false # \u5f00\u542f\u5f02\u6b65\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.async-init=false # \u5931\u8d25\u540e\u8df3\u8fc7\u5373\u7528\u4e8e\u5931\u8d25\u91cd\u8fde\uff0c\u9ed8\u8ba4\u503c\uff1afalse # true \u8868\u793a\u5411\u6570\u636e\u5e93\u8bf7\u6c42\u8fde\u63a5\u5931\u8d25\u540e\uff0c\u5c31\u7b97\u540e\u7aef\u6570\u636e\u5e93\u6062\u590d\u6b63\u5e38\u4e5f\u4e0d\u8fdb\u884c\u91cd\u8fde\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u914d\u7f6e false spring.datasource.druid.break-after-acquire-failure=false # \u68c0\u67e5SQL\u6267\u884c\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.check-execute-time=false # \u542f\u52a8\u6e05\u9664\u8fc7\u6ee4\u5668\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.clear-filters-enable=true # \u8fde\u63a5\u5c5e\u6027\u914d\u7f6e\uff0c\u591a\u4e2a\u7528\u82f1\u6587\u5206\u53f7\u9694\u5f00 spring.datasource.druid.connect-properties= # \u8fde\u63a5\u51fa\u9519\u5c1d\u8bd5\u51e0\u6b21\u91cd\u65b0\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1a1 spring.datasource.druid.connection-error-retry-attempts=1 # \u6307\u5b9a\u6570\u636e\u5e93\u7c7b\u578b\uff0c\u9ed8\u8ba4\u81ea\u52a8\u63a2\u6d4b spring.datasource.druid.db-type= # \u4e8b\u52a1\u662f\u5426\u81ea\u52a8\u63d0\u4ea4\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.default-auto-commit=true # \u6307\u5b9a\u8fde\u63a5\u9ed8\u8ba4\u7684 catalog\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.default-catalog= # \u662f\u5426\u8bbe\u7f6e\u9ed8\u8ba4\u8fde\u63a5\u53ea\u8bfb\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.default-read-only=true # \u6307\u5b9a\u8fde\u63a5\u7684\u4e8b\u52a1\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e\u3002 # -1 \u6570\u636e\u5e93\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b # 1 \u672a\u63d0\u4ea4\u8bfb # 2 \u8bfb\u5199\u63d0\u4ea4 # 4 \u53ef\u91cd\u590d\u8bfb # 8 \u4e32\u884c\u5316 spring.datasource.druid.default-transaction-isolation= # \u5f53\u521b\u5efa\u8fde\u63a5\u6c60\u65f6\uff0c\u521b\u5efa\u5931\u8d25\u540e\u662f\u5426\u7acb\u5373\u629b\u5f02\u5e38\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.fail-fast=false # \u8bbe\u7f6e\u8fc7\u6ee4\u5668\u522b\u540d\uff0c\u591a\u4e2a\u4f7f\u7528\u82f1\u6587\u9017\u53f7\u9694\u5f00\uff0c\u9ed8\u8ba4\u503c\uff1adefault # \u751f\u4ea7\u73af\u5883\u4e0d\u5efa\u8bae\u4f7f\u7528\u5176\u4ed6\u8fc7\u6ee4\u5668\u3002 spring.datasource.druid.filters=stat # \u521d\u59cb\u5316\u5f02\u5e38\u5219\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.init-exception-throw=true # \u521d\u59cb\u5316\u5168\u5c40\u53d8\u91cf\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.init-global-variants=false # \u521d\u59cb\u5316\u53d8\u91cf\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.init-variants=false # \u521d\u59cb\u5316\u8fde\u63a5\u6c60\u5927\u5c0f\uff0c\u9ed8\u8ba4\u503c\uff1a0 # \u5efa\u8bae\u4e0e minIdle \u5927\u5c0f\u4fdd\u6301\u4e00\u81f4 spring.datasource.druid.initial-size=10 # \u5f00\u542f keepAlive \u64cd\u4f5c\uff0c\u9ed8\u8ba4\u503c\uff1afalse # \u6253\u5f00 keepAlive \u4e4b\u540e\u7684\u6548\u679c # 1\u3001\u521d\u59cb\u5316\u8fde\u63a5\u6c60\u65f6\u4f1a\u586b\u5145\u5230 minIdle \u6570\u91cf\u3002 # 2\u3001\u8fde\u63a5\u6c60\u4e2d\u7684 minIdle \u6570\u91cf\u4ee5\u5185\u7684\u8fde\u63a5\uff0c\u7a7a\u95f2\u65f6\u95f4\u8d85\u8fc7 minEvictableIdleTimeMillis\uff0c\u5219\u4f1a\u6267\u884c keepAlive \u64cd\u4f5c\u3002 # 3\u3001\u5f53\u7f51\u7edc\u65ad\u5f00\u7b49\u539f\u56e0\u4ea7\u751f\u7684\u7531 ExceptionSorter \u68c0\u6d4b\u51fa\u6765\u7684\u6b7b\u8fde\u63a5\u88ab\u6e05\u9664\u540e\uff0c\u81ea\u52a8\u8865\u5145\u8fde\u63a5\u5230 minIdle \u6570\u91cf\u3002 spring.datasource.druid.keep-alive=true # \u4e24\u6b21 keepAlive \u64cd\u4f5c\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u9ed8\u8ba4\u503c\uff1a120000\uff08\u5355\u4f4d\u6beb\u79d2\uff09 spring.datasource.druid.keep-alive-between-time-millis=120000 # \u6307\u5b9a\u8fde\u63a5\u6570\u636e\u5e93\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u65e0\u9650\u5236\uff08\u5355\u4f4d\u79d2\uff09 spring.datasource.druid.login-timeout= # \u8bbe\u7f6e\u6700\u5927\u8fde\u63a5\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a8 spring.datasource.druid.max-active=100 # \u6700\u5927\u521b\u5efa\u4efb\u52a1\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a3 spring.datasource.druid.max-create-task-count=3 # \u8fde\u63a5\u4fdd\u6301\u7a7a\u95f2\u800c\u4e0d\u88ab\u9a71\u9010\u7684\u6700\u5927\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a1800000\u6beb\u79d2=30\u5206\u949f spring.datasource.druid.max-evictable-idle-time-millis=1800000 # \u6700\u5927\u6253\u5f00\u7684 prepared-statement \u6570\u91cf\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u65e0\u9650\u5236\uff09 spring.datasource.druid.max-open-prepared-statements=-1 # \u8bbe\u7f6e\u6700\u5927\u7b49\u5f85\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u5355\u4f4d\u6beb\u79d2\uff09 spring.datasource.druid.max-wait=6000 # \u5141\u8bb8\u7684\u6700\u5927\u7ebf\u7a0b\u7b49\u5f85\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u65e0\u9650\u5236\uff09 spring.datasource.druid.max-wait-thread-count=-1 # \u9500\u6bc1\u7ebf\u7a0b\u65f6\u68c0\u6d4b\u5f53\u524d\u8fde\u63a5\u7684\u6700\u540e\u6d3b\u52a8\u65f6\u95f4\u548c\u5f53\u524d\u65f6\u95f4\u5dee\u5927\u4e8e\u8be5\u503c\u65f6\uff0c\u5173\u95ed\u5f53\u524d\u8fde\u63a5\u5373\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\u3002\u9ed8\u8ba4\u503c\uff1a1800000\u6beb\u79d2=30\u5206\u949f spring.datasource.druid.min-evictable-idle-time-millis=1800000 # \u8bbe\u7f6e\u6700\u5c0f\u8fde\u63a5\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a0 spring.datasource.druid.min-idle=10 # \u6307\u5b9a\u8fde\u63a5\u6c60\u540d\u79f0\uff0c\u672a\u8bbe\u7f6e\u5219\u968f\u673a\u751f\u6210\uff1a`\"DataSource-\" + System.identityHashCode(this);` spring.datasource.druid.name=DataSource-1 # \u8bbe\u7f6e\u83b7\u53d6\u8fde\u63a5\u65f6\u7684\u91cd\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a0 spring.datasource.druid.not-full-timeout-retry-count=0 # \u7528\u4e8e\u63a7\u5236\u5f53 OnFatalError \u53d1\u751f\u65f6\u6700\u5927\u4f7f\u7528\u8fde\u63a5\u6570\u91cf\uff0c\u7528\u4e8e\u63a7\u5236\u5f02\u5e38\u53d1\u751f\u65f6\u5e76\u53d1\u6267\u884cSQL\u7684\u6570\u91cf\uff0c\u51cf\u8f7b\u6570\u636e\u5e93\u6062\u590d\u7684\u538b\u529b\u3002\u9ed8\u8ba4\u503c\uff1a0 spring.datasource.druid.on-fatal-error-max-active=0 # \u662f\u5426\u662f Oracle \u6570\u636e\u5e93\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.oracle=false # \u7269\u7406\u6700\u5927\u8fde\u63a5\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u65e0\u9650\u5236\uff09 spring.datasource.druid.phy-max-use-count=-1 # \u7269\u7406\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u65e0\u9650\u5236\uff0c\u5355\u4f4d\u6beb\u79d2\uff09 spring.datasource.druid.phy-timeout-millis=-1 # oracle \u8bbe\u4e3a true\uff0cmysql \u8bbe\u4e3a false\u3002\u5206\u5e93\u5206\u8868\u8f83\u591a\u63a8\u8350\u8bbe\u7f6e\u4e3a false\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.pool-prepared-statements=false # \u6253\u5f00PSCache\uff0c\u5e76\u4e14\u6307\u5b9a\u6bcf\u4e2a\u8fde\u63a5\u4e0aPSCache\u7684\u5927\u5c0f\uff0c\u9ed8\u8ba4\u503c\uff1a10 # poolPreparedStatements \u9ed8\u8ba4\u4e3a false\uff0c\u5c5e\u6027\u6587\u4ef6\u4e2d\u5c06 poolPreparedStatements \u8bbe\u7f6e\u4e3a true\uff0c\u5219\u8be5\u503c\u751f\u6548\u3002 # \u82e5\u5c5e\u6027\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u8be5\u503c\u4e14\u5927\u4e8e0\u65f6\uff0cpoolPreparedStatements \u4f1a\u81ea\u52a8\u8bbe\u7f6e\u4e3a true\u3002 spring.datasource.druid.max-pool-prepared-statement-per-connection-size=10 # \u67e5\u8be2\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a0\uff08\u65e0\u9650\u5236\uff0c\u5355\u4f4d\u79d2\uff09 spring.datasource.druid.query-timeout=0 # \u6307\u5b9a\u5f53\u8fde\u63a5\u8d85\u8fc7\u5e9f\u5f03\u8d85\u65f6\u65f6\u95f4\u65f6\uff0c\u662f\u5426\u7acb\u523b\u5220\u9664\u8be5\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.remove-abandoned=false # \u5e9f\u5f03\u8fde\u63a5\u8d85\u65f6\u6307\u5b9a\u65f6\u95f4\u7684\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1a5\u5206\u949f spring.datasource.druid.remove-abandoned-timeout-millis=300 * 1000 # \u5171\u4eab\u9884\u5904\u7406\u8bed\u53e5\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.share-prepared-statements=false # \u4ece\u8fde\u63a5\u6c60\u501f\u7528\u8fde\u63a5\u65f6\uff0c\u662f\u5426\u6d4b\u8bd5\u8be5\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.test-on-borrow=false # \u7533\u8bf7\u8fde\u63a5\u65f6\u68c0\u6d4b\uff0c\u5982\u679c\u7a7a\u95f2\u65f6\u95f4\u5927\u4e8e timeBetweenEvictionRunsMillis\uff0c\u6267\u884c validationQuery \u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\u3002\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.test-on-return=false # \u5f52\u8fd8\u8fde\u63a5\u65f6\u4f1a\u6267\u884c validationQuery \u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.test-while-idle=true # \u6307\u5b9a\u4e24\u6b21\u9519\u8bef\u8fde\u63a5\u7684\u6700\u5927\u65f6\u95f4\u95f4\u9694\uff0c\u9ed8\u8ba4\u503c\uff1a500\u6beb\u79d2 spring.datasource.druid.time-between-connect-error-millis=500 # \u65e2\u4f5c\u4e3a\u68c0\u6d4b\u7684\u95f4\u9694\u65f6\u95f4\u53c8\u4f5c\u4e3a testWhileIdel \u6267\u884c\u7684\u4f9d\u636e\u5373\u6b64\u503c\u51b3\u5b9a\u662f\u5426\u7a7a\u95f2\uff0c\u56e0\u6b64\u6b64\u503c\u4e00\u5b9a\u8981\u8bbe\u7f6e\u5408\u7406\u3002 # \u5373\u4e00\u4e2a\u7a7a\u95f2\u7ebf\u7a0b\uff0c\u6700\u5927\u7684\u751f\u6210\u65f6\u95f4\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\u3002\u9ed8\u8ba4\u503c\uff1a60000\u6beb\u79d2 spring.datasource.druid.time-between-eviction-runs-millis=30000 # \u4e8b\u52a1\u67e5\u8be2\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a0\uff08\u5c0f\u4e8e\u6216\u7b49\u4e8e 0 \u65f6\u53d6 query-timeout \u7684\u503c\uff09 spring.datasource.druid.transaction-query-timeout=0 # \u4e8b\u52a1\u65f6\u95f4\u9608\u503c\uff0c\u9ed8\u8ba4\u503c\uff1a0\uff08\u5355\u4f4d\u6beb\u79d2\uff09 spring.datasource.druid.transaction-threshold-millis=0 # \u4f7f\u7528\u975e\u516c\u5e73\u9501\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.use-unfair-lock=true # \u4f7f\u7528 Oracle \u9690\u5f0f\u7f13\u5b58\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.use-oracle-implicit-cache=true # \u6307\u5b9a\u8fde\u63a5\u7684\u6709\u6548\u68c0\u67e5\u7c7b\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.valid-connection-checker= # \u7528\u6765\u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\u7684 SQL \u5fc5\u987b\u662f\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\uff0c\u9ed8\u8ba4\u672a\u8bbe spring.datasource.druid.validation-query=select 1 # \u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u5355\u4f4d\u79d2\uff09 spring.datasource.druid.validation-query-timeout=-1 \u8fc7\u6ee4\u5668\u914d\u7f6e \u00b6 Druid \u5185\u7f6e\u7684\u8fc7\u6ee4\u5668\u7c7b\u53ca\u522b\u540d\uff0c\u5df2\u5728 druid-xxx.jar/META-INF/druid-filter.properties \u5c5e\u6027\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff1a druid.filters.default=com.alibaba.druid.filter.stat.StatFilter druid.filters.stat=com.alibaba.druid.filter.stat.StatFilter druid.filters.mergeStat=com.alibaba.druid.filter.stat.MergeStatFilter druid.filters.counter=com.alibaba.druid.filter.stat.StatFilter druid.filters.encoding=com.alibaba.druid.filter.encoding.EncodingConvertFilter druid.filters.log4j=com.alibaba.druid.filter.logging.Log4jFilter druid.filters.log4j2=com.alibaba.druid.filter.logging.Log4j2Filter druid.filters.slf4j=com.alibaba.druid.filter.logging.Slf4jLogFilter druid.filters.commonlogging=com.alibaba.druid.filter.logging.CommonsLogFilter druid.filters.commonLogging=com.alibaba.druid.filter.logging.CommonsLogFilter druid.filters.wall=com.alibaba.druid.wall.WallFilter druid.filters.config=com.alibaba.druid.filter.config.ConfigFilter druid.filters.haRandomValidator=com.alibaba.druid.pool.ha.selector.RandomDataSourceValidateFilter \u9664 StatFilter \u4f5c\u4e3a\u9ed8\u8ba4\u8fc7\u6ee4\u5668\u5916\uff0c\u5176\u4ed6\u90fd\u4e3a\u5173\u95ed\u72b6\u6001\u3002\u914d\u7f6e\u8fc7\u6ee4\u5668\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a # \u8bbe\u7f6e\u8fc7\u6ee4\u5668\u522b\u540d\uff0c\u591a\u4e2a\u4f7f\u7528\u82f1\u6587\u9017\u53f7\u9694\u5f00\uff0c\u9ed8\u8ba4\u503c\uff1adefault # \u751f\u4ea7\u73af\u5883\u4e0d\u5efa\u8bae\u4f7f\u7528\u5176\u4ed6\u8fc7\u6ee4\u5668\u3002 spring.datasource.druid.filters=stat StatViewServlet \u00b6 Druid \u7ba1\u63a7\u53f0\u914d\u7f6e\uff0c\u8003\u8651\u5230\u5b89\u5168\u95ee\u9898\u9ed8\u8ba4\u4e3a\u5173\u95ed\uff0c\u5982\u9700\u5f00\u542f\uff0c\u5efa\u8bae\u8bbe\u7f6e\u5bc6\u7801\u6216\u767d\u540d\u5355\u4ee5\u4fdd\u969c\u5b89\u5168\u3002\u914d\u7f6e\u5f00\u542f\u540e\uff0c\u624d\u80fd\u6253\u5f00\u7ba1\u63a7\u53f0\u9875\u9762\u67e5\u770b\u76d1\u63a7\u4fe1\u606f\u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee\uff1a http://127.0.0.1:8080/druid/index.html ## DruidStatViewServletConfiguration # \u662f\u5426\u5f00\u542f\u7ba1\u63a7\u53f0\u9875\u9762\u8bbf\u95ee\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.stat-view-servlet.enabled=true # URL \u6620\u5c04\u8def\u5f84\uff0c\u9ed8\u8ba4\u503c\uff1a/druid/* spring.datasource.druid.stat-view-servlet.url-pattern=/druid/* # \u662f\u5426\u5141\u8bb8\u91cd\u7f6e\uff0c\u9ed8\u8ba4\u5141\u8bb8 # \u6ce8\u610f\uff1a\u8bbe\u7f6e\u4e3a false \u540e\uff0c\u7ba1\u63a7\u53f0\u7684\u91cd\u7f6e\u6309\u94ae\u5e76\u4e0d\u4f1a\u6d88\u5931\uff0c\u4f46\u6570\u636e\u4e0d\u4f1a\u91cd\u7f6e spring.datasource.druid.stat-view-servlet.reset-enable=false # \u7ba1\u63a7\u53f0\u767b\u5f55\u7528\u6237\u540d\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.stat-view-servlet.login-username=admin # \u7ba1\u63a7\u53f0\u767b\u5f55\u5bc6\u7801\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.stat-view-servlet.login-password=admin123 # \u7ba1\u63a7\u53f0\u8bbf\u95ee\u767d\u540d\u5355\uff0c\u9ed8\u8ba4\u503c\uff1a127.0.0.1 spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,10.177.37.15 # \u7ba1\u63a7\u53f0\u8bbf\u95ee\u9ed1\u540d\u5355\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.stat-view-servlet.deny=10.177.37.14 WebStatFilter \u00b6 \u5f00\u542f Web \u8bf7\u6c42\u76d1\u63a7\uff0c\u9ed8\u8ba4\u4e3a\u5173\u95ed\u3002\u914d\u7f6e\u5f00\u542f\u540e\uff0c\u53ef\u4ee5\u5728 Druid \u7ba1\u63a7\u53f0\u67e5\u770b Web \u8bf7\u6c42\u7684\u76d1\u63a7\u4fe1\u606f\u3002 ## DruidWebStatFilterConfiguration # \u662f\u5426\u5f00\u542f Web \u8bf7\u6c42\u7684\u7edf\u8ba1\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.web-stat-filter.enabled=true # \u4ee5\u4e0b\u53c2\u6570\u4fdd\u6301\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef\uff0c\u751f\u4ea7\u73af\u5883\u4e0d\u5efa\u8bae\u542f\u7528 # spring.datasource.druid.web-stat-filter.url-pattern= # spring.datasource.druid.web-stat-filter.exclusions= # spring.datasource.druid.web-stat-filter.session-stat-enable= # spring.datasource.druid.web-stat-filter.session-stat-max-count= # spring.datasource.druid.web-stat-filter.principal-session-name= # spring.datasource.druid.web-stat-filter.principal-cookie-name= # spring.datasource.druid.web-stat-filter.profile-enable= StatFilter \u00b6 \u7528\u4e8e\u7edf\u8ba1\u76d1\u63a7\u4fe1\u606f\uff0c\u9ed8\u8ba4\u5f00\u542f\u3002 ## StatFilter # \u662f\u5426\u5f00\u542f\u7edf\u8ba1\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.filter.stat.enabled=true # \u542f\u52a8\u8fde\u63a5\u5806\u8ddf\u8e2a\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.stat.connection-stack-trace-enable=false # \u662f\u5426\u5728\u65e5\u5fd7\u4e2d\u6253\u5370\u6162SQL\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.stat.log-slow-sql=true # \u8bbe\u7f6e\u6162SQL\u7684\u6267\u884c\u65f6\u957f\uff0c\u9ed8\u8ba4\u503c\uff1a3000\u6beb\u79d2 spring.datasource.druid.filter.stat.slow-sql-millis=3000 # \u8bbe\u7f6e\u6162SQL\u7684\u65e5\u5fd7\u7ea7\u522b\uff0c\u9ed8\u8ba4\u503c\uff1aERROR spring.datasource.druid.filter.stat.slow-sql-log-level=ERROR # \u662f\u5426\u5408\u5e76SQL\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.stat.merge-sql=false WallFilter \u00b6 \u8fd9\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u8fc7\u6ee4\u5668\uff0c\u7528\u4e8e\u76d1\u63a7 SQL \u5b89\u5168\uff0c\u907f\u514d SQL \u6ce8\u5165\uff0c\u9ed8\u8ba4\u4e3a\u5173\u95ed\u3002\u5728 Spring \u4e2d\u914d\u7f6e\u542f\u7528 WallFilter \u65f6\uff0c\u9700\u8981\u5148\u6ce8\u5165 StatFilter \u5f00\u542f\u76d1\u63a7\u3001WallFilter \u914d\u7f6e\u5404\u79cd\u4fe1\u606f\u3001WallConfig \u914d\u7f6e\u62e6\u622a SQL \u7684\u89c4\u5219\u3002 WallConfig \u914d\u7f6e\u53c2\u6570\u8f83\u591a\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u4fdd\u6301\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef\u3002WallConfig \u914d\u7f6e\u8be6\u60c5\u6587\u6863\uff1a https://www.cnblogs.com/soundcode/p/6483899.html ## WallFilter # \u662f\u5426\u5f00\u542f SQL \u76d1\u63a7\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.wall.enabled=true LogFilter \u00b6 Druid \u5185\u7f6e\u63d0\u4f9b\u4e86\u56db\u79cd LogFilter\uff08Log4jFilter\u3001Log4j2Filter\u3001CommonsLogFilter\u3001Slf4jLogFilter\uff09\uff0c\u7528\u4e8e\u8f93\u51fa JDBC \u6267\u884c\u7684\u65e5\u5fd7\u3002\u8fd9\u4e9b Filter \u90fd\u662f Filter-Chain \u6269\u5c55\u673a\u5236\u4e2d\u7684 Filter\uff0c\u6240\u4ee5\u914d\u7f6e\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\uff1a Druid \u4e2d\u4f7f\u7528 log4j2 \u8fdb\u884c\u65e5\u5fd7\u8f93\u51fa \u5c3d\u7ba1 Druid \u652f\u6301\u65e5\u5fd7\u8fc7\u6ee4\u5668\uff0c\u4f46\u5728\u751f\u4ea7\u73af\u5883\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u5f00\u542f\u65e5\u5fd7\u914d\u7f6e\u7684\u3002\u6240\u4ee5\uff0c\u8fd9\u91cc\u53ea\u4f5c\u4e86\u89e3\uff0c\u5b9e\u9645\u5e94\u7528\u6bd4\u8f83\u590d\u6742\u3002 # \u662f\u5426\u5f00\u542f\u65e5\u5fd7\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.slf4j.enabled=false spring.datasource.druid.filter.log4j.enabled=false spring.datasource.druid.filter.log4j2.enabled=false spring.datasource.druid.filter.commons-log.enabled=false EncodingConvertFilter \u00b6 \u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u4e00\u4e9b\u6570\u636e\u5e93\u4fdd\u5b58\u6570\u636e\u7684\u65f6\u5019\u4f7f\u7528\u4e86\u9519\u8bef\u7f16\u7801\uff0c\u9700\u8981\u505a\u7f16\u7801\u8f6c\u6362\u3002\u901a\u8fc7 connectionProperties \u6765\u914d\u7f6e\u5ba2\u6237\u7aef\u7f16\u7801\u548c\u670d\u52a1\u5668\u7aef\u7f16\u7801\u3002 # \u662f\u5426\u5f00\u542f\u5b57\u7b26\u7f16\u7801\u8f6c\u6362\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.encoding.enabled=true # \u6307\u5b9a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u5b57\u7b26\u7f16\u7801 spring.datasource.druid.connection-properties=clientEncoding=UTF-8;serverEncoding=ISO-8859-1 ConfigFilter \u00b6 ConfigFilter\u7684\u4f5c\u7528\u5305\u62ec\uff1a \u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6\u914d\u7f6e \u4ece\u8fdc\u7a0bhttp\u6587\u4ef6\u4e2d\u8bfb\u53d6\u914d\u7f6e \u4e3a\u6570\u636e\u5e93\u5bc6\u7801\u63d0\u4f9b\u52a0\u5bc6\u529f\u80fd \u8be6\u60c5\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a \u4f7f\u7528 ConfigFilter # \u662f\u5426\u5f00\u542f\u914d\u7f6e\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.config.enabled=true # \u5bc6\u7801\u52a0\u5bc6\u5904\u7406\u540e\uff0c\u9700\u8981\u5f00\u542f\u89e3\u5bc6 spring.datasource.druid.connection-properties=config.decrypt=true \u591a\u6570\u636e\u6e90\u914d\u7f6e \u00b6 Spring Boot 2.X \u7248\u672c\u4e0d\u518d\u652f\u6301\u914d\u7f6e\u7ee7\u627f\uff0c\u591a\u6570\u636e\u6e90\u7684\u8bdd\u6bcf\u4e2a\u6570\u636e\u6e90\u7684\u6240\u6709\u914d\u7f6e\u90fd\u9700\u8981\u5355\u72ec\u914d\u7f6e\uff0c\u5426\u5219\u914d\u7f6e\u4e0d\u4f1a\u751f\u6548\u3002 1\uff09\u6dfb\u52a0\u591a\u6570\u636e\u914d\u7f6e\uff1a ## Spring DruidDataSource Configuration # spring.datasource.druid.one.name=DataSource-1 # spring.datasource.druid.one.driver-class-name=com.mysql.cj.jdbc.Driver spring.datasource.druid.one.url=jdbc:mysql://localhost:3306/dbname1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.druid.one.username=root spring.datasource.druid.one.password=123456 spring.datasource.druid.one.initial-size=10 spring.datasource.druid.one.min-idle=10 spring.datasource.druid.one.max-active=100 spring.datasource.druid.one.max-wait=6000 spring.datasource.druid.one.test-while-idle=true spring.datasource.druid.one.test-on-borrow=false spring.datasource.druid.one.test-on-return=false spring.datasource.druid.one.validation-query=select 1 spring.datasource.druid.one.time-between-eviction-runs-millis=30000 spring.datasource.druid.one.min-evictable-idle-time-millis=600000 spring.datasource.druid.one.max-evictable-idle-time-millis=900000 spring.datasource.druid.one.keep-alive=true ## Spring DruidDataSource Configuration # spring.datasource.druid.two.name=DataSource-1 # spring.datasource.druid.two.driver-class-name=com.mysql.cj.jdbc.Driver spring.datasource.druid.two.url=jdbc:mysql://localhost:3306/dbname2?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.druid.two.username=root spring.datasource.druid.two.password=123456 spring.datasource.druid.two.initial-size=10 spring.datasource.druid.two.min-idle=10 spring.datasource.druid.two.max-active=100 spring.datasource.druid.two.max-wait=6000 spring.datasource.druid.two.test-while-idle=true spring.datasource.druid.two.test-on-borrow=false spring.datasource.druid.two.test-on-return=false spring.datasource.druid.two.validation-query=select 1 spring.datasource.druid.two.time-between-eviction-runs-millis=30000 spring.datasource.druid.two.min-evictable-idle-time-millis=600000 spring.datasource.druid.two.max-evictable-idle-time-millis=900000 spring.datasource.druid.two.keep-alive=true 2\uff09\u521b\u5efa\u591a\u6570\u636e\u6e90\uff1a @Primary @Bean @ConfigurationProperties(\"spring.datasource.druid.one\") public DruidDataSource dataSourceOne() { return DruidDataSourceBuilder.create().build(); } @Bean @ConfigurationProperties(\"spring.datasource.druid.two\") public DruidDataSource dataSourceTwo() { return DruidDataSourceBuilder.create().build(); } 3\uff09\u4f7f\u7528\u591a\u6570\u636e\u6e90\uff1a @Autowired private DruidDataSource dataSourceOne; @Autowired @Qualifier(\"dataSourceTwo\") private DruidDataSource dataSourceTwo; \u914d\u7f6e\u591a\u6570\u636e\u6e90\u7684\u6ce8\u610f\u4e8b\u9879\uff1a \u914d\u7f6e\u591a\u6570\u636e\u6e90\u65f6\uff0c\u6700\u597d\u901a\u8fc7 @Primary \u6307\u5b9a\u9ed8\u8ba4\u6570\u636e\u6e90\u3002 Druid \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 DruidDataSource \u4ee3\u66ff DataSource\u3002 Druid \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u6ce8\u610f\u521b\u5efa Bean \u7684\u65b9\u6cd5\u540d\uff0c\u6700\u597d\u901a\u8fc7 @Bean (\"dataSourceOne\") \u6765\u6307\u5b9a\u6570\u636e\u6e90\u5bf9\u8c61\u7684\u540d\u79f0\u3002 \u591a\u6570\u636e\u6e90\u901a\u5e38\u7ed3\u5408 ORM \u6846\u67b6\u4e00\u8d77\u4f7f\u7528\uff0c\u5177\u4f53\u53ef\u53c2\u8003 Kaddo \u6846\u67b6\u7684 ORM \u914d\u7f6e\u3002","title":"Druid Spring Boot Starter"},{"location":"220615_Alibaba_Druid/#druid-spring-boot-starter","text":"Alibaba Druid \u662f\u4e00\u4e2a JDBC \u7ec4\u4ef6\u5e93\uff0c\u5305\u542b\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u3001SQL Parser \u7b49\u7ec4\u4ef6\uff0c\u88ab\u5927\u91cf\u4e1a\u52a1\u548c\u6280\u672f\u4ea7\u54c1\u4f7f\u7528\u6216\u96c6\u6210\uff0c\u7ecf\u5386\u8fc7\u4e25\u82db\u7684\u7ebf\u4e0a\u4e1a\u52a1\u573a\u666f\u8003\u9a8c\uff0c\u662f\u503c\u5f97\u4fe1\u8d56\u7684\u6280\u672f\u4ea7\u54c1\u3002Druid Spring Boot Starter \u7528\u4e8e\u5e2e\u52a9\u4f60\u5728 Spring Boot \u9879\u76ee\u4e2d\u8f7b\u677e\u96c6\u6210 Druid \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u548c\u76d1\u63a7\u3002 https://github.com/alibaba/druid","title":"Druid Spring Boot Starter"},{"location":"220615_Alibaba_Druid/#_1","text":"1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u914d\u7f6e\uff08\u5f15\u5165 Kaddo \u6846\u67b6\u4e0d\u9700\u8981\u6307\u5b9a\u7248\u672c\u53f7\uff09\uff1a <dependency> <groupId>com.alibaba</groupId> <artifactId>druid-spring-boot-starter</artifactId> <version>${alibaba-druid.version}</version> </dependency> 2\uff09\u6dfb\u52a0\u6570\u636e\u6e90\u914d\u7f6e\uff1a ## Spring DruidDataSource Configuration # spring.datasource.druid.enable=true # spring.datasource.druid.name=DataSource-1 # spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver spring.datasource.druid.url=jdbc:mysql://localhost:3306/dbname?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.druid.username=root spring.datasource.druid.password=123456 spring.datasource.druid.initial-size=10 spring.datasource.druid.min-idle=10 spring.datasource.druid.max-active=100 spring.datasource.druid.max-wait=6000 spring.datasource.druid.test-while-idle=true spring.datasource.druid.test-on-borrow=false spring.datasource.druid.test-on-return=false spring.datasource.druid.validation-query=select 1 spring.datasource.druid.time-between-eviction-runs-millis=30000 spring.datasource.druid.min-evictable-idle-time-millis=600000 spring.datasource.druid.max-evictable-idle-time-millis=900000 spring.datasource.druid.keep-alive=true 3\uff09Druid \u652f\u6301\u6839\u636e url \u6765\u81ea\u52a8\u63a2\u6d4b JDBC \u9a71\u52a8\uff0c\u5df2\u5728 druid-xxx.jar/META-INF/druid-driver.properties \u5c5e\u6027\u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002 jdbc:derby:=org.apache.derby.jdbc.EmbeddedDriver jdbc:mysql:=com.mysql.jdbc.Driver jdbc:log4jdbc:=net.sf.log4jdbc.DriverSpy jdbc:oracle:=oracle.jdbc.driver.OracleDriver jdbc:microsoft:=com.microsoft.jdbc.sqlserver.SQLServerDriver jdbc:jtds:=net.sourceforge.jtds.jdbc.Driver jdbc:postgresql:=org.postgresql.Driver jdbc:fake:=com.alibaba.druid.mock.MockDriver jdbc:hsqldb:=org.hsqldb.jdbcDriver jdbc:db2:=COM.ibm.db2.jdbc.app.DB2Driver jdbc:sqlite:=org.sqlite.JDBC jdbc:ingres:=com.ingres.jdbc.IngresDriver jdbc:h2:=org.h2.Driver jdbc:mckoi:=com.mckoi.JDBCDriver jdbc:clickhouse:=ru.yandex.clickhouse.ClickHouseDriver jdbc:highgo:=com.highgo.jdbc.Driver \u5982\u679c\u672a\u80fd\u81ea\u52a8\u63a2\u6d4b JDBC \u9a71\u52a8\uff0c\u5219\u9700\u6307\u5b9a\u9a71\u52a8\u7c7b\uff1a spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver","title":"\u5feb\u901f\u4f7f\u7528"},{"location":"220615_Alibaba_Druid/#_2","text":"Druid Spring Boot Starter \u914d\u7f6e\u5c5e\u6027\u7684\u540d\u79f0\u5b8c\u5168\u9075\u7167 Druid\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7 Spring Boot \u914d\u7f6e\u6587\u4ef6\u6765\u914d\u7f6e Druid \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u548c\u76d1\u63a7\u3002 JDBC \u914d\u7f6e\uff1a # \u5355\u6570\u636e\u6e90\u65f6\uff0cDruid \u517c\u5bb9 JDBC \u7684\u914d\u7f6e\u5982\u4e0b\uff1a spring.datasource.druid.url= # \u6216spring.datasource.url= spring.datasource.druid.username= # \u6216spring.datasource.username= spring.datasource.druid.password= # \u6216spring.datasource.password= spring.datasource.druid.driver-class-name= #\u6216 spring.datasource.driver-class-name= \u8fde\u63a5\u6c60\u914d\u7f6e\u8be6\u89e3\uff1a # \u542f\u52a8 Druid \u8fde\u63a5\u6c60\uff0c\u9ed8\u8ba4\u5f00\u542f # \u591a\u6570\u636e\u6e90\u914d\u7f6e\u65f6\uff0c\u8be5\u53c2\u6570\u4e0d\u751f\u6548 spring.datasource.druid.enable=true # \u6307\u5b9a\u9a71\u52a8\u7c7b\u540d\uff0c\u9ed8\u8ba4\u4ece URL \u4e2d\u81ea\u52a8\u63a2\u6d4b spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver # \u8bbe\u7f6e\u6570\u636e\u5e93\u8fde\u63a5 spring.datasource.druid.url=jdbc:mysql://localhost:3306/dbname # \u8bbe\u7f6e\u6570\u636e\u5e93\u7528\u6237\u540d spring.datasource.druid.username=root # \u8bbe\u7f6e\u6570\u636e\u5e93\u5bc6\u7801 spring.datasource.druid.password=123456 # \u5141\u8bb8\u8bbf\u95ee\u5e95\u5c42\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.access-to-underlying-connection-allowed=true # \u542f\u7528\u5f02\u6b65\u5173\u95ed\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1afalse # \u5982\u679c removeAbandoned = true\uff0c\u5219\u81ea\u52a8\u5f00\u542f\u3002 spring.datasource.druid.async-close-connection-enable=false # \u5f00\u542f\u5f02\u6b65\u521d\u59cb\u5316\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.async-init=false # \u5931\u8d25\u540e\u8df3\u8fc7\u5373\u7528\u4e8e\u5931\u8d25\u91cd\u8fde\uff0c\u9ed8\u8ba4\u503c\uff1afalse # true \u8868\u793a\u5411\u6570\u636e\u5e93\u8bf7\u6c42\u8fde\u63a5\u5931\u8d25\u540e\uff0c\u5c31\u7b97\u540e\u7aef\u6570\u636e\u5e93\u6062\u590d\u6b63\u5e38\u4e5f\u4e0d\u8fdb\u884c\u91cd\u8fde\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u914d\u7f6e false spring.datasource.druid.break-after-acquire-failure=false # \u68c0\u67e5SQL\u6267\u884c\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.check-execute-time=false # \u542f\u52a8\u6e05\u9664\u8fc7\u6ee4\u5668\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.clear-filters-enable=true # \u8fde\u63a5\u5c5e\u6027\u914d\u7f6e\uff0c\u591a\u4e2a\u7528\u82f1\u6587\u5206\u53f7\u9694\u5f00 spring.datasource.druid.connect-properties= # \u8fde\u63a5\u51fa\u9519\u5c1d\u8bd5\u51e0\u6b21\u91cd\u65b0\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1a1 spring.datasource.druid.connection-error-retry-attempts=1 # \u6307\u5b9a\u6570\u636e\u5e93\u7c7b\u578b\uff0c\u9ed8\u8ba4\u81ea\u52a8\u63a2\u6d4b spring.datasource.druid.db-type= # \u4e8b\u52a1\u662f\u5426\u81ea\u52a8\u63d0\u4ea4\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.default-auto-commit=true # \u6307\u5b9a\u8fde\u63a5\u9ed8\u8ba4\u7684 catalog\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.default-catalog= # \u662f\u5426\u8bbe\u7f6e\u9ed8\u8ba4\u8fde\u63a5\u53ea\u8bfb\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.default-read-only=true # \u6307\u5b9a\u8fde\u63a5\u7684\u4e8b\u52a1\u7684\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e\u3002 # -1 \u6570\u636e\u5e93\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b # 1 \u672a\u63d0\u4ea4\u8bfb # 2 \u8bfb\u5199\u63d0\u4ea4 # 4 \u53ef\u91cd\u590d\u8bfb # 8 \u4e32\u884c\u5316 spring.datasource.druid.default-transaction-isolation= # \u5f53\u521b\u5efa\u8fde\u63a5\u6c60\u65f6\uff0c\u521b\u5efa\u5931\u8d25\u540e\u662f\u5426\u7acb\u5373\u629b\u5f02\u5e38\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.fail-fast=false # \u8bbe\u7f6e\u8fc7\u6ee4\u5668\u522b\u540d\uff0c\u591a\u4e2a\u4f7f\u7528\u82f1\u6587\u9017\u53f7\u9694\u5f00\uff0c\u9ed8\u8ba4\u503c\uff1adefault # \u751f\u4ea7\u73af\u5883\u4e0d\u5efa\u8bae\u4f7f\u7528\u5176\u4ed6\u8fc7\u6ee4\u5668\u3002 spring.datasource.druid.filters=stat # \u521d\u59cb\u5316\u5f02\u5e38\u5219\u629b\u51fa\u5f02\u5e38\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.init-exception-throw=true # \u521d\u59cb\u5316\u5168\u5c40\u53d8\u91cf\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.init-global-variants=false # \u521d\u59cb\u5316\u53d8\u91cf\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.init-variants=false # \u521d\u59cb\u5316\u8fde\u63a5\u6c60\u5927\u5c0f\uff0c\u9ed8\u8ba4\u503c\uff1a0 # \u5efa\u8bae\u4e0e minIdle \u5927\u5c0f\u4fdd\u6301\u4e00\u81f4 spring.datasource.druid.initial-size=10 # \u5f00\u542f keepAlive \u64cd\u4f5c\uff0c\u9ed8\u8ba4\u503c\uff1afalse # \u6253\u5f00 keepAlive \u4e4b\u540e\u7684\u6548\u679c # 1\u3001\u521d\u59cb\u5316\u8fde\u63a5\u6c60\u65f6\u4f1a\u586b\u5145\u5230 minIdle \u6570\u91cf\u3002 # 2\u3001\u8fde\u63a5\u6c60\u4e2d\u7684 minIdle \u6570\u91cf\u4ee5\u5185\u7684\u8fde\u63a5\uff0c\u7a7a\u95f2\u65f6\u95f4\u8d85\u8fc7 minEvictableIdleTimeMillis\uff0c\u5219\u4f1a\u6267\u884c keepAlive \u64cd\u4f5c\u3002 # 3\u3001\u5f53\u7f51\u7edc\u65ad\u5f00\u7b49\u539f\u56e0\u4ea7\u751f\u7684\u7531 ExceptionSorter \u68c0\u6d4b\u51fa\u6765\u7684\u6b7b\u8fde\u63a5\u88ab\u6e05\u9664\u540e\uff0c\u81ea\u52a8\u8865\u5145\u8fde\u63a5\u5230 minIdle \u6570\u91cf\u3002 spring.datasource.druid.keep-alive=true # \u4e24\u6b21 keepAlive \u64cd\u4f5c\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u9ed8\u8ba4\u503c\uff1a120000\uff08\u5355\u4f4d\u6beb\u79d2\uff09 spring.datasource.druid.keep-alive-between-time-millis=120000 # \u6307\u5b9a\u8fde\u63a5\u6570\u636e\u5e93\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u65e0\u9650\u5236\uff08\u5355\u4f4d\u79d2\uff09 spring.datasource.druid.login-timeout= # \u8bbe\u7f6e\u6700\u5927\u8fde\u63a5\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a8 spring.datasource.druid.max-active=100 # \u6700\u5927\u521b\u5efa\u4efb\u52a1\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a3 spring.datasource.druid.max-create-task-count=3 # \u8fde\u63a5\u4fdd\u6301\u7a7a\u95f2\u800c\u4e0d\u88ab\u9a71\u9010\u7684\u6700\u5927\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a1800000\u6beb\u79d2=30\u5206\u949f spring.datasource.druid.max-evictable-idle-time-millis=1800000 # \u6700\u5927\u6253\u5f00\u7684 prepared-statement \u6570\u91cf\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u65e0\u9650\u5236\uff09 spring.datasource.druid.max-open-prepared-statements=-1 # \u8bbe\u7f6e\u6700\u5927\u7b49\u5f85\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u5355\u4f4d\u6beb\u79d2\uff09 spring.datasource.druid.max-wait=6000 # \u5141\u8bb8\u7684\u6700\u5927\u7ebf\u7a0b\u7b49\u5f85\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u65e0\u9650\u5236\uff09 spring.datasource.druid.max-wait-thread-count=-1 # \u9500\u6bc1\u7ebf\u7a0b\u65f6\u68c0\u6d4b\u5f53\u524d\u8fde\u63a5\u7684\u6700\u540e\u6d3b\u52a8\u65f6\u95f4\u548c\u5f53\u524d\u65f6\u95f4\u5dee\u5927\u4e8e\u8be5\u503c\u65f6\uff0c\u5173\u95ed\u5f53\u524d\u8fde\u63a5\u5373\u4e00\u4e2a\u8fde\u63a5\u5728\u6c60\u4e2d\u6700\u5c0f\u751f\u5b58\u7684\u65f6\u95f4\u3002\u9ed8\u8ba4\u503c\uff1a1800000\u6beb\u79d2=30\u5206\u949f spring.datasource.druid.min-evictable-idle-time-millis=1800000 # \u8bbe\u7f6e\u6700\u5c0f\u8fde\u63a5\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a0 spring.datasource.druid.min-idle=10 # \u6307\u5b9a\u8fde\u63a5\u6c60\u540d\u79f0\uff0c\u672a\u8bbe\u7f6e\u5219\u968f\u673a\u751f\u6210\uff1a`\"DataSource-\" + System.identityHashCode(this);` spring.datasource.druid.name=DataSource-1 # \u8bbe\u7f6e\u83b7\u53d6\u8fde\u63a5\u65f6\u7684\u91cd\u8bd5\u6b21\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a0 spring.datasource.druid.not-full-timeout-retry-count=0 # \u7528\u4e8e\u63a7\u5236\u5f53 OnFatalError \u53d1\u751f\u65f6\u6700\u5927\u4f7f\u7528\u8fde\u63a5\u6570\u91cf\uff0c\u7528\u4e8e\u63a7\u5236\u5f02\u5e38\u53d1\u751f\u65f6\u5e76\u53d1\u6267\u884cSQL\u7684\u6570\u91cf\uff0c\u51cf\u8f7b\u6570\u636e\u5e93\u6062\u590d\u7684\u538b\u529b\u3002\u9ed8\u8ba4\u503c\uff1a0 spring.datasource.druid.on-fatal-error-max-active=0 # \u662f\u5426\u662f Oracle \u6570\u636e\u5e93\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.oracle=false # \u7269\u7406\u6700\u5927\u8fde\u63a5\u6570\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u65e0\u9650\u5236\uff09 spring.datasource.druid.phy-max-use-count=-1 # \u7269\u7406\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u65e0\u9650\u5236\uff0c\u5355\u4f4d\u6beb\u79d2\uff09 spring.datasource.druid.phy-timeout-millis=-1 # oracle \u8bbe\u4e3a true\uff0cmysql \u8bbe\u4e3a false\u3002\u5206\u5e93\u5206\u8868\u8f83\u591a\u63a8\u8350\u8bbe\u7f6e\u4e3a false\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.pool-prepared-statements=false # \u6253\u5f00PSCache\uff0c\u5e76\u4e14\u6307\u5b9a\u6bcf\u4e2a\u8fde\u63a5\u4e0aPSCache\u7684\u5927\u5c0f\uff0c\u9ed8\u8ba4\u503c\uff1a10 # poolPreparedStatements \u9ed8\u8ba4\u4e3a false\uff0c\u5c5e\u6027\u6587\u4ef6\u4e2d\u5c06 poolPreparedStatements \u8bbe\u7f6e\u4e3a true\uff0c\u5219\u8be5\u503c\u751f\u6548\u3002 # \u82e5\u5c5e\u6027\u6587\u4ef6\u4e2d\u8bbe\u7f6e\u8be5\u503c\u4e14\u5927\u4e8e0\u65f6\uff0cpoolPreparedStatements \u4f1a\u81ea\u52a8\u8bbe\u7f6e\u4e3a true\u3002 spring.datasource.druid.max-pool-prepared-statement-per-connection-size=10 # \u67e5\u8be2\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a0\uff08\u65e0\u9650\u5236\uff0c\u5355\u4f4d\u79d2\uff09 spring.datasource.druid.query-timeout=0 # \u6307\u5b9a\u5f53\u8fde\u63a5\u8d85\u8fc7\u5e9f\u5f03\u8d85\u65f6\u65f6\u95f4\u65f6\uff0c\u662f\u5426\u7acb\u523b\u5220\u9664\u8be5\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.remove-abandoned=false # \u5e9f\u5f03\u8fde\u63a5\u8d85\u65f6\u6307\u5b9a\u65f6\u95f4\u7684\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1a5\u5206\u949f spring.datasource.druid.remove-abandoned-timeout-millis=300 * 1000 # \u5171\u4eab\u9884\u5904\u7406\u8bed\u53e5\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.share-prepared-statements=false # \u4ece\u8fde\u63a5\u6c60\u501f\u7528\u8fde\u63a5\u65f6\uff0c\u662f\u5426\u6d4b\u8bd5\u8be5\u8fde\u63a5\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.test-on-borrow=false # \u7533\u8bf7\u8fde\u63a5\u65f6\u68c0\u6d4b\uff0c\u5982\u679c\u7a7a\u95f2\u65f6\u95f4\u5927\u4e8e timeBetweenEvictionRunsMillis\uff0c\u6267\u884c validationQuery \u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\u3002\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.test-on-return=false # \u5f52\u8fd8\u8fde\u63a5\u65f6\u4f1a\u6267\u884c validationQuery \u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.test-while-idle=true # \u6307\u5b9a\u4e24\u6b21\u9519\u8bef\u8fde\u63a5\u7684\u6700\u5927\u65f6\u95f4\u95f4\u9694\uff0c\u9ed8\u8ba4\u503c\uff1a500\u6beb\u79d2 spring.datasource.druid.time-between-connect-error-millis=500 # \u65e2\u4f5c\u4e3a\u68c0\u6d4b\u7684\u95f4\u9694\u65f6\u95f4\u53c8\u4f5c\u4e3a testWhileIdel \u6267\u884c\u7684\u4f9d\u636e\u5373\u6b64\u503c\u51b3\u5b9a\u662f\u5426\u7a7a\u95f2\uff0c\u56e0\u6b64\u6b64\u503c\u4e00\u5b9a\u8981\u8bbe\u7f6e\u5408\u7406\u3002 # \u5373\u4e00\u4e2a\u7a7a\u95f2\u7ebf\u7a0b\uff0c\u6700\u5927\u7684\u751f\u6210\u65f6\u95f4\uff0c\u68c0\u6d4b\u9700\u8981\u5173\u95ed\u7684\u7a7a\u95f2\u8fde\u63a5\u3002\u9ed8\u8ba4\u503c\uff1a60000\u6beb\u79d2 spring.datasource.druid.time-between-eviction-runs-millis=30000 # \u4e8b\u52a1\u67e5\u8be2\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a0\uff08\u5c0f\u4e8e\u6216\u7b49\u4e8e 0 \u65f6\u53d6 query-timeout \u7684\u503c\uff09 spring.datasource.druid.transaction-query-timeout=0 # \u4e8b\u52a1\u65f6\u95f4\u9608\u503c\uff0c\u9ed8\u8ba4\u503c\uff1a0\uff08\u5355\u4f4d\u6beb\u79d2\uff09 spring.datasource.druid.transaction-threshold-millis=0 # \u4f7f\u7528\u975e\u516c\u5e73\u9501\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.use-unfair-lock=true # \u4f7f\u7528 Oracle \u9690\u5f0f\u7f13\u5b58\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.use-oracle-implicit-cache=true # \u6307\u5b9a\u8fde\u63a5\u7684\u6709\u6548\u68c0\u67e5\u7c7b\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.valid-connection-checker= # \u7528\u6765\u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\u7684 SQL \u5fc5\u987b\u662f\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\uff0c\u9ed8\u8ba4\u672a\u8bbe spring.datasource.druid.validation-query=select 1 # \u68c0\u6d4b\u8fde\u63a5\u662f\u5426\u6709\u6548\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u503c\uff1a-1\uff08\u5355\u4f4d\u79d2\uff09 spring.datasource.druid.validation-query-timeout=-1","title":"\u8fde\u63a5\u6c60\u914d\u7f6e"},{"location":"220615_Alibaba_Druid/#_3","text":"Druid \u5185\u7f6e\u7684\u8fc7\u6ee4\u5668\u7c7b\u53ca\u522b\u540d\uff0c\u5df2\u5728 druid-xxx.jar/META-INF/druid-filter.properties \u5c5e\u6027\u6587\u4ef6\u4e2d\u5b9a\u4e49\uff1a druid.filters.default=com.alibaba.druid.filter.stat.StatFilter druid.filters.stat=com.alibaba.druid.filter.stat.StatFilter druid.filters.mergeStat=com.alibaba.druid.filter.stat.MergeStatFilter druid.filters.counter=com.alibaba.druid.filter.stat.StatFilter druid.filters.encoding=com.alibaba.druid.filter.encoding.EncodingConvertFilter druid.filters.log4j=com.alibaba.druid.filter.logging.Log4jFilter druid.filters.log4j2=com.alibaba.druid.filter.logging.Log4j2Filter druid.filters.slf4j=com.alibaba.druid.filter.logging.Slf4jLogFilter druid.filters.commonlogging=com.alibaba.druid.filter.logging.CommonsLogFilter druid.filters.commonLogging=com.alibaba.druid.filter.logging.CommonsLogFilter druid.filters.wall=com.alibaba.druid.wall.WallFilter druid.filters.config=com.alibaba.druid.filter.config.ConfigFilter druid.filters.haRandomValidator=com.alibaba.druid.pool.ha.selector.RandomDataSourceValidateFilter \u9664 StatFilter \u4f5c\u4e3a\u9ed8\u8ba4\u8fc7\u6ee4\u5668\u5916\uff0c\u5176\u4ed6\u90fd\u4e3a\u5173\u95ed\u72b6\u6001\u3002\u914d\u7f6e\u8fc7\u6ee4\u5668\u7684\u65b9\u6cd5\u5982\u4e0b\uff1a # \u8bbe\u7f6e\u8fc7\u6ee4\u5668\u522b\u540d\uff0c\u591a\u4e2a\u4f7f\u7528\u82f1\u6587\u9017\u53f7\u9694\u5f00\uff0c\u9ed8\u8ba4\u503c\uff1adefault # \u751f\u4ea7\u73af\u5883\u4e0d\u5efa\u8bae\u4f7f\u7528\u5176\u4ed6\u8fc7\u6ee4\u5668\u3002 spring.datasource.druid.filters=stat","title":"\u8fc7\u6ee4\u5668\u914d\u7f6e"},{"location":"220615_Alibaba_Druid/#statviewservlet","text":"Druid \u7ba1\u63a7\u53f0\u914d\u7f6e\uff0c\u8003\u8651\u5230\u5b89\u5168\u95ee\u9898\u9ed8\u8ba4\u4e3a\u5173\u95ed\uff0c\u5982\u9700\u5f00\u542f\uff0c\u5efa\u8bae\u8bbe\u7f6e\u5bc6\u7801\u6216\u767d\u540d\u5355\u4ee5\u4fdd\u969c\u5b89\u5168\u3002\u914d\u7f6e\u5f00\u542f\u540e\uff0c\u624d\u80fd\u6253\u5f00\u7ba1\u63a7\u53f0\u9875\u9762\u67e5\u770b\u76d1\u63a7\u4fe1\u606f\u3002 \u6d4f\u89c8\u5668\u8bbf\u95ee\uff1a http://127.0.0.1:8080/druid/index.html ## DruidStatViewServletConfiguration # \u662f\u5426\u5f00\u542f\u7ba1\u63a7\u53f0\u9875\u9762\u8bbf\u95ee\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.stat-view-servlet.enabled=true # URL \u6620\u5c04\u8def\u5f84\uff0c\u9ed8\u8ba4\u503c\uff1a/druid/* spring.datasource.druid.stat-view-servlet.url-pattern=/druid/* # \u662f\u5426\u5141\u8bb8\u91cd\u7f6e\uff0c\u9ed8\u8ba4\u5141\u8bb8 # \u6ce8\u610f\uff1a\u8bbe\u7f6e\u4e3a false \u540e\uff0c\u7ba1\u63a7\u53f0\u7684\u91cd\u7f6e\u6309\u94ae\u5e76\u4e0d\u4f1a\u6d88\u5931\uff0c\u4f46\u6570\u636e\u4e0d\u4f1a\u91cd\u7f6e spring.datasource.druid.stat-view-servlet.reset-enable=false # \u7ba1\u63a7\u53f0\u767b\u5f55\u7528\u6237\u540d\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.stat-view-servlet.login-username=admin # \u7ba1\u63a7\u53f0\u767b\u5f55\u5bc6\u7801\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.stat-view-servlet.login-password=admin123 # \u7ba1\u63a7\u53f0\u8bbf\u95ee\u767d\u540d\u5355\uff0c\u9ed8\u8ba4\u503c\uff1a127.0.0.1 spring.datasource.druid.stat-view-servlet.allow=127.0.0.1,10.177.37.15 # \u7ba1\u63a7\u53f0\u8bbf\u95ee\u9ed1\u540d\u5355\uff0c\u9ed8\u8ba4\u672a\u8bbe\u7f6e spring.datasource.druid.stat-view-servlet.deny=10.177.37.14","title":"StatViewServlet"},{"location":"220615_Alibaba_Druid/#webstatfilter","text":"\u5f00\u542f Web \u8bf7\u6c42\u76d1\u63a7\uff0c\u9ed8\u8ba4\u4e3a\u5173\u95ed\u3002\u914d\u7f6e\u5f00\u542f\u540e\uff0c\u53ef\u4ee5\u5728 Druid \u7ba1\u63a7\u53f0\u67e5\u770b Web \u8bf7\u6c42\u7684\u76d1\u63a7\u4fe1\u606f\u3002 ## DruidWebStatFilterConfiguration # \u662f\u5426\u5f00\u542f Web \u8bf7\u6c42\u7684\u7edf\u8ba1\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.web-stat-filter.enabled=true # \u4ee5\u4e0b\u53c2\u6570\u4fdd\u6301\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef\uff0c\u751f\u4ea7\u73af\u5883\u4e0d\u5efa\u8bae\u542f\u7528 # spring.datasource.druid.web-stat-filter.url-pattern= # spring.datasource.druid.web-stat-filter.exclusions= # spring.datasource.druid.web-stat-filter.session-stat-enable= # spring.datasource.druid.web-stat-filter.session-stat-max-count= # spring.datasource.druid.web-stat-filter.principal-session-name= # spring.datasource.druid.web-stat-filter.principal-cookie-name= # spring.datasource.druid.web-stat-filter.profile-enable=","title":"WebStatFilter"},{"location":"220615_Alibaba_Druid/#statfilter","text":"\u7528\u4e8e\u7edf\u8ba1\u76d1\u63a7\u4fe1\u606f\uff0c\u9ed8\u8ba4\u5f00\u542f\u3002 ## StatFilter # \u662f\u5426\u5f00\u542f\u7edf\u8ba1\uff0c\u9ed8\u8ba4\u503c\uff1atrue spring.datasource.druid.filter.stat.enabled=true # \u542f\u52a8\u8fde\u63a5\u5806\u8ddf\u8e2a\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.stat.connection-stack-trace-enable=false # \u662f\u5426\u5728\u65e5\u5fd7\u4e2d\u6253\u5370\u6162SQL\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.stat.log-slow-sql=true # \u8bbe\u7f6e\u6162SQL\u7684\u6267\u884c\u65f6\u957f\uff0c\u9ed8\u8ba4\u503c\uff1a3000\u6beb\u79d2 spring.datasource.druid.filter.stat.slow-sql-millis=3000 # \u8bbe\u7f6e\u6162SQL\u7684\u65e5\u5fd7\u7ea7\u522b\uff0c\u9ed8\u8ba4\u503c\uff1aERROR spring.datasource.druid.filter.stat.slow-sql-log-level=ERROR # \u662f\u5426\u5408\u5e76SQL\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.stat.merge-sql=false","title":"StatFilter"},{"location":"220615_Alibaba_Druid/#wallfilter","text":"\u8fd9\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u8fc7\u6ee4\u5668\uff0c\u7528\u4e8e\u76d1\u63a7 SQL \u5b89\u5168\uff0c\u907f\u514d SQL \u6ce8\u5165\uff0c\u9ed8\u8ba4\u4e3a\u5173\u95ed\u3002\u5728 Spring \u4e2d\u914d\u7f6e\u542f\u7528 WallFilter \u65f6\uff0c\u9700\u8981\u5148\u6ce8\u5165 StatFilter \u5f00\u542f\u76d1\u63a7\u3001WallFilter \u914d\u7f6e\u5404\u79cd\u4fe1\u606f\u3001WallConfig \u914d\u7f6e\u62e6\u622a SQL \u7684\u89c4\u5219\u3002 WallConfig \u914d\u7f6e\u53c2\u6570\u8f83\u591a\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\u4fdd\u6301\u9ed8\u8ba4\u914d\u7f6e\u5373\u53ef\u3002WallConfig \u914d\u7f6e\u8be6\u60c5\u6587\u6863\uff1a https://www.cnblogs.com/soundcode/p/6483899.html ## WallFilter # \u662f\u5426\u5f00\u542f SQL \u76d1\u63a7\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.wall.enabled=true","title":"WallFilter"},{"location":"220615_Alibaba_Druid/#logfilter","text":"Druid \u5185\u7f6e\u63d0\u4f9b\u4e86\u56db\u79cd LogFilter\uff08Log4jFilter\u3001Log4j2Filter\u3001CommonsLogFilter\u3001Slf4jLogFilter\uff09\uff0c\u7528\u4e8e\u8f93\u51fa JDBC \u6267\u884c\u7684\u65e5\u5fd7\u3002\u8fd9\u4e9b Filter \u90fd\u662f Filter-Chain \u6269\u5c55\u673a\u5236\u4e2d\u7684 Filter\uff0c\u6240\u4ee5\u914d\u7f6e\u65b9\u5f0f\u53ef\u4ee5\u53c2\u8003\u8fd9\u91cc\uff1a Druid \u4e2d\u4f7f\u7528 log4j2 \u8fdb\u884c\u65e5\u5fd7\u8f93\u51fa \u5c3d\u7ba1 Druid \u652f\u6301\u65e5\u5fd7\u8fc7\u6ee4\u5668\uff0c\u4f46\u5728\u751f\u4ea7\u73af\u5883\u51e0\u4e4e\u662f\u4e0d\u53ef\u80fd\u5f00\u542f\u65e5\u5fd7\u914d\u7f6e\u7684\u3002\u6240\u4ee5\uff0c\u8fd9\u91cc\u53ea\u4f5c\u4e86\u89e3\uff0c\u5b9e\u9645\u5e94\u7528\u6bd4\u8f83\u590d\u6742\u3002 # \u662f\u5426\u5f00\u542f\u65e5\u5fd7\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.slf4j.enabled=false spring.datasource.druid.filter.log4j.enabled=false spring.datasource.druid.filter.log4j2.enabled=false spring.datasource.druid.filter.commons-log.enabled=false","title":"LogFilter"},{"location":"220615_Alibaba_Druid/#encodingconvertfilter","text":"\u7531\u4e8e\u5386\u53f2\u539f\u56e0\uff0c\u4e00\u4e9b\u6570\u636e\u5e93\u4fdd\u5b58\u6570\u636e\u7684\u65f6\u5019\u4f7f\u7528\u4e86\u9519\u8bef\u7f16\u7801\uff0c\u9700\u8981\u505a\u7f16\u7801\u8f6c\u6362\u3002\u901a\u8fc7 connectionProperties \u6765\u914d\u7f6e\u5ba2\u6237\u7aef\u7f16\u7801\u548c\u670d\u52a1\u5668\u7aef\u7f16\u7801\u3002 # \u662f\u5426\u5f00\u542f\u5b57\u7b26\u7f16\u7801\u8f6c\u6362\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.encoding.enabled=true # \u6307\u5b9a\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u7aef\u7684\u5b57\u7b26\u7f16\u7801 spring.datasource.druid.connection-properties=clientEncoding=UTF-8;serverEncoding=ISO-8859-1","title":"EncodingConvertFilter"},{"location":"220615_Alibaba_Druid/#configfilter","text":"ConfigFilter\u7684\u4f5c\u7528\u5305\u62ec\uff1a \u4ece\u914d\u7f6e\u6587\u4ef6\u4e2d\u8bfb\u53d6\u914d\u7f6e \u4ece\u8fdc\u7a0bhttp\u6587\u4ef6\u4e2d\u8bfb\u53d6\u914d\u7f6e \u4e3a\u6570\u636e\u5e93\u5bc6\u7801\u63d0\u4f9b\u52a0\u5bc6\u529f\u80fd \u8be6\u60c5\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a \u4f7f\u7528 ConfigFilter # \u662f\u5426\u5f00\u542f\u914d\u7f6e\uff0c\u9ed8\u8ba4\u503c\uff1afalse spring.datasource.druid.filter.config.enabled=true # \u5bc6\u7801\u52a0\u5bc6\u5904\u7406\u540e\uff0c\u9700\u8981\u5f00\u542f\u89e3\u5bc6 spring.datasource.druid.connection-properties=config.decrypt=true","title":"ConfigFilter"},{"location":"220615_Alibaba_Druid/#_4","text":"Spring Boot 2.X \u7248\u672c\u4e0d\u518d\u652f\u6301\u914d\u7f6e\u7ee7\u627f\uff0c\u591a\u6570\u636e\u6e90\u7684\u8bdd\u6bcf\u4e2a\u6570\u636e\u6e90\u7684\u6240\u6709\u914d\u7f6e\u90fd\u9700\u8981\u5355\u72ec\u914d\u7f6e\uff0c\u5426\u5219\u914d\u7f6e\u4e0d\u4f1a\u751f\u6548\u3002 1\uff09\u6dfb\u52a0\u591a\u6570\u636e\u914d\u7f6e\uff1a ## Spring DruidDataSource Configuration # spring.datasource.druid.one.name=DataSource-1 # spring.datasource.druid.one.driver-class-name=com.mysql.cj.jdbc.Driver spring.datasource.druid.one.url=jdbc:mysql://localhost:3306/dbname1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.druid.one.username=root spring.datasource.druid.one.password=123456 spring.datasource.druid.one.initial-size=10 spring.datasource.druid.one.min-idle=10 spring.datasource.druid.one.max-active=100 spring.datasource.druid.one.max-wait=6000 spring.datasource.druid.one.test-while-idle=true spring.datasource.druid.one.test-on-borrow=false spring.datasource.druid.one.test-on-return=false spring.datasource.druid.one.validation-query=select 1 spring.datasource.druid.one.time-between-eviction-runs-millis=30000 spring.datasource.druid.one.min-evictable-idle-time-millis=600000 spring.datasource.druid.one.max-evictable-idle-time-millis=900000 spring.datasource.druid.one.keep-alive=true ## Spring DruidDataSource Configuration # spring.datasource.druid.two.name=DataSource-1 # spring.datasource.druid.two.driver-class-name=com.mysql.cj.jdbc.Driver spring.datasource.druid.two.url=jdbc:mysql://localhost:3306/dbname2?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.druid.two.username=root spring.datasource.druid.two.password=123456 spring.datasource.druid.two.initial-size=10 spring.datasource.druid.two.min-idle=10 spring.datasource.druid.two.max-active=100 spring.datasource.druid.two.max-wait=6000 spring.datasource.druid.two.test-while-idle=true spring.datasource.druid.two.test-on-borrow=false spring.datasource.druid.two.test-on-return=false spring.datasource.druid.two.validation-query=select 1 spring.datasource.druid.two.time-between-eviction-runs-millis=30000 spring.datasource.druid.two.min-evictable-idle-time-millis=600000 spring.datasource.druid.two.max-evictable-idle-time-millis=900000 spring.datasource.druid.two.keep-alive=true 2\uff09\u521b\u5efa\u591a\u6570\u636e\u6e90\uff1a @Primary @Bean @ConfigurationProperties(\"spring.datasource.druid.one\") public DruidDataSource dataSourceOne() { return DruidDataSourceBuilder.create().build(); } @Bean @ConfigurationProperties(\"spring.datasource.druid.two\") public DruidDataSource dataSourceTwo() { return DruidDataSourceBuilder.create().build(); } 3\uff09\u4f7f\u7528\u591a\u6570\u636e\u6e90\uff1a @Autowired private DruidDataSource dataSourceOne; @Autowired @Qualifier(\"dataSourceTwo\") private DruidDataSource dataSourceTwo; \u914d\u7f6e\u591a\u6570\u636e\u6e90\u7684\u6ce8\u610f\u4e8b\u9879\uff1a \u914d\u7f6e\u591a\u6570\u636e\u6e90\u65f6\uff0c\u6700\u597d\u901a\u8fc7 @Primary \u6307\u5b9a\u9ed8\u8ba4\u6570\u636e\u6e90\u3002 Druid \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 DruidDataSource \u4ee3\u66ff DataSource\u3002 Druid \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u6ce8\u610f\u521b\u5efa Bean \u7684\u65b9\u6cd5\u540d\uff0c\u6700\u597d\u901a\u8fc7 @Bean (\"dataSourceOne\") \u6765\u6307\u5b9a\u6570\u636e\u6e90\u5bf9\u8c61\u7684\u540d\u79f0\u3002 \u591a\u6570\u636e\u6e90\u901a\u5e38\u7ed3\u5408 ORM \u6846\u67b6\u4e00\u8d77\u4f7f\u7528\uff0c\u5177\u4f53\u53ef\u53c2\u8003 Kaddo \u6846\u67b6\u7684 ORM \u914d\u7f6e\u3002","title":"\u591a\u6570\u636e\u6e90\u914d\u7f6e"},{"location":"220615_Mysql_Url_Params/","text":"MySQL URL \u8fde\u63a5\u53c2\u6570\u8bbe\u7f6e \u00b6 MySQL URL \u8fde\u63a5\u53ef\u4ee5\u643a\u5e26\u53c2\u6570\uff0c\u901a\u7528\u914d\u7f6e\u6a21\u677f\u5982\u4e0b\uff1a # \u901a\u8fc7URL\u8bbe\u7f6e\u8fde\u63a5\u53c2\u6570 spring.datasource.url=jdbc:mysql://localhost:3306/dbname?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&failOverReadOnly=false&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull \u53c2\u6570\u8bf4\u660e \u00b6 \u4ee5\u4e0b\u662f\u90e8\u5206\u6bd4\u8f83\u5e38\u7528\u7684\u53c2\u6570\u3002 serverTimezone \u00b6 \u8bbe\u7f6e\u65f6\u533a\u3002 MySQL\u9ad8\u7248\u672c\u4e2d\u5982\u679c\u4e0d\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\u3002UTC\u8868\u793a\u5168\u7403\u6807\u51c6\u65f6\u95f4\uff0c\u56fd\u5185\u5efa\u8bae\u4f7f\u7528\u4e2d\u56fd\u6807\u51c6\u65f6\u95f4\uff1a # \u4e0a\u6d77\u65f6\u95f4 serverTimezone=Asia/Shanghai # \u5317\u4eac\u65f6\u95f4\u4e1c\u516b\u533a serverTimezone=GMT%2B8 characterEncoding \u00b6 \u8bbe\u7f6e\u5b57\u7b26\u96c6\u7684\u7f16\u7801\u7c7b\u578b\u3002 characterEncoding=utf-8 useUnicode \u00b6 \u662f\u5426\u4f7f\u7528\u7f16\u7801\u96c6\u3002 useUnicode=true autoReconnect \u00b6 \u5f53\u6570\u636e\u5e93\u8fde\u63a5\u4e2d\u65ad\u65f6\uff0c\u662f\u5426\u81ea\u52a8\u91cd\u65b0\u8fde\u63a5\uff1f\u7f3a\u7701\u4e3a false\u3002 autoReconnect=true \u5173\u8054\u7684\u4e24\u4e2a\u53c2\u6570\uff1a maxReconnects\uff1a\u5f53 autoReconnect \u8bbe\u7f6e\u4e3a true \u65f6\uff0c\u91cd\u8bd5\u8fde\u63a5\u7684\u6b21\u6570\uff0c\u7f3a\u7701\u4e3a 3 \u6b21\u3002 initialTimeout\uff1a\u5f53 autoReconnect \u8bbe\u7f6e\u4e3a true \u65f6\uff0c\u4e24\u6b21\u91cd\u8fde\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u7f3a\u7701\u4e3a 2 \u79d2\u3002 autoReconnectForPools \u00b6 \u662f\u5426\u4f7f\u7528\u9488\u5bf9\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7684\u91cd\u8fde\u7b56\u7565\u3002\u7f3a\u7701\u4e3a false\u3002 autoReconnectForPools=true failOverReadOnly \u00b6 \u81ea\u52a8\u91cd\u8fde\u6210\u529f\u540e\uff0c\u8fde\u63a5\u662f\u5426\u8bbe\u7f6e\u4e3a\u53ea\u8bfb\uff1f\u7f3a\u7701\u4e3a true\u3002 \u5f53 autoReconnect \u8bbe\u7f6e\u4e3a true \u65f6\uff0c\u5efa\u8bae\u5c06\u6b64\u53c2\u6570\u8bbe\u7f6e\u4e3a false\u3002 failOverReadOnly=false noAccessToProcedureBodies \u00b6 JDBC \u8c03\u7528\u5b58\u50a8\u8fc7\u7a0b\u65f6\u9700\u8981\u6709 show create procudure \u6743\u9650\u6216\u662f\u6709\u8868 mysql.proc \u7684 select \u7684\u6743\u9650\uff0c\u53ef\u4ee5\u6dfb\u52a0\u8be5\u53c2\u6570\u3002\u7f3a\u7701\u4e3a false\u3002 noAccessToProcedureBodies=true \u8fd9\u6837\u505a\u4f1a\u5b58\u5728\u4e00\u4e9b\u5f71\u54cd\uff1a \u8c03\u7528\u5b58\u50a8\u8fc7\u7a0b\u65f6\uff0c\u5c06\u6ca1\u6709\u7c7b\u578b\u68c0\u67e5\uff0c\u8bbe\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5e76\u4e14\u6240\u6709\u7684\u53c2\u6570\u8bbe\u4e3a in \u7c7b\u578b\uff0c\u4f46\u662f\u5728\u8c03\u7528 registerOutParameter \u65f6\uff0c\u4e0d\u629b\u51fa\u5f02\u5e38\u3002 \u5b58\u50a8\u8fc7\u7a0b\u7684\u67e5\u8be2\u7ed3\u679c\u65e0\u6cd5\u4f7f\u7528 getXXX(String parameterName) \u7684\u5f62\u5f0f\u83b7\u53d6\uff0c\u53ea\u80fd\u901a\u8fc7 getXXX(int parameterIndex) \u7684\u65b9\u5f0f\u83b7\u53d6\u3002 \u66f4\u597d\u7684\u65b9\u5f0f\u662f\uff1a\u7ed9 MySQL \u666e\u901a\u7528\u6237\u6388\u4e88\u76f8\u5e94\u7684\u6743\u9650\u3002 grant select on mysql.proc to 'user'@%; useSSL \u00b6 MySQL\u9ad8\u7248\u672c\u652f\u6301\u662f\u5426\u4f7f\u7528 useSSL\uff0c\u7f3a\u7701\u4e3a true\u3002 useSSL=true allowMultiQueries \u00b6 \u7f3a\u7701\u4e3a false\u3002 \u53ef\u4ee5\u5728 SQL \u8bed\u53e5\u540e\u643a\u5e26\u5206\u53f7\uff0c\u5b9e\u73b0\u591a\u8bed\u53e5\u6267\u884c\u3002 \u53ef\u4ee5\u6267\u884c\u6279\u5904\u7406\uff0c\u540c\u65f6\u53d1\u51fa\u591a\u4e2a SQL \u8bed\u53e5\u3002 allowMultiQueries=true zeroDateTimeBehavior \u00b6 datetime \u5b57\u6bb5\u7684\u503c\u5168\u90e8\u4e3a 0 \u65f6\u7684\u5904\u7406\u65b9\u5f0f\u3002 zeroDateTimeBehavior=convertToNull","title":"MySQL URL \u8fde\u63a5\u53c2\u6570\u8bbe\u7f6e"},{"location":"220615_Mysql_Url_Params/#mysql-url","text":"MySQL URL \u8fde\u63a5\u53ef\u4ee5\u643a\u5e26\u53c2\u6570\uff0c\u901a\u7528\u914d\u7f6e\u6a21\u677f\u5982\u4e0b\uff1a # \u901a\u8fc7URL\u8bbe\u7f6e\u8fde\u63a5\u53c2\u6570 spring.datasource.url=jdbc:mysql://localhost:3306/dbname?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&failOverReadOnly=false&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull","title":"MySQL URL \u8fde\u63a5\u53c2\u6570\u8bbe\u7f6e"},{"location":"220615_Mysql_Url_Params/#_1","text":"\u4ee5\u4e0b\u662f\u90e8\u5206\u6bd4\u8f83\u5e38\u7528\u7684\u53c2\u6570\u3002","title":"\u53c2\u6570\u8bf4\u660e"},{"location":"220615_Mysql_Url_Params/#servertimezone","text":"\u8bbe\u7f6e\u65f6\u533a\u3002 MySQL\u9ad8\u7248\u672c\u4e2d\u5982\u679c\u4e0d\u8bbe\u7f6e\u53ef\u80fd\u4f1a\u6709\u95ee\u9898\u3002UTC\u8868\u793a\u5168\u7403\u6807\u51c6\u65f6\u95f4\uff0c\u56fd\u5185\u5efa\u8bae\u4f7f\u7528\u4e2d\u56fd\u6807\u51c6\u65f6\u95f4\uff1a # \u4e0a\u6d77\u65f6\u95f4 serverTimezone=Asia/Shanghai # \u5317\u4eac\u65f6\u95f4\u4e1c\u516b\u533a serverTimezone=GMT%2B8","title":"serverTimezone"},{"location":"220615_Mysql_Url_Params/#characterencoding","text":"\u8bbe\u7f6e\u5b57\u7b26\u96c6\u7684\u7f16\u7801\u7c7b\u578b\u3002 characterEncoding=utf-8","title":"characterEncoding"},{"location":"220615_Mysql_Url_Params/#useunicode","text":"\u662f\u5426\u4f7f\u7528\u7f16\u7801\u96c6\u3002 useUnicode=true","title":"useUnicode"},{"location":"220615_Mysql_Url_Params/#autoreconnect","text":"\u5f53\u6570\u636e\u5e93\u8fde\u63a5\u4e2d\u65ad\u65f6\uff0c\u662f\u5426\u81ea\u52a8\u91cd\u65b0\u8fde\u63a5\uff1f\u7f3a\u7701\u4e3a false\u3002 autoReconnect=true \u5173\u8054\u7684\u4e24\u4e2a\u53c2\u6570\uff1a maxReconnects\uff1a\u5f53 autoReconnect \u8bbe\u7f6e\u4e3a true \u65f6\uff0c\u91cd\u8bd5\u8fde\u63a5\u7684\u6b21\u6570\uff0c\u7f3a\u7701\u4e3a 3 \u6b21\u3002 initialTimeout\uff1a\u5f53 autoReconnect \u8bbe\u7f6e\u4e3a true \u65f6\uff0c\u4e24\u6b21\u91cd\u8fde\u4e4b\u95f4\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u7f3a\u7701\u4e3a 2 \u79d2\u3002","title":"autoReconnect"},{"location":"220615_Mysql_Url_Params/#autoreconnectforpools","text":"\u662f\u5426\u4f7f\u7528\u9488\u5bf9\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u7684\u91cd\u8fde\u7b56\u7565\u3002\u7f3a\u7701\u4e3a false\u3002 autoReconnectForPools=true","title":"autoReconnectForPools"},{"location":"220615_Mysql_Url_Params/#failoverreadonly","text":"\u81ea\u52a8\u91cd\u8fde\u6210\u529f\u540e\uff0c\u8fde\u63a5\u662f\u5426\u8bbe\u7f6e\u4e3a\u53ea\u8bfb\uff1f\u7f3a\u7701\u4e3a true\u3002 \u5f53 autoReconnect \u8bbe\u7f6e\u4e3a true \u65f6\uff0c\u5efa\u8bae\u5c06\u6b64\u53c2\u6570\u8bbe\u7f6e\u4e3a false\u3002 failOverReadOnly=false","title":"failOverReadOnly"},{"location":"220615_Mysql_Url_Params/#noaccesstoprocedurebodies","text":"JDBC \u8c03\u7528\u5b58\u50a8\u8fc7\u7a0b\u65f6\u9700\u8981\u6709 show create procudure \u6743\u9650\u6216\u662f\u6709\u8868 mysql.proc \u7684 select \u7684\u6743\u9650\uff0c\u53ef\u4ee5\u6dfb\u52a0\u8be5\u53c2\u6570\u3002\u7f3a\u7701\u4e3a false\u3002 noAccessToProcedureBodies=true \u8fd9\u6837\u505a\u4f1a\u5b58\u5728\u4e00\u4e9b\u5f71\u54cd\uff1a \u8c03\u7528\u5b58\u50a8\u8fc7\u7a0b\u65f6\uff0c\u5c06\u6ca1\u6709\u7c7b\u578b\u68c0\u67e5\uff0c\u8bbe\u4e3a\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u5e76\u4e14\u6240\u6709\u7684\u53c2\u6570\u8bbe\u4e3a in \u7c7b\u578b\uff0c\u4f46\u662f\u5728\u8c03\u7528 registerOutParameter \u65f6\uff0c\u4e0d\u629b\u51fa\u5f02\u5e38\u3002 \u5b58\u50a8\u8fc7\u7a0b\u7684\u67e5\u8be2\u7ed3\u679c\u65e0\u6cd5\u4f7f\u7528 getXXX(String parameterName) \u7684\u5f62\u5f0f\u83b7\u53d6\uff0c\u53ea\u80fd\u901a\u8fc7 getXXX(int parameterIndex) \u7684\u65b9\u5f0f\u83b7\u53d6\u3002 \u66f4\u597d\u7684\u65b9\u5f0f\u662f\uff1a\u7ed9 MySQL \u666e\u901a\u7528\u6237\u6388\u4e88\u76f8\u5e94\u7684\u6743\u9650\u3002 grant select on mysql.proc to 'user'@%;","title":"noAccessToProcedureBodies"},{"location":"220615_Mysql_Url_Params/#usessl","text":"MySQL\u9ad8\u7248\u672c\u652f\u6301\u662f\u5426\u4f7f\u7528 useSSL\uff0c\u7f3a\u7701\u4e3a true\u3002 useSSL=true","title":"useSSL"},{"location":"220615_Mysql_Url_Params/#allowmultiqueries","text":"\u7f3a\u7701\u4e3a false\u3002 \u53ef\u4ee5\u5728 SQL \u8bed\u53e5\u540e\u643a\u5e26\u5206\u53f7\uff0c\u5b9e\u73b0\u591a\u8bed\u53e5\u6267\u884c\u3002 \u53ef\u4ee5\u6267\u884c\u6279\u5904\u7406\uff0c\u540c\u65f6\u53d1\u51fa\u591a\u4e2a SQL \u8bed\u53e5\u3002 allowMultiQueries=true","title":"allowMultiQueries"},{"location":"220615_Mysql_Url_Params/#zerodatetimebehavior","text":"datetime \u5b57\u6bb5\u7684\u503c\u5168\u90e8\u4e3a 0 \u65f6\u7684\u5904\u7406\u65b9\u5f0f\u3002 zeroDateTimeBehavior=convertToNull","title":"zeroDateTimeBehavior"},{"location":"220615_Spring_Boot_HikariCP/","text":"Spring Boot HikariCP \u00b6 HikariCP \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684 JDBC \u8fde\u63a5\u6c60\u7ec4\u4ef6\u3002 Spring Boot 2.x \u5c06\u5176\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u8fde\u63a5\u6c60\u7ec4\u4ef6\uff0c\u9879\u76ee\u4e2d\u6dfb\u52a0 spring-boot-starter-jdbc \u6216 spring-boot-starter-data-jpa \u6a21\u5757\u540e\uff0cHikariCP \u4f9d\u8d56\u4f1a\u88ab\u81ea\u52a8\u5f15\u5165\u3002 \u5feb\u901f\u4f7f\u7528 \u00b6 1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u914d\u7f6e\uff1a <dependency> <groupId>com.kaddo</groupId> <artifactId>kaddo-components-datasource</artifactId> <version>${kaddo.version}</version> </dependency> \u4ee5\u4e0b\u5e38\u7528\u7684 ORM \u7ec4\u4ef6\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86 JDBC \u4f9d\u8d56\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u5f15\u5165\uff1a spring-boot-starter-data-jdbc spring-boot-starter-data-jpa mybatis-spring-boot-starter mybatis-plus-boot-starter 2\uff09\u6dfb\u52a0\u6570\u636e\u6e90\u914d\u7f6e\uff1a ## Spring HikaraDataSource Configuration # spring.datasource.type=com.zaxxer.hikari.HikariDataSource # spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver # spring.datasource.name=HikariCP-1 spring.datasource.url=jdbc:mysql://localhost:3306/dbname?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.username=root spring.datasource.password=123456 spring.datasource.hikari.connection-timeout=30000 spring.datasource.hikari.idle-timeout=600000 spring.datasource.hikari.max-lifetime=1800000 spring.datasource.hikari.maximum-pool-size=100 spring.datasource.hikari.minimum-idle=10 spring.datasource.hikari.pool-name=HikaraPool-1 \u8fde\u63a5\u6c60\u914d\u7f6e \u00b6 1\uff09\u5728 Spring Boot \u9879\u76ee\u4e2d\uff0c\u4e00\u4e2a\u7b80\u5355\u7684 Spring DataSource \u914d\u7f6e\uff0c\u901a\u5e38\u53ea\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u3001\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e09\u4e2a\u53c2\u6570\u3002 ## Spring DataSourceProperties # \u8bbe\u7f6e\u8fde\u63a5\u6c60\u7c7b\u578b\uff0c\u9ed8\u8ba4\u81ea\u52a8\u83b7\u53d6\uff08\u53ef\u9009\uff09 spring.datasource.type=com.zaxxer.hikari.HikariDataSource # \u8bbe\u7f6e\u6570\u636e\u5e93\u9a71\u52a8\uff0c\u9ed8\u8ba4\u81ea\u52a8\u83b7\u53d6\uff08\u53ef\u9009\uff09 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver # \u751f\u6210\u552f\u4e00\u7684\u6570\u636e\u6e90\u540d\u79f0\uff0c\u8bbe\u7f6e\u4e0e\u5426\uff0c\u90fd\u4f1a\u4f18\u5148\u53d6 name \u7684\u503c\uff08\u53ef\u9009\uff09 spring.datasource.generate-unique-name=true # \u8bbe\u7f6e\u6570\u636e\u6e90\u540d\u79f0\uff0c\u9ed8\u8ba4\u4f1a\u751f\u6210\u552f\u4e00\u7684\u6570\u636e\u6e90\u540d\u79f0\uff0c\u5982\uff1aHikariPool-1\uff08\u53ef\u9009\uff09 spring.datasource.name=HikariCP-1 # \u8bbe\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\uff08\u5fc5\u9009\uff09 spring.datasource.url=jdbc:mysql://localhost:3306/dbname?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull # \u8bbe\u7f6e\u6570\u636e\u5e93\u7528\u6237\u540d\uff08\u5fc5\u9009\uff09 spring.datasource.username=root # \u8bbe\u7f6e\u6570\u636e\u5e93\u5bc6\u7801\uff08\u5fc5\u9009\uff09 spring.datasource.password=123456 2\uff09\u5728 Spring Boot \u9879\u76ee\u4e2d\uff0c Spring DataSource \u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u914d\u7f6e\u542f\u7528 HikaraCP \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u6587\u4ef6\u6765\u4f18\u5316 HikariCP \u7684\u914d\u7f6e\u9879\uff0c\u5c24\u5176\u662f\u8fde\u63a5\u6c60\u5927\u5c0f\u7684\u8bbe\u7f6e\u3002 ## Spring HikariConfig # \u4e8b\u52a1\u81ea\u52a8\u63d0\u4ea4 - \u9ed8\u8ba4\u503c\uff1atrue spring.datasource.hikari.auto-commit=true # \u8fde\u63a5\u6d4b\u8bd5\u67e5\u8be2 - Using the JDBC4 <code>Connection.isValid()</code> method to test connection validity can be more efficient on some databases and is recommended. # \u5982\u679c\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\u652f\u6301JDBC4\uff0c\u5f3a\u70c8\u5efa\u8bae\u4e0d\u8981\u8bbe\u7f6e\u6b64\u5c5e\u6027\u3002 spring.datasource.hikari.connection-test-query=select 1 # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 - \u9ed8\u8ba4\u503c\uff1a30\u79d2\u3002 spring.datasource.hikari.connection-timeout=30000 # \u8fde\u63a5\u6c60\u4e2d\u5141\u8bb8\u95f2\u7f6e\u7684\u6700\u957f\u65f6\u95f4 - \u9ed8\u8ba4\u503c\uff1a10\u5206\u949f spring.datasource.hikari.idle-timeout=600000 # \u4e00\u4e2a\u8fde\u63a5\u751f\u547d\u65f6\u957f\uff08\u6beb\u79d2\uff09\uff0c\u8d85\u65f6\u800c\u6ca1\u88ab\u4f7f\u7528\u5219\u88ab\u91ca\u653e - \u9ed8\u8ba4\u503c\uff1a30\u5206\u949f spring.datasource.hikari.max-lifetime=1800000 # \u8fde\u63a5\u6c60\u4e2d\u5141\u8bb8\u7684\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5305\u62ec\u95f2\u7f6e\u548c\u4f7f\u7528\u4e2d\u7684\u8fde\u63a5 - \u9ed8\u8ba4\u503c\uff1a10 spring.datasource.hikari.maximum-pool-size=100 # \u8fde\u63a5\u6c60\u4e2d\u5141\u8bb8\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570 - \u9ed8\u8ba4\u503c\uff1a10\u3002 spring.datasource.hikari.minimum-idle=10 # \u8fde\u63a5\u88ab\u6d4b\u8bd5\u6d3b\u52a8\u7684\u6700\u957f\u65f6\u95f4 - \u9ed8\u8ba4\u503c\uff1a5\u79d2\u3002 spring.datasource.hikari.validation-timeout=5000 # \u6307\u5b9a\u8fde\u63a5\u6c60\u7684\u540d\u79f0 - \u9ed8\u8ba4\u81ea\u52a8\u751f\u6210 spring.datasource.hikari.pool-name=HikaraPool-1 \u591a\u6570\u636e\u6e90\u914d\u7f6e \u00b6 1\uff09\u6dfb\u52a0\u591a\u6570\u636e\u6e90\u914d\u7f6e\uff1a ## Spring HikaraDataSource Configuration # spring.datasource.one.driver-class-name=com.mysql.cj.jdbc.Driver # spring.datasource.one.name=HikariCP-1 spring.datasource.one.url=jdbc:mysql://localhost:3306/kaddo-sit?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.one.username=root spring.datasource.one.password=123456 spring.datasource.one.hikari.connection-timeout=30000 spring.datasource.one.hikari.idle-timeout=600000 spring.datasource.one.hikari.max-lifetime=1800000 spring.datasource.one.hikari.maximum-pool-size=100 spring.datasource.one.hikari.minimum-idle=10 spring.datasource.one.hikari.pool-name=HikaraPool-1 ## Spring HikaraDataSource Configuration # spring.datasource.two.driver-class-name=com.mysql.cj.jdbc.Driver # spring.datasource.two.name=HikariCP-2 spring.datasource.two.url=jdbc:mysql://localhost:3306/kaddo-uat?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.two.username=root spring.datasource.two.password=123456 spring.datasource.two.hikari.connection-timeout=30000 spring.datasource.two.hikari.idle-timeout=600000 spring.datasource.two.hikari.max-lifetime=1800000 spring.datasource.two.hikari.maximum-pool-size=100 spring.datasource.two.hikari.minimum-idle=10 spring.datasource.two.hikari.pool-name=HikaraPool-2 2\uff09\u521b\u5efa\u591a\u6570\u636e\u6e90\uff1a @Bean @Primary @ConfigurationProperties(\"spring.datasource.one\") public DataSourceProperties dataSourcePropertiesOne() { return new DataSourceProperties(); } @Bean @Primary @ConfigurationProperties(\"spring.datasource.one.hikari\") public HikariDataSource dataSourceOne(DataSourceProperties properties) { return KaddoDataSourceBuilder.createHikariDataSource(properties); } @Bean @ConfigurationProperties(\"spring.datasource.two\") public DataSourceProperties dataSourcePropertiesTwo() { return new DataSourceProperties(); } @Bean @ConfigurationProperties(\"spring.datasource.two.hikari\") public HikariDataSource dataSourceTwo(@Qualifier(\"dataSourcePropertiesTwo\") DataSourceProperties properties) { return KaddoDataSourceBuilder.createHikariDataSource(properties); } 3\uff09\u4f7f\u7528\u591a\u6570\u636e\u6e90\uff1a @Autowired private HikariDataSource dataSourceOne; @Autowired @Qualifier(\"dataSourceTwo\") private HikariDataSource dataSourceTwo; \u914d\u7f6e\u591a\u6570\u636e\u6e90\u7684\u6ce8\u610f\u4e8b\u9879\uff1a \u914d\u7f6e\u591a\u6570\u636e\u6e90\u65f6\uff0c\u6700\u597d\u901a\u8fc7 @Primary \u6307\u5b9a\u9ed8\u8ba4\u6570\u636e\u6e90\u3002 \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 HikariDataSource \u4ee3\u66ff DataSource\u3002 \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u6ce8\u610f\u901a\u8fc7 @Qualifier (\"dataSourcePropertiesTwo\") \u6765\u6307\u5b9a\u6570\u636e\u6e90\u7684\u914d\u7f6e\u5c5e\u6027\u5bf9\u8c61\u3002 \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u6ce8\u610f\u521b\u5efa Bean \u7684\u65b9\u6cd5\u540d\uff0c\u6700\u597d\u901a\u8fc7 @Bean (\"dataSourceOne\") \u6765\u6307\u5b9a\u6570\u636e\u6e90\u5bf9\u8c61\u7684\u540d\u79f0\u3002 \u591a\u6570\u636e\u6e90\u901a\u5e38\u7ed3\u5408 ORM \u6846\u67b6\u4e00\u8d77\u4f7f\u7528\uff0c\u5177\u4f53\u53ef\u53c2\u8003 Kaddo \u6846\u67b6\u7684 ORM \u914d\u7f6e\u3002","title":"Spring Boot HikariCP"},{"location":"220615_Spring_Boot_HikariCP/#spring-boot-hikaricp","text":"HikariCP \u662f\u4e00\u4e2a\u9ad8\u6027\u80fd\u7684 JDBC \u8fde\u63a5\u6c60\u7ec4\u4ef6\u3002 Spring Boot 2.x \u5c06\u5176\u4f5c\u4e3a\u9ed8\u8ba4\u7684\u8fde\u63a5\u6c60\u7ec4\u4ef6\uff0c\u9879\u76ee\u4e2d\u6dfb\u52a0 spring-boot-starter-jdbc \u6216 spring-boot-starter-data-jpa \u6a21\u5757\u540e\uff0cHikariCP \u4f9d\u8d56\u4f1a\u88ab\u81ea\u52a8\u5f15\u5165\u3002","title":"Spring Boot HikariCP"},{"location":"220615_Spring_Boot_HikariCP/#_1","text":"1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0\u4f9d\u8d56\u914d\u7f6e\uff1a <dependency> <groupId>com.kaddo</groupId> <artifactId>kaddo-components-datasource</artifactId> <version>${kaddo.version}</version> </dependency> \u4ee5\u4e0b\u5e38\u7528\u7684 ORM \u7ec4\u4ef6\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86 JDBC \u4f9d\u8d56\uff0c\u4e0d\u9700\u8981\u91cd\u590d\u5f15\u5165\uff1a spring-boot-starter-data-jdbc spring-boot-starter-data-jpa mybatis-spring-boot-starter mybatis-plus-boot-starter 2\uff09\u6dfb\u52a0\u6570\u636e\u6e90\u914d\u7f6e\uff1a ## Spring HikaraDataSource Configuration # spring.datasource.type=com.zaxxer.hikari.HikariDataSource # spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver # spring.datasource.name=HikariCP-1 spring.datasource.url=jdbc:mysql://localhost:3306/dbname?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.username=root spring.datasource.password=123456 spring.datasource.hikari.connection-timeout=30000 spring.datasource.hikari.idle-timeout=600000 spring.datasource.hikari.max-lifetime=1800000 spring.datasource.hikari.maximum-pool-size=100 spring.datasource.hikari.minimum-idle=10 spring.datasource.hikari.pool-name=HikaraPool-1","title":"\u5feb\u901f\u4f7f\u7528"},{"location":"220615_Spring_Boot_HikariCP/#_2","text":"1\uff09\u5728 Spring Boot \u9879\u76ee\u4e2d\uff0c\u4e00\u4e2a\u7b80\u5355\u7684 Spring DataSource \u914d\u7f6e\uff0c\u901a\u5e38\u53ea\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u3001\u7528\u6237\u540d\u548c\u5bc6\u7801\u4e09\u4e2a\u53c2\u6570\u3002 ## Spring DataSourceProperties # \u8bbe\u7f6e\u8fde\u63a5\u6c60\u7c7b\u578b\uff0c\u9ed8\u8ba4\u81ea\u52a8\u83b7\u53d6\uff08\u53ef\u9009\uff09 spring.datasource.type=com.zaxxer.hikari.HikariDataSource # \u8bbe\u7f6e\u6570\u636e\u5e93\u9a71\u52a8\uff0c\u9ed8\u8ba4\u81ea\u52a8\u83b7\u53d6\uff08\u53ef\u9009\uff09 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver # \u751f\u6210\u552f\u4e00\u7684\u6570\u636e\u6e90\u540d\u79f0\uff0c\u8bbe\u7f6e\u4e0e\u5426\uff0c\u90fd\u4f1a\u4f18\u5148\u53d6 name \u7684\u503c\uff08\u53ef\u9009\uff09 spring.datasource.generate-unique-name=true # \u8bbe\u7f6e\u6570\u636e\u6e90\u540d\u79f0\uff0c\u9ed8\u8ba4\u4f1a\u751f\u6210\u552f\u4e00\u7684\u6570\u636e\u6e90\u540d\u79f0\uff0c\u5982\uff1aHikariPool-1\uff08\u53ef\u9009\uff09 spring.datasource.name=HikariCP-1 # \u8bbe\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\uff08\u5fc5\u9009\uff09 spring.datasource.url=jdbc:mysql://localhost:3306/dbname?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull # \u8bbe\u7f6e\u6570\u636e\u5e93\u7528\u6237\u540d\uff08\u5fc5\u9009\uff09 spring.datasource.username=root # \u8bbe\u7f6e\u6570\u636e\u5e93\u5bc6\u7801\uff08\u5fc5\u9009\uff09 spring.datasource.password=123456 2\uff09\u5728 Spring Boot \u9879\u76ee\u4e2d\uff0c Spring DataSource \u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u914d\u7f6e\u542f\u7528 HikaraCP \u6570\u636e\u5e93\u8fde\u63a5\u6c60\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5c5e\u6027\u6587\u4ef6\u6765\u4f18\u5316 HikariCP \u7684\u914d\u7f6e\u9879\uff0c\u5c24\u5176\u662f\u8fde\u63a5\u6c60\u5927\u5c0f\u7684\u8bbe\u7f6e\u3002 ## Spring HikariConfig # \u4e8b\u52a1\u81ea\u52a8\u63d0\u4ea4 - \u9ed8\u8ba4\u503c\uff1atrue spring.datasource.hikari.auto-commit=true # \u8fde\u63a5\u6d4b\u8bd5\u67e5\u8be2 - Using the JDBC4 <code>Connection.isValid()</code> method to test connection validity can be more efficient on some databases and is recommended. # \u5982\u679c\u4f60\u7684\u9a71\u52a8\u7a0b\u5e8f\u652f\u6301JDBC4\uff0c\u5f3a\u70c8\u5efa\u8bae\u4e0d\u8981\u8bbe\u7f6e\u6b64\u5c5e\u6027\u3002 spring.datasource.hikari.connection-test-query=select 1 # \u8fde\u63a5\u8d85\u65f6\u65f6\u95f4 - \u9ed8\u8ba4\u503c\uff1a30\u79d2\u3002 spring.datasource.hikari.connection-timeout=30000 # \u8fde\u63a5\u6c60\u4e2d\u5141\u8bb8\u95f2\u7f6e\u7684\u6700\u957f\u65f6\u95f4 - \u9ed8\u8ba4\u503c\uff1a10\u5206\u949f spring.datasource.hikari.idle-timeout=600000 # \u4e00\u4e2a\u8fde\u63a5\u751f\u547d\u65f6\u957f\uff08\u6beb\u79d2\uff09\uff0c\u8d85\u65f6\u800c\u6ca1\u88ab\u4f7f\u7528\u5219\u88ab\u91ca\u653e - \u9ed8\u8ba4\u503c\uff1a30\u5206\u949f spring.datasource.hikari.max-lifetime=1800000 # \u8fde\u63a5\u6c60\u4e2d\u5141\u8bb8\u7684\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5305\u62ec\u95f2\u7f6e\u548c\u4f7f\u7528\u4e2d\u7684\u8fde\u63a5 - \u9ed8\u8ba4\u503c\uff1a10 spring.datasource.hikari.maximum-pool-size=100 # \u8fde\u63a5\u6c60\u4e2d\u5141\u8bb8\u7684\u6700\u5c0f\u7a7a\u95f2\u8fde\u63a5\u6570 - \u9ed8\u8ba4\u503c\uff1a10\u3002 spring.datasource.hikari.minimum-idle=10 # \u8fde\u63a5\u88ab\u6d4b\u8bd5\u6d3b\u52a8\u7684\u6700\u957f\u65f6\u95f4 - \u9ed8\u8ba4\u503c\uff1a5\u79d2\u3002 spring.datasource.hikari.validation-timeout=5000 # \u6307\u5b9a\u8fde\u63a5\u6c60\u7684\u540d\u79f0 - \u9ed8\u8ba4\u81ea\u52a8\u751f\u6210 spring.datasource.hikari.pool-name=HikaraPool-1","title":"\u8fde\u63a5\u6c60\u914d\u7f6e"},{"location":"220615_Spring_Boot_HikariCP/#_3","text":"1\uff09\u6dfb\u52a0\u591a\u6570\u636e\u6e90\u914d\u7f6e\uff1a ## Spring HikaraDataSource Configuration # spring.datasource.one.driver-class-name=com.mysql.cj.jdbc.Driver # spring.datasource.one.name=HikariCP-1 spring.datasource.one.url=jdbc:mysql://localhost:3306/kaddo-sit?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.one.username=root spring.datasource.one.password=123456 spring.datasource.one.hikari.connection-timeout=30000 spring.datasource.one.hikari.idle-timeout=600000 spring.datasource.one.hikari.max-lifetime=1800000 spring.datasource.one.hikari.maximum-pool-size=100 spring.datasource.one.hikari.minimum-idle=10 spring.datasource.one.hikari.pool-name=HikaraPool-1 ## Spring HikaraDataSource Configuration # spring.datasource.two.driver-class-name=com.mysql.cj.jdbc.Driver # spring.datasource.two.name=HikariCP-2 spring.datasource.two.url=jdbc:mysql://localhost:3306/kaddo-uat?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&autoReconnectForPools=true&noAccessToProcedureBodies=true&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull spring.datasource.two.username=root spring.datasource.two.password=123456 spring.datasource.two.hikari.connection-timeout=30000 spring.datasource.two.hikari.idle-timeout=600000 spring.datasource.two.hikari.max-lifetime=1800000 spring.datasource.two.hikari.maximum-pool-size=100 spring.datasource.two.hikari.minimum-idle=10 spring.datasource.two.hikari.pool-name=HikaraPool-2 2\uff09\u521b\u5efa\u591a\u6570\u636e\u6e90\uff1a @Bean @Primary @ConfigurationProperties(\"spring.datasource.one\") public DataSourceProperties dataSourcePropertiesOne() { return new DataSourceProperties(); } @Bean @Primary @ConfigurationProperties(\"spring.datasource.one.hikari\") public HikariDataSource dataSourceOne(DataSourceProperties properties) { return KaddoDataSourceBuilder.createHikariDataSource(properties); } @Bean @ConfigurationProperties(\"spring.datasource.two\") public DataSourceProperties dataSourcePropertiesTwo() { return new DataSourceProperties(); } @Bean @ConfigurationProperties(\"spring.datasource.two.hikari\") public HikariDataSource dataSourceTwo(@Qualifier(\"dataSourcePropertiesTwo\") DataSourceProperties properties) { return KaddoDataSourceBuilder.createHikariDataSource(properties); } 3\uff09\u4f7f\u7528\u591a\u6570\u636e\u6e90\uff1a @Autowired private HikariDataSource dataSourceOne; @Autowired @Qualifier(\"dataSourceTwo\") private HikariDataSource dataSourceTwo; \u914d\u7f6e\u591a\u6570\u636e\u6e90\u7684\u6ce8\u610f\u4e8b\u9879\uff1a \u914d\u7f6e\u591a\u6570\u636e\u6e90\u65f6\uff0c\u6700\u597d\u901a\u8fc7 @Primary \u6307\u5b9a\u9ed8\u8ba4\u6570\u636e\u6e90\u3002 \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u5efa\u8bae\u4f7f\u7528 HikariDataSource \u4ee3\u66ff DataSource\u3002 \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u6ce8\u610f\u901a\u8fc7 @Qualifier (\"dataSourcePropertiesTwo\") \u6765\u6307\u5b9a\u6570\u636e\u6e90\u7684\u914d\u7f6e\u5c5e\u6027\u5bf9\u8c61\u3002 \u521b\u5efa\u6570\u636e\u6e90\u5bf9\u8c61\u65f6\uff0c\u6ce8\u610f\u521b\u5efa Bean \u7684\u65b9\u6cd5\u540d\uff0c\u6700\u597d\u901a\u8fc7 @Bean (\"dataSourceOne\") \u6765\u6307\u5b9a\u6570\u636e\u6e90\u5bf9\u8c61\u7684\u540d\u79f0\u3002 \u591a\u6570\u636e\u6e90\u901a\u5e38\u7ed3\u5408 ORM \u6846\u67b6\u4e00\u8d77\u4f7f\u7528\uff0c\u5177\u4f53\u53ef\u53c2\u8003 Kaddo \u6846\u67b6\u7684 ORM \u914d\u7f6e\u3002","title":"\u591a\u6570\u636e\u6e90\u914d\u7f6e"},{"location":"220627_MyBatis_Usage/","text":"MyBatis Spring Boot Starter \u00b6 MyBatis \u662f\u4e00\u6b3e\u4f18\u79c0\u7684\u6301\u4e45\u5c42\u6846\u67b6\uff0c\u5b83\u652f\u6301\u81ea\u5b9a\u4e49 SQL\u3001\u5b58\u50a8\u8fc7\u7a0b\u4ee5\u53ca\u9ad8\u7ea7\u6620\u5c04\u3002MyBatis \u514d\u9664\u4e86\u51e0\u4e4e\u6240\u6709\u7684 JDBC \u4ee3\u7801\u4ee5\u53ca\u8bbe\u7f6e\u53c2\u6570\u548c\u83b7\u53d6\u7ed3\u679c\u96c6\u7684\u5de5\u4f5c\u3002MyBatis \u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684 XML \u6216\u6ce8\u89e3\u6765\u914d\u7f6e\u548c\u6620\u5c04\u539f\u59cb\u7c7b\u578b\u3001\u63a5\u53e3\u548c Java POJO\uff08Plain Old Java Objects\uff0c\u666e\u901a\u8001\u5f0f Java \u5bf9\u8c61\uff09\u4e3a\u6570\u636e\u5e93\u4e2d\u7684\u8bb0\u5f55\u3002 https://mybatis.org/mybatis-3/zh/index.html MyBatis-Spring-Boot-Starter \u53ef\u4ee5\u5e2e\u52a9\u4f60\u66f4\u5feb\u5730\u5728 Spring Boot \u4e4b\u4e0a\u6784\u5efa MyBatis \u5e94\u7528\u3002 MyBatis-PageHelper \u662f MyBatis \u6700\u65b9\u4fbf\u7684\u5206\u9875\u63d2\u4ef6\u3002 \u5feb\u901f\u5f00\u59cb \u00b6 1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0 Maven \u4f9d\u8d56\uff1a <dependency> <groupId>com.kaddo</groupId> <artifactId>kaddo-components-mybatis</artifactId> <version>${kaddo.version}</version> </dependency> 2\uff09\u7136\u540e\uff0c\u6839\u636e\u6570\u636e\u5e93\u9009\u62e9\u9a71\u52a8\uff0c\u4ee5 H2 \u6570\u636e\u5e93\u4e3a\u4f8b\uff1a <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> <scope>runtime</scope> </dependency> 3\uff09\u5728 application.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 H2 \u6570\u636e\u5e93\u7684\u76f8\u5173\u914d\u7f6e\uff1a # DataSource Configuration spring.datasource.driver-class-name=org.h2.Driver spring.datasource.schema=classpath:db/schema-h2.sql spring.datasource.data=classpath:db/data-h2.sql spring.datasource.url=jdbc:h2:mem:test spring.datasource.username=root spring.datasource.password=test 4\uff09\u5728 application.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 MyBatis \u914d\u7f6e\uff08\u914d\u7f6e\u53c2\u6570\u4e0e MyBatis-Plus \u57fa\u672c\u4e00\u6837\uff0cMyBatis \u5b98\u65b9\u914d\u7f6e\u6587\u6863\uff1a https://mybatis.org/mybatis-3/zh/configuration.html \uff09\uff1a ## MyBatis Configuration mybatis.type-aliases-package=com.mybatis.samples.quickstart.model mybatis.mapper-locations=classpath*:/mapper/**/*.xml mybatis.configuration.map-underscore-to-camel-case=true mybatis.configuration.default-executor-type=reuse mybatis.configuration.default-fetch-size=100 mybatis.configuration.default-statement-timeout=30 mybatis.configuration.cache-enabled=true 5\uff09\u5728 Spring Boot \u542f\u52a8\u7c7b\u4e2d\u6dfb\u52a0 @MapperScan \u6ce8\u89e3\uff0c\u626b\u63cf Mapper \u6587\u4ef6\u5939\uff1a @SpringBootApplication @MapperScan(\"com.mybatis.samples.quickstart.mapper\") public class SampleMybatisApplication { public static void main(String[] args) { SpringApplication.run(SampleMybatisApplication.class, args); } } 6\uff09\u7f16\u5199\u6570\u636e\u5c42\u5bf9\u8c61\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e0b\u9762\u7684 mapper \uff1a @Mapper public interface CityMapper { @Select(\"SELECT * FROM CITY WHERE state = #{state}\") City findByState(@Param(\"state\") String state); } 7\uff09\u4f60\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a Spring boot \u5e94\u7528\uff0c\u50cf\u4e0b\u9762\u8fd9\u6837\uff0c\u5c06 mapper \u6ce8\u5165\u8fdb\u53bb\uff08 Spring 4.3 \u4ee5\u4e0a\u53ef\u7528\uff09\u3002 @SpringBootApplication //@MapperScan(\"com.mybatis.samples.quickstart.mapper\") public class SampleMybatisApplication implements CommandLineRunner { private final CityMapper cityMapper; public SampleMybatisApplication(CityMapper cityMapper) { this.cityMapper = cityMapper; } public static void main(String[] args) { SpringApplication.run(SampleMybatisApplication.class, args); } @Override public void run(String... args) throws Exception { System.out.println(this.cityMapper.findByState(\"CA\")); } } \u5982\u4f55\u4f7f\u7528\u5206\u9875\u63d2\u4ef6 \u00b6 \u63a8\u8350\u4ee5\u4e0b\u5199\u6cd5\uff0c\u66f4\u591a\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md // Mapper\u63a5\u53e3\u65b9\u5f0f\u7684\u8c03\u7528\uff0c\u63a8\u8350\u8fd9\u79cd\u4f7f\u7528\u65b9\u5f0f\u3002 PageHelper.startPage(1, 10); List<User> list = userMapper.selectIf(1); // ISelect \u63a5\u53e3\u65b9\u5f0f // jdk6,7\u7528\u6cd5\uff0c\u521b\u5efa\u63a5\u53e3 Page<User> page = PageHelper.startPage(1, 10).doSelectPage(new ISelect() { @Override public void doSelect() { userMapper.selectGroupBy(); } }); // jdk8 lambda\u7528\u6cd5 Page<User> page = PageHelper.startPage(1, 10).doSelectPage(()-> userMapper.selectGroupBy()); // \u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de PageInfo\uff0c\u6ce8\u610f doSelectPageInfo \u65b9\u6cd5\u548c doSelectPage pageInfo = PageHelper.startPage(1, 10).doSelectPageInfo(new ISelect() { @Override public void doSelect() { userMapper.selectGroupBy(); } }); // \u5bf9\u5e94\u7684lambda\u7528\u6cd5 pageInfo = PageHelper.startPage(1, 10).doSelectPageInfo(() -> userMapper.selectGroupBy()); // count\u67e5\u8be2\uff0c\u8fd4\u56de\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u7684count\u6570 long total = PageHelper.count(new ISelect() { @Override public void doSelect() { userMapper.selectLike(user); } }); // lambda total = PageHelper.count(()->userMapper.selectLike(user)); \u8fdb\u9636\u7bc7 - \u914d\u7f6e \u00b6 https://mybatis.org/mybatis-3/zh/configuration.html MyBatis \u7684\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u4e86\u4f1a\u6df1\u6df1\u5f71\u54cd MyBatis \u884c\u4e3a\u7684\u8bbe\u7f6e\u548c\u5c5e\u6027\u4fe1\u606f\u3002 \u914d\u7f6e\u6587\u6863\u7684\u9876\u5c42\u7ed3\u6784\u5982\u4e0b\uff1a configuration\uff08\u914d\u7f6e\uff09 properties\uff08\u5c5e\u6027\uff09 settings\uff08\u8bbe\u7f6e\uff09 typeAliases\uff08\u7c7b\u578b\u522b\u540d\uff09 typeHandlers\uff08\u7c7b\u578b\u5904\u7406\u5668\uff09 objectFactory\uff08\u5bf9\u8c61\u5de5\u5382\uff09 plugins\uff08\u63d2\u4ef6\uff09 environments\uff08\u73af\u5883\u914d\u7f6e\uff09 environment\uff08\u73af\u5883\u53d8\u91cf\uff09 transactionManager\uff08\u4e8b\u52a1\u7ba1\u7406\u5668\uff09 dataSource\uff08\u6570\u636e\u6e90\uff09 databaseIdProvider\uff08\u6570\u636e\u5e93\u5382\u5546\u6807\u8bc6\uff09 mappers\uff08\u6620\u5c04\u5668\uff09 \u63d0\u793a\uff1a\u5728 Spring Boot \u9879\u76ee\u4e2d\u96c6\u6210 MyBatis-Spring-Boot-Starter \u540e\uff0c\u4e0d\u518d\u4f9d\u8d56 mybatis-config.xml \u914d\u7f6e\u6587\u4ef6\uff0c\u5176\u4e2d\u7684\u5927\u90e8\u5206\u914d\u7f6e\u90fd\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u6709\u5fc5\u8981\u4e86\u89e3\u3002 \u8fdb\u9636\u7bc7 - XML\u6620\u5c04\u6587\u4ef6 \u00b6 https://mybatis.org/mybatis-3/zh/sqlmap-xml.html MyBatis \u7684\u771f\u6b63\u5f3a\u5927\u5728\u4e8e\u5b83\u7684\u8bed\u53e5\u6620\u5c04\uff0c\u8fd9\u662f\u5b83\u7684\u9b54\u529b\u6240\u5728\u3002\u7531\u4e8e\u5b83\u7684\u5f02\u5e38\u5f3a\u5927\uff0c\u6620\u5c04\u5668\u7684 XML \u6587\u4ef6\u5c31\u663e\u5f97\u76f8\u5bf9\u7b80\u5355\u3002\u5982\u679c\u62ff\u5b83\u8ddf\u5177\u6709\u76f8\u540c\u529f\u80fd\u7684 JDBC \u4ee3\u7801\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4f60\u4f1a\u7acb\u5373\u53d1\u73b0\u7701\u6389\u4e86\u5c06\u8fd1 95% \u7684\u4ee3\u7801\u3002MyBatis \u81f4\u529b\u4e8e\u51cf\u5c11\u4f7f\u7528\u6210\u672c\uff0c\u8ba9\u7528\u6237\u80fd\u66f4\u4e13\u6ce8\u4e8e SQL \u4ee3\u7801\u3002 SQL \u6620\u5c04\u6587\u4ef6\u53ea\u6709\u5f88\u5c11\u7684\u51e0\u4e2a\u9876\u7ea7\u5143\u7d20\uff08\u6309\u7167\u5e94\u88ab\u5b9a\u4e49\u7684\u987a\u5e8f\u5217\u51fa\uff09\uff1a resultMap \u2013 \u63cf\u8ff0\u5982\u4f55\u4ece\u6570\u636e\u5e93\u7ed3\u679c\u96c6\u4e2d\u52a0\u8f7d\u5bf9\u8c61\uff0c\u662f\u6700\u590d\u6742\u4e5f\u662f\u6700\u5f3a\u5927\u7684\u5143\u7d20\u3002 sql \u2013 \u53ef\u88ab\u5176\u5b83\u8bed\u53e5\u5f15\u7528\u7684\u53ef\u91cd\u7528\u8bed\u53e5\u5757\u3002 insert \u2013 \u6620\u5c04\u63d2\u5165\u8bed\u53e5\u3002 update \u2013 \u6620\u5c04\u66f4\u65b0\u8bed\u53e5\u3002 delete \u2013 \u6620\u5c04\u5220\u9664\u8bed\u53e5\u3002 select \u2013 \u6620\u5c04\u67e5\u8be2\u8bed\u53e5\u3002 \u9ad8\u7ea7\u7ed3\u679c\u96c6\u6620\u5c04\uff1a <!-- \u975e\u5e38\u590d\u6742\u7684\u7ed3\u679c\u6620\u5c04 --> <resultMap id=\"detailedBlogResultMap\" type=\"Blog\"> <constructor> <idArg column=\"blog_id\" javaType=\"int\"/> </constructor> <result property=\"title\" column=\"blog_title\"/> <association property=\"author\" javaType=\"Author\"> <id property=\"id\" column=\"author_id\"/> <result property=\"username\" column=\"author_username\"/> <result property=\"password\" column=\"author_password\"/> <result property=\"email\" column=\"author_email\"/> <result property=\"bio\" column=\"author_bio\"/> <result property=\"favouriteSection\" column=\"author_favourite_section\"/> </association> <collection property=\"posts\" ofType=\"Post\"> <id property=\"id\" column=\"post_id\"/> <result property=\"subject\" column=\"post_subject\"/> <association property=\"author\" javaType=\"Author\"/> <collection property=\"comments\" ofType=\"Comment\"> <id property=\"id\" column=\"comment_id\"/> </collection> <collection property=\"tags\" ofType=\"Tag\" > <id property=\"id\" column=\"tag_id\"/> </collection> <discriminator javaType=\"int\" column=\"draft\"> <case value=\"1\" resultType=\"DraftPost\"/> </discriminator> </collection> </resultMap> 1\uff09\u5173\u8054 <resultMap id=\"blogResult\" type=\"Blog\"> <id property=\"id\" column=\"blog_id\" /> <result property=\"title\" column=\"blog_title\"/> <association property=\"author\" javaType=\"Author\"> <id property=\"id\" column=\"author_id\"/> <result property=\"username\" column=\"author_username\"/> <result property=\"password\" column=\"author_password\"/> <result property=\"email\" column=\"author_email\"/> <result property=\"bio\" column=\"author_bio\"/> </association> </resultMap> 2\uff09\u96c6\u5408 <resultMap id=\"blogResult\" type=\"Blog\"> <id property=\"id\" column=\"blog_id\" /> <result property=\"title\" column=\"blog_title\"/> <collection property=\"posts\" ofType=\"Post\"> <id property=\"id\" column=\"post_id\"/> <result property=\"subject\" column=\"post_subject\"/> <result property=\"body\" column=\"post_body\"/> </collection> </resultMap> 3\uff09\u9274\u522b\u5668 <resultMap id=\"vehicleResult\" type=\"Vehicle\"> <id property=\"id\" column=\"id\" /> <result property=\"vin\" column=\"vin\"/> <result property=\"year\" column=\"year\"/> <result property=\"make\" column=\"make\"/> <result property=\"model\" column=\"model\"/> <result property=\"color\" column=\"color\"/> <discriminator javaType=\"int\" column=\"vehicle_type\"> <case value=\"1\" resultMap=\"carResult\"/> <case value=\"2\" resultMap=\"truckResult\"/> <case value=\"3\" resultMap=\"vanResult\"/> <case value=\"4\" resultMap=\"suvResult\"/> </discriminator> </resultMap> \u8fdb\u9636\u7bc7 - \u52a8\u6001SQL \u00b6 https://mybatis.org/mybatis-3/zh/dynamic-sql.html \u52a8\u6001 SQL \u662f MyBatis \u7684\u5f3a\u5927\u7279\u6027\u4e4b\u4e00\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8fc7 JDBC \u6216\u5176\u5b83\u7c7b\u4f3c\u7684\u6846\u67b6\uff0c\u4f60\u5e94\u8be5\u80fd\u7406\u89e3\u6839\u636e\u4e0d\u540c\u6761\u4ef6\u62fc\u63a5 SQL \u8bed\u53e5\u6709\u591a\u75db\u82e6\uff0c\u4f8b\u5982\u62fc\u63a5\u65f6\u8981\u786e\u4fdd\u4e0d\u80fd\u5fd8\u8bb0\u6dfb\u52a0\u5fc5\u8981\u7684\u7a7a\u683c\uff0c\u8fd8\u8981\u6ce8\u610f\u53bb\u6389\u5217\u8868\u6700\u540e\u4e00\u4e2a\u5217\u540d\u7684\u9017\u53f7\u3002\u5229\u7528\u52a8\u6001 SQL\uff0c\u53ef\u4ee5\u5f7b\u5e95\u6446\u8131\u8fd9\u79cd\u75db\u82e6\u3002 \u4f7f\u7528\u52a8\u6001 SQL \u5e76\u975e\u4e00\u4ef6\u6613\u4e8b\uff0c\u4f46\u501f\u52a9\u53ef\u7528\u4e8e\u4efb\u4f55 SQL \u6620\u5c04\u8bed\u53e5\u4e2d\u7684\u5f3a\u5927\u7684\u52a8\u6001 SQL \u8bed\u8a00\uff0cMyBatis \u663e\u8457\u5730\u63d0\u5347\u4e86\u8fd9\u4e00\u7279\u6027\u7684\u6613\u7528\u6027\u3002 \u5982\u679c\u4f60\u4e4b\u524d\u7528\u8fc7 JSTL \u6216\u4efb\u4f55\u57fa\u4e8e\u7c7b XML \u8bed\u8a00\u7684\u6587\u672c\u5904\u7406\u5668\uff0c\u4f60\u5bf9\u52a8\u6001 SQL \u5143\u7d20\u53ef\u80fd\u4f1a\u611f\u89c9\u4f3c\u66fe\u76f8\u8bc6\u3002\u5728 MyBatis \u4e4b\u524d\u7684\u7248\u672c\u4e2d\uff0c\u9700\u8981\u82b1\u65f6\u95f4\u4e86\u89e3\u5927\u91cf\u7684\u5143\u7d20\u3002\u501f\u52a9\u529f\u80fd\u5f3a\u5927\u7684\u57fa\u4e8e OGNL \u7684\u8868\u8fbe\u5f0f\uff0cMyBatis 3 \u66ff\u6362\u4e86\u4e4b\u524d\u7684\u5927\u90e8\u5206\u5143\u7d20\uff0c\u5927\u5927\u7cbe\u7b80\u4e86\u5143\u7d20\u79cd\u7c7b\uff0c\u73b0\u5728\u8981\u5b66\u4e60\u7684\u5143\u7d20\u79cd\u7c7b\u6bd4\u539f\u6765\u7684\u4e00\u534a\u8fd8\u8981\u5c11\u3002 if choose (when, otherwise) trim (where, set) foreach 1\uff09if - \u4f7f\u7528\u52a8\u6001 SQL \u6700\u5e38\u89c1\u60c5\u666f\u662f\u6839\u636e\u6761\u4ef6\u5305\u542b where \u5b50\u53e5\u7684\u4e00\u90e8\u5206\u3002 <select id=\"findActiveBlogLike\" resultType=\"Blog\"> SELECT * FROM BLOG WHERE state = \u2018ACTIVE\u2019 <if test=\"title != null\"> AND title like #{title} </if> <if test=\"author != null and author.name != null\"> AND author_name like #{author.name} </if> </select> 2\uff09choose (when, otherwise) <select id=\"findActiveBlogLike\" resultType=\"Blog\"> SELECT * FROM BLOG WHERE state = \u2018ACTIVE\u2019 <choose> <when test=\"title != null\"> AND title like #{title} </when> <when test=\"author != null and author.name != null\"> AND author_name like #{author.name} </when> <otherwise> AND featured = 1 </otherwise> </choose> </select> 3\uff09trim (where, set) <selectid=\"findActiveBlogLike\" resultType=\"Blog\"> SELECT * FROM BLOG <where> <iftest=\"state != null\"> state = #{state} </if> <iftest=\"title != null\"> AND title like #{title} </if> <iftest=\"author != null and author.name != null\"> AND author_name like #{author.name} </if> </where> </select> where \u5143\u7d20\u53ea\u4f1a\u5728\u5b50\u5143\u7d20\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u624d\u63d2\u5165 \u201cWHERE\u201d \u5b50\u53e5\u3002\u800c\u4e14\uff0c\u82e5\u5b50\u53e5\u7684\u5f00\u5934\u4e3a \u201cAND\u201d \u6216 \u201cOR\u201d\uff0c where \u5143\u7d20\u4e5f\u4f1a\u5c06\u5b83\u4eec\u53bb\u9664\u3002 \u5982\u679c where \u5143\u7d20\u4e0e\u4f60\u671f\u671b\u7684\u4e0d\u592a\u4e00\u6837\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49 trim \u5143\u7d20\u6765\u5b9a\u5236 where \u5143\u7d20\u7684\u529f\u80fd\u3002\u6bd4\u5982\uff0c\u548c where \u5143\u7d20\u7b49\u4ef7\u7684\u81ea\u5b9a\u4e49 trim \u5143\u7d20\u4e3a\uff1a <trim prefix=\"WHERE\" prefixOverrides=\"AND |OR \"> ... </trim> 4\uff09foreach - \u52a8\u6001 SQL \u7684\u53e6\u4e00\u4e2a\u5e38\u89c1\u4f7f\u7528\u573a\u666f\u662f\u5bf9\u96c6\u5408\u8fdb\u884c\u904d\u5386\uff08\u5c24\u5176\u662f\u5728\u6784\u5efa IN \u6761\u4ef6\u8bed\u53e5\u7684\u65f6\u5019\uff09\u3002 <select id=\"selectPostIn\" resultType=\"domain.blog.Post\"> SELECT * FROM POST P <where> <foreach item=\"item\" index=\"index\" collection=\"list\" open=\"ID in (\" separator=\",\" close=\")\" nullable=\"true\"> #{item} </foreach> </where> </select> \u8fdb\u9636\u7bc7 - JavaAPI \u00b6 https://mybatis.org/mybatis-3/zh/java-api.html SqlSession - \u4f7f\u7528 MyBatis \u7684\u4e3b\u8981 Java \u63a5\u53e3\u5c31\u662f SqlSession\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u6765\u6267\u884c\u547d\u4ee4\uff0c\u83b7\u53d6\u6620\u5c04\u5668\u5b9e\u4f8b\u548c\u7ba1\u7406\u4e8b\u52a1\u3002 SqlSessionFactory - SqlSessionFactory \u6709\u516d\u4e2a\u65b9\u6cd5\u521b\u5efa SqlSession \u5b9e\u4f8b\u3002 \u6ce8\u89e3 \u00b6 MyBatis \u63d0\u4f9b\u4e86\u548c XML \u914d\u7f6e\u7b49\u540c\u7684\u6ce8\u89e3\uff0c\u4e2a\u4eba\u89c9\u5f97\u8fd8\u662f XML \u914d\u7f6e\u66f4\u52a0\u76f4\u89c2\u3002\uff08\u4e0d\u63a8\u8350\uff09 @CacheNamespace @Property @CacheNamespaceRef @ConstructorArgs @Arg @TypeDiscriminator @Case @Results @Result @One @Many @MapKey @Options @Insert @Update @Delete @Select @Param @SelectKey @ResultMap @ResultType @Flush \u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 @SelectKey \u6ce8\u89e3\u6765\u5728\u63d2\u5165\u524d\u8bfb\u53d6\u6570\u636e\u5e93\u5e8f\u5217\u7684\u503c\uff1a @Insert(\"insert into table3 (id, name) values(#{nameId}, #{name})\") @SelectKey(statement=\"call next value for TestSequence\", keyProperty=\"nameId\", before=true, resultType=int.class) int insertTable3(Name name);","title":"MyBatis Spring Boot Starter"},{"location":"220627_MyBatis_Usage/#mybatis-spring-boot-starter","text":"MyBatis \u662f\u4e00\u6b3e\u4f18\u79c0\u7684\u6301\u4e45\u5c42\u6846\u67b6\uff0c\u5b83\u652f\u6301\u81ea\u5b9a\u4e49 SQL\u3001\u5b58\u50a8\u8fc7\u7a0b\u4ee5\u53ca\u9ad8\u7ea7\u6620\u5c04\u3002MyBatis \u514d\u9664\u4e86\u51e0\u4e4e\u6240\u6709\u7684 JDBC \u4ee3\u7801\u4ee5\u53ca\u8bbe\u7f6e\u53c2\u6570\u548c\u83b7\u53d6\u7ed3\u679c\u96c6\u7684\u5de5\u4f5c\u3002MyBatis \u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684 XML \u6216\u6ce8\u89e3\u6765\u914d\u7f6e\u548c\u6620\u5c04\u539f\u59cb\u7c7b\u578b\u3001\u63a5\u53e3\u548c Java POJO\uff08Plain Old Java Objects\uff0c\u666e\u901a\u8001\u5f0f Java \u5bf9\u8c61\uff09\u4e3a\u6570\u636e\u5e93\u4e2d\u7684\u8bb0\u5f55\u3002 https://mybatis.org/mybatis-3/zh/index.html MyBatis-Spring-Boot-Starter \u53ef\u4ee5\u5e2e\u52a9\u4f60\u66f4\u5feb\u5730\u5728 Spring Boot \u4e4b\u4e0a\u6784\u5efa MyBatis \u5e94\u7528\u3002 MyBatis-PageHelper \u662f MyBatis \u6700\u65b9\u4fbf\u7684\u5206\u9875\u63d2\u4ef6\u3002","title":"MyBatis Spring Boot Starter"},{"location":"220627_MyBatis_Usage/#_1","text":"1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u6dfb\u52a0 Maven \u4f9d\u8d56\uff1a <dependency> <groupId>com.kaddo</groupId> <artifactId>kaddo-components-mybatis</artifactId> <version>${kaddo.version}</version> </dependency> 2\uff09\u7136\u540e\uff0c\u6839\u636e\u6570\u636e\u5e93\u9009\u62e9\u9a71\u52a8\uff0c\u4ee5 H2 \u6570\u636e\u5e93\u4e3a\u4f8b\uff1a <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> <scope>runtime</scope> </dependency> 3\uff09\u5728 application.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 H2 \u6570\u636e\u5e93\u7684\u76f8\u5173\u914d\u7f6e\uff1a # DataSource Configuration spring.datasource.driver-class-name=org.h2.Driver spring.datasource.schema=classpath:db/schema-h2.sql spring.datasource.data=classpath:db/data-h2.sql spring.datasource.url=jdbc:h2:mem:test spring.datasource.username=root spring.datasource.password=test 4\uff09\u5728 application.properties \u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 MyBatis \u914d\u7f6e\uff08\u914d\u7f6e\u53c2\u6570\u4e0e MyBatis-Plus \u57fa\u672c\u4e00\u6837\uff0cMyBatis \u5b98\u65b9\u914d\u7f6e\u6587\u6863\uff1a https://mybatis.org/mybatis-3/zh/configuration.html \uff09\uff1a ## MyBatis Configuration mybatis.type-aliases-package=com.mybatis.samples.quickstart.model mybatis.mapper-locations=classpath*:/mapper/**/*.xml mybatis.configuration.map-underscore-to-camel-case=true mybatis.configuration.default-executor-type=reuse mybatis.configuration.default-fetch-size=100 mybatis.configuration.default-statement-timeout=30 mybatis.configuration.cache-enabled=true 5\uff09\u5728 Spring Boot \u542f\u52a8\u7c7b\u4e2d\u6dfb\u52a0 @MapperScan \u6ce8\u89e3\uff0c\u626b\u63cf Mapper \u6587\u4ef6\u5939\uff1a @SpringBootApplication @MapperScan(\"com.mybatis.samples.quickstart.mapper\") public class SampleMybatisApplication { public static void main(String[] args) { SpringApplication.run(SampleMybatisApplication.class, args); } } 6\uff09\u7f16\u5199\u6570\u636e\u5c42\u5bf9\u8c61\uff0c\u5047\u8bbe\u6211\u4eec\u6709\u4e0b\u9762\u7684 mapper \uff1a @Mapper public interface CityMapper { @Select(\"SELECT * FROM CITY WHERE state = #{state}\") City findByState(@Param(\"state\") String state); } 7\uff09\u4f60\u53ea\u9700\u8981\u521b\u5efa\u4e00\u4e2a Spring boot \u5e94\u7528\uff0c\u50cf\u4e0b\u9762\u8fd9\u6837\uff0c\u5c06 mapper \u6ce8\u5165\u8fdb\u53bb\uff08 Spring 4.3 \u4ee5\u4e0a\u53ef\u7528\uff09\u3002 @SpringBootApplication //@MapperScan(\"com.mybatis.samples.quickstart.mapper\") public class SampleMybatisApplication implements CommandLineRunner { private final CityMapper cityMapper; public SampleMybatisApplication(CityMapper cityMapper) { this.cityMapper = cityMapper; } public static void main(String[] args) { SpringApplication.run(SampleMybatisApplication.class, args); } @Override public void run(String... args) throws Exception { System.out.println(this.cityMapper.findByState(\"CA\")); } }","title":"\u5feb\u901f\u5f00\u59cb"},{"location":"220627_MyBatis_Usage/#_2","text":"\u63a8\u8350\u4ee5\u4e0b\u5199\u6cd5\uff0c\u66f4\u591a\u67e5\u770b\u5b98\u65b9\u6587\u6863\uff1a https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md // Mapper\u63a5\u53e3\u65b9\u5f0f\u7684\u8c03\u7528\uff0c\u63a8\u8350\u8fd9\u79cd\u4f7f\u7528\u65b9\u5f0f\u3002 PageHelper.startPage(1, 10); List<User> list = userMapper.selectIf(1); // ISelect \u63a5\u53e3\u65b9\u5f0f // jdk6,7\u7528\u6cd5\uff0c\u521b\u5efa\u63a5\u53e3 Page<User> page = PageHelper.startPage(1, 10).doSelectPage(new ISelect() { @Override public void doSelect() { userMapper.selectGroupBy(); } }); // jdk8 lambda\u7528\u6cd5 Page<User> page = PageHelper.startPage(1, 10).doSelectPage(()-> userMapper.selectGroupBy()); // \u4e5f\u53ef\u4ee5\u76f4\u63a5\u8fd4\u56de PageInfo\uff0c\u6ce8\u610f doSelectPageInfo \u65b9\u6cd5\u548c doSelectPage pageInfo = PageHelper.startPage(1, 10).doSelectPageInfo(new ISelect() { @Override public void doSelect() { userMapper.selectGroupBy(); } }); // \u5bf9\u5e94\u7684lambda\u7528\u6cd5 pageInfo = PageHelper.startPage(1, 10).doSelectPageInfo(() -> userMapper.selectGroupBy()); // count\u67e5\u8be2\uff0c\u8fd4\u56de\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u7684count\u6570 long total = PageHelper.count(new ISelect() { @Override public void doSelect() { userMapper.selectLike(user); } }); // lambda total = PageHelper.count(()->userMapper.selectLike(user));","title":"\u5982\u4f55\u4f7f\u7528\u5206\u9875\u63d2\u4ef6"},{"location":"220627_MyBatis_Usage/#-","text":"https://mybatis.org/mybatis-3/zh/configuration.html MyBatis \u7684\u914d\u7f6e\u6587\u4ef6\u5305\u542b\u4e86\u4f1a\u6df1\u6df1\u5f71\u54cd MyBatis \u884c\u4e3a\u7684\u8bbe\u7f6e\u548c\u5c5e\u6027\u4fe1\u606f\u3002 \u914d\u7f6e\u6587\u6863\u7684\u9876\u5c42\u7ed3\u6784\u5982\u4e0b\uff1a configuration\uff08\u914d\u7f6e\uff09 properties\uff08\u5c5e\u6027\uff09 settings\uff08\u8bbe\u7f6e\uff09 typeAliases\uff08\u7c7b\u578b\u522b\u540d\uff09 typeHandlers\uff08\u7c7b\u578b\u5904\u7406\u5668\uff09 objectFactory\uff08\u5bf9\u8c61\u5de5\u5382\uff09 plugins\uff08\u63d2\u4ef6\uff09 environments\uff08\u73af\u5883\u914d\u7f6e\uff09 environment\uff08\u73af\u5883\u53d8\u91cf\uff09 transactionManager\uff08\u4e8b\u52a1\u7ba1\u7406\u5668\uff09 dataSource\uff08\u6570\u636e\u6e90\uff09 databaseIdProvider\uff08\u6570\u636e\u5e93\u5382\u5546\u6807\u8bc6\uff09 mappers\uff08\u6620\u5c04\u5668\uff09 \u63d0\u793a\uff1a\u5728 Spring Boot \u9879\u76ee\u4e2d\u96c6\u6210 MyBatis-Spring-Boot-Starter \u540e\uff0c\u4e0d\u518d\u4f9d\u8d56 mybatis-config.xml \u914d\u7f6e\u6587\u4ef6\uff0c\u5176\u4e2d\u7684\u5927\u90e8\u5206\u914d\u7f6e\u90fd\u53ef\u4ee5\u7701\u7565\uff0c\u4f46\u6709\u5fc5\u8981\u4e86\u89e3\u3002","title":"\u8fdb\u9636\u7bc7 - \u914d\u7f6e"},{"location":"220627_MyBatis_Usage/#-xml","text":"https://mybatis.org/mybatis-3/zh/sqlmap-xml.html MyBatis \u7684\u771f\u6b63\u5f3a\u5927\u5728\u4e8e\u5b83\u7684\u8bed\u53e5\u6620\u5c04\uff0c\u8fd9\u662f\u5b83\u7684\u9b54\u529b\u6240\u5728\u3002\u7531\u4e8e\u5b83\u7684\u5f02\u5e38\u5f3a\u5927\uff0c\u6620\u5c04\u5668\u7684 XML \u6587\u4ef6\u5c31\u663e\u5f97\u76f8\u5bf9\u7b80\u5355\u3002\u5982\u679c\u62ff\u5b83\u8ddf\u5177\u6709\u76f8\u540c\u529f\u80fd\u7684 JDBC \u4ee3\u7801\u8fdb\u884c\u5bf9\u6bd4\uff0c\u4f60\u4f1a\u7acb\u5373\u53d1\u73b0\u7701\u6389\u4e86\u5c06\u8fd1 95% \u7684\u4ee3\u7801\u3002MyBatis \u81f4\u529b\u4e8e\u51cf\u5c11\u4f7f\u7528\u6210\u672c\uff0c\u8ba9\u7528\u6237\u80fd\u66f4\u4e13\u6ce8\u4e8e SQL \u4ee3\u7801\u3002 SQL \u6620\u5c04\u6587\u4ef6\u53ea\u6709\u5f88\u5c11\u7684\u51e0\u4e2a\u9876\u7ea7\u5143\u7d20\uff08\u6309\u7167\u5e94\u88ab\u5b9a\u4e49\u7684\u987a\u5e8f\u5217\u51fa\uff09\uff1a resultMap \u2013 \u63cf\u8ff0\u5982\u4f55\u4ece\u6570\u636e\u5e93\u7ed3\u679c\u96c6\u4e2d\u52a0\u8f7d\u5bf9\u8c61\uff0c\u662f\u6700\u590d\u6742\u4e5f\u662f\u6700\u5f3a\u5927\u7684\u5143\u7d20\u3002 sql \u2013 \u53ef\u88ab\u5176\u5b83\u8bed\u53e5\u5f15\u7528\u7684\u53ef\u91cd\u7528\u8bed\u53e5\u5757\u3002 insert \u2013 \u6620\u5c04\u63d2\u5165\u8bed\u53e5\u3002 update \u2013 \u6620\u5c04\u66f4\u65b0\u8bed\u53e5\u3002 delete \u2013 \u6620\u5c04\u5220\u9664\u8bed\u53e5\u3002 select \u2013 \u6620\u5c04\u67e5\u8be2\u8bed\u53e5\u3002 \u9ad8\u7ea7\u7ed3\u679c\u96c6\u6620\u5c04\uff1a <!-- \u975e\u5e38\u590d\u6742\u7684\u7ed3\u679c\u6620\u5c04 --> <resultMap id=\"detailedBlogResultMap\" type=\"Blog\"> <constructor> <idArg column=\"blog_id\" javaType=\"int\"/> </constructor> <result property=\"title\" column=\"blog_title\"/> <association property=\"author\" javaType=\"Author\"> <id property=\"id\" column=\"author_id\"/> <result property=\"username\" column=\"author_username\"/> <result property=\"password\" column=\"author_password\"/> <result property=\"email\" column=\"author_email\"/> <result property=\"bio\" column=\"author_bio\"/> <result property=\"favouriteSection\" column=\"author_favourite_section\"/> </association> <collection property=\"posts\" ofType=\"Post\"> <id property=\"id\" column=\"post_id\"/> <result property=\"subject\" column=\"post_subject\"/> <association property=\"author\" javaType=\"Author\"/> <collection property=\"comments\" ofType=\"Comment\"> <id property=\"id\" column=\"comment_id\"/> </collection> <collection property=\"tags\" ofType=\"Tag\" > <id property=\"id\" column=\"tag_id\"/> </collection> <discriminator javaType=\"int\" column=\"draft\"> <case value=\"1\" resultType=\"DraftPost\"/> </discriminator> </collection> </resultMap> 1\uff09\u5173\u8054 <resultMap id=\"blogResult\" type=\"Blog\"> <id property=\"id\" column=\"blog_id\" /> <result property=\"title\" column=\"blog_title\"/> <association property=\"author\" javaType=\"Author\"> <id property=\"id\" column=\"author_id\"/> <result property=\"username\" column=\"author_username\"/> <result property=\"password\" column=\"author_password\"/> <result property=\"email\" column=\"author_email\"/> <result property=\"bio\" column=\"author_bio\"/> </association> </resultMap> 2\uff09\u96c6\u5408 <resultMap id=\"blogResult\" type=\"Blog\"> <id property=\"id\" column=\"blog_id\" /> <result property=\"title\" column=\"blog_title\"/> <collection property=\"posts\" ofType=\"Post\"> <id property=\"id\" column=\"post_id\"/> <result property=\"subject\" column=\"post_subject\"/> <result property=\"body\" column=\"post_body\"/> </collection> </resultMap> 3\uff09\u9274\u522b\u5668 <resultMap id=\"vehicleResult\" type=\"Vehicle\"> <id property=\"id\" column=\"id\" /> <result property=\"vin\" column=\"vin\"/> <result property=\"year\" column=\"year\"/> <result property=\"make\" column=\"make\"/> <result property=\"model\" column=\"model\"/> <result property=\"color\" column=\"color\"/> <discriminator javaType=\"int\" column=\"vehicle_type\"> <case value=\"1\" resultMap=\"carResult\"/> <case value=\"2\" resultMap=\"truckResult\"/> <case value=\"3\" resultMap=\"vanResult\"/> <case value=\"4\" resultMap=\"suvResult\"/> </discriminator> </resultMap>","title":"\u8fdb\u9636\u7bc7 - XML\u6620\u5c04\u6587\u4ef6"},{"location":"220627_MyBatis_Usage/#-sql","text":"https://mybatis.org/mybatis-3/zh/dynamic-sql.html \u52a8\u6001 SQL \u662f MyBatis \u7684\u5f3a\u5927\u7279\u6027\u4e4b\u4e00\u3002\u5982\u679c\u4f60\u4f7f\u7528\u8fc7 JDBC \u6216\u5176\u5b83\u7c7b\u4f3c\u7684\u6846\u67b6\uff0c\u4f60\u5e94\u8be5\u80fd\u7406\u89e3\u6839\u636e\u4e0d\u540c\u6761\u4ef6\u62fc\u63a5 SQL \u8bed\u53e5\u6709\u591a\u75db\u82e6\uff0c\u4f8b\u5982\u62fc\u63a5\u65f6\u8981\u786e\u4fdd\u4e0d\u80fd\u5fd8\u8bb0\u6dfb\u52a0\u5fc5\u8981\u7684\u7a7a\u683c\uff0c\u8fd8\u8981\u6ce8\u610f\u53bb\u6389\u5217\u8868\u6700\u540e\u4e00\u4e2a\u5217\u540d\u7684\u9017\u53f7\u3002\u5229\u7528\u52a8\u6001 SQL\uff0c\u53ef\u4ee5\u5f7b\u5e95\u6446\u8131\u8fd9\u79cd\u75db\u82e6\u3002 \u4f7f\u7528\u52a8\u6001 SQL \u5e76\u975e\u4e00\u4ef6\u6613\u4e8b\uff0c\u4f46\u501f\u52a9\u53ef\u7528\u4e8e\u4efb\u4f55 SQL \u6620\u5c04\u8bed\u53e5\u4e2d\u7684\u5f3a\u5927\u7684\u52a8\u6001 SQL \u8bed\u8a00\uff0cMyBatis \u663e\u8457\u5730\u63d0\u5347\u4e86\u8fd9\u4e00\u7279\u6027\u7684\u6613\u7528\u6027\u3002 \u5982\u679c\u4f60\u4e4b\u524d\u7528\u8fc7 JSTL \u6216\u4efb\u4f55\u57fa\u4e8e\u7c7b XML \u8bed\u8a00\u7684\u6587\u672c\u5904\u7406\u5668\uff0c\u4f60\u5bf9\u52a8\u6001 SQL \u5143\u7d20\u53ef\u80fd\u4f1a\u611f\u89c9\u4f3c\u66fe\u76f8\u8bc6\u3002\u5728 MyBatis \u4e4b\u524d\u7684\u7248\u672c\u4e2d\uff0c\u9700\u8981\u82b1\u65f6\u95f4\u4e86\u89e3\u5927\u91cf\u7684\u5143\u7d20\u3002\u501f\u52a9\u529f\u80fd\u5f3a\u5927\u7684\u57fa\u4e8e OGNL \u7684\u8868\u8fbe\u5f0f\uff0cMyBatis 3 \u66ff\u6362\u4e86\u4e4b\u524d\u7684\u5927\u90e8\u5206\u5143\u7d20\uff0c\u5927\u5927\u7cbe\u7b80\u4e86\u5143\u7d20\u79cd\u7c7b\uff0c\u73b0\u5728\u8981\u5b66\u4e60\u7684\u5143\u7d20\u79cd\u7c7b\u6bd4\u539f\u6765\u7684\u4e00\u534a\u8fd8\u8981\u5c11\u3002 if choose (when, otherwise) trim (where, set) foreach 1\uff09if - \u4f7f\u7528\u52a8\u6001 SQL \u6700\u5e38\u89c1\u60c5\u666f\u662f\u6839\u636e\u6761\u4ef6\u5305\u542b where \u5b50\u53e5\u7684\u4e00\u90e8\u5206\u3002 <select id=\"findActiveBlogLike\" resultType=\"Blog\"> SELECT * FROM BLOG WHERE state = \u2018ACTIVE\u2019 <if test=\"title != null\"> AND title like #{title} </if> <if test=\"author != null and author.name != null\"> AND author_name like #{author.name} </if> </select> 2\uff09choose (when, otherwise) <select id=\"findActiveBlogLike\" resultType=\"Blog\"> SELECT * FROM BLOG WHERE state = \u2018ACTIVE\u2019 <choose> <when test=\"title != null\"> AND title like #{title} </when> <when test=\"author != null and author.name != null\"> AND author_name like #{author.name} </when> <otherwise> AND featured = 1 </otherwise> </choose> </select> 3\uff09trim (where, set) <selectid=\"findActiveBlogLike\" resultType=\"Blog\"> SELECT * FROM BLOG <where> <iftest=\"state != null\"> state = #{state} </if> <iftest=\"title != null\"> AND title like #{title} </if> <iftest=\"author != null and author.name != null\"> AND author_name like #{author.name} </if> </where> </select> where \u5143\u7d20\u53ea\u4f1a\u5728\u5b50\u5143\u7d20\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9\u7684\u60c5\u51b5\u4e0b\u624d\u63d2\u5165 \u201cWHERE\u201d \u5b50\u53e5\u3002\u800c\u4e14\uff0c\u82e5\u5b50\u53e5\u7684\u5f00\u5934\u4e3a \u201cAND\u201d \u6216 \u201cOR\u201d\uff0c where \u5143\u7d20\u4e5f\u4f1a\u5c06\u5b83\u4eec\u53bb\u9664\u3002 \u5982\u679c where \u5143\u7d20\u4e0e\u4f60\u671f\u671b\u7684\u4e0d\u592a\u4e00\u6837\uff0c\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49 trim \u5143\u7d20\u6765\u5b9a\u5236 where \u5143\u7d20\u7684\u529f\u80fd\u3002\u6bd4\u5982\uff0c\u548c where \u5143\u7d20\u7b49\u4ef7\u7684\u81ea\u5b9a\u4e49 trim \u5143\u7d20\u4e3a\uff1a <trim prefix=\"WHERE\" prefixOverrides=\"AND |OR \"> ... </trim> 4\uff09foreach - \u52a8\u6001 SQL \u7684\u53e6\u4e00\u4e2a\u5e38\u89c1\u4f7f\u7528\u573a\u666f\u662f\u5bf9\u96c6\u5408\u8fdb\u884c\u904d\u5386\uff08\u5c24\u5176\u662f\u5728\u6784\u5efa IN \u6761\u4ef6\u8bed\u53e5\u7684\u65f6\u5019\uff09\u3002 <select id=\"selectPostIn\" resultType=\"domain.blog.Post\"> SELECT * FROM POST P <where> <foreach item=\"item\" index=\"index\" collection=\"list\" open=\"ID in (\" separator=\",\" close=\")\" nullable=\"true\"> #{item} </foreach> </where> </select>","title":"\u8fdb\u9636\u7bc7 - \u52a8\u6001SQL"},{"location":"220627_MyBatis_Usage/#-javaapi","text":"https://mybatis.org/mybatis-3/zh/java-api.html SqlSession - \u4f7f\u7528 MyBatis \u7684\u4e3b\u8981 Java \u63a5\u53e3\u5c31\u662f SqlSession\u3002\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u63a5\u53e3\u6765\u6267\u884c\u547d\u4ee4\uff0c\u83b7\u53d6\u6620\u5c04\u5668\u5b9e\u4f8b\u548c\u7ba1\u7406\u4e8b\u52a1\u3002 SqlSessionFactory - SqlSessionFactory \u6709\u516d\u4e2a\u65b9\u6cd5\u521b\u5efa SqlSession \u5b9e\u4f8b\u3002","title":"\u8fdb\u9636\u7bc7 - JavaAPI"},{"location":"220627_MyBatis_Usage/#_3","text":"MyBatis \u63d0\u4f9b\u4e86\u548c XML \u914d\u7f6e\u7b49\u540c\u7684\u6ce8\u89e3\uff0c\u4e2a\u4eba\u89c9\u5f97\u8fd8\u662f XML \u914d\u7f6e\u66f4\u52a0\u76f4\u89c2\u3002\uff08\u4e0d\u63a8\u8350\uff09 @CacheNamespace @Property @CacheNamespaceRef @ConstructorArgs @Arg @TypeDiscriminator @Case @Results @Result @One @Many @MapKey @Options @Insert @Update @Delete @Select @Param @SelectKey @ResultMap @ResultType @Flush \u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 @SelectKey \u6ce8\u89e3\u6765\u5728\u63d2\u5165\u524d\u8bfb\u53d6\u6570\u636e\u5e93\u5e8f\u5217\u7684\u503c\uff1a @Insert(\"insert into table3 (id, name) values(#{nameId}, #{name})\") @SelectKey(statement=\"call next value for TestSequence\", keyProperty=\"nameId\", before=true, resultType=int.class) int insertTable3(Name name);","title":"\u6ce8\u89e3"},{"location":"maven/220622_EditorConfig_Maven_Plugin/","text":"EditorConfig Maven Plugin \u00b6 EditorConfig \u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u5728\u4e0d\u540c\u7684\u7f16\u8f91\u5668\u548c IDE \u4e4b\u95f4\u5b9a\u4e49\u548c\u7ef4\u62a4\u4e00\u81f4\u7684\u7f16\u7801\u6837\u5f0f\u3002 EditorConfig helps maintain consistent coding styles for multiple developers working on the same project across various editors and IDEs. The EditorConfig project consists of a file format for defining coding styles and a collection of text editor plugins that enable editors to read the file format and adhere to defined styles. EditorConfig files are easily readable and they work nicely with version control systems. editorconfig-maven-plugin is a Maven plugin for checking whether project files comply with format rules defined in .editorconfig files and eventually also for fixing the violations. \u5b98\u65b9\u6587\u6863\uff1a EditorConfig editorconfig-maven-plugin \u5feb\u901f\u4f7f\u7528 \u00b6 1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u6dfb\u52a0 .editorconfig \u6587\u4ef6\uff1a # EditorConfig helps developers define and maintain consistent # coding styles between different editors and IDEs # https://editorconfig.org/ root = true [*] # Change these settings to your own preference indent_style = space indent_size = 4 # We recommend you to keep these unchanged end_of_line = lf charset = utf-8 trim_trailing_whitespace = true insert_final_newline = true [*.md] trim_trailing_whitespace = false 2\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u96c6\u6210\u63d2\u4ef6\u7ba1\u7406\uff08Kaddo-\u6846\u67b6\u5df2\u96c6\u6210\u63d2\u4ef6\u7ba1\u7406\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u8df3\u8fc7\uff09\uff1a <build> <pluginManagement> <plugins> <plugin> <groupId>org.ec4j.maven</groupId> <artifactId>editorconfig-maven-plugin</artifactId> <version>${editorconfig-maven-plugin.version}</version> <executions> <execution> <id>check</id> <phase>verify</phase> <goals> <goal>check</goal> </goals> </execution> </executions> <configuration> <excludes> <!-- Note that maven submodule directories and many non-source file patterns are excluded by default --> <!-- You can exclude further files from processing: --> <!-- <exclude>src/main/**/*.whatever</exclude> --> </excludes> <!-- All files are included by default: --> <!-- <includes> --> <!-- <include>**</include> --> <!-- </includes> --> </configuration> </plugin> </plugins> </pluginManagement> </build> 3\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u4f7f\u7528\u63d2\u4ef6\uff08Kaddo-\u6846\u67b6\u5df2\u96c6\u6210\u63d2\u4ef6\u7ba1\u7406\uff0c\u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf\uff09\uff1a <build> <plugins> <plugin> <groupId>org.ec4j.maven</groupId> <artifactId>editorconfig-maven-plugin</artifactId> </plugin> </plugins> </build> 4\uff09\u6267\u884c\u547d\u4ee4\uff08\u4f1a\u81ea\u52a8\u5904\u7406\u4ee3\u7801\u683c\u5f0f\uff09\uff1a mvn editorconfig:format","title":"EditorConfig Maven Plugin"},{"location":"maven/220622_EditorConfig_Maven_Plugin/#editorconfig-maven-plugin","text":"EditorConfig \u5e2e\u52a9\u5f00\u53d1\u4eba\u5458\u5728\u4e0d\u540c\u7684\u7f16\u8f91\u5668\u548c IDE \u4e4b\u95f4\u5b9a\u4e49\u548c\u7ef4\u62a4\u4e00\u81f4\u7684\u7f16\u7801\u6837\u5f0f\u3002 EditorConfig helps maintain consistent coding styles for multiple developers working on the same project across various editors and IDEs. The EditorConfig project consists of a file format for defining coding styles and a collection of text editor plugins that enable editors to read the file format and adhere to defined styles. EditorConfig files are easily readable and they work nicely with version control systems. editorconfig-maven-plugin is a Maven plugin for checking whether project files comply with format rules defined in .editorconfig files and eventually also for fixing the violations. \u5b98\u65b9\u6587\u6863\uff1a EditorConfig editorconfig-maven-plugin","title":"EditorConfig Maven Plugin"},{"location":"maven/220622_EditorConfig_Maven_Plugin/#_1","text":"1\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u6839\u76ee\u5f55\u4e2d\u6dfb\u52a0 .editorconfig \u6587\u4ef6\uff1a # EditorConfig helps developers define and maintain consistent # coding styles between different editors and IDEs # https://editorconfig.org/ root = true [*] # Change these settings to your own preference indent_style = space indent_size = 4 # We recommend you to keep these unchanged end_of_line = lf charset = utf-8 trim_trailing_whitespace = true insert_final_newline = true [*.md] trim_trailing_whitespace = false 2\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u96c6\u6210\u63d2\u4ef6\u7ba1\u7406\uff08Kaddo-\u6846\u67b6\u5df2\u96c6\u6210\u63d2\u4ef6\u7ba1\u7406\uff0c\u5f00\u53d1\u8005\u53ef\u4ee5\u8df3\u8fc7\uff09\uff1a <build> <pluginManagement> <plugins> <plugin> <groupId>org.ec4j.maven</groupId> <artifactId>editorconfig-maven-plugin</artifactId> <version>${editorconfig-maven-plugin.version}</version> <executions> <execution> <id>check</id> <phase>verify</phase> <goals> <goal>check</goal> </goals> </execution> </executions> <configuration> <excludes> <!-- Note that maven submodule directories and many non-source file patterns are excluded by default --> <!-- You can exclude further files from processing: --> <!-- <exclude>src/main/**/*.whatever</exclude> --> </excludes> <!-- All files are included by default: --> <!-- <includes> --> <!-- <include>**</include> --> <!-- </includes> --> </configuration> </plugin> </plugins> </pluginManagement> </build> 3\uff09\u5728\u4f60\u7684 Spring Boot \u9879\u76ee\u4e2d\u4f7f\u7528\u63d2\u4ef6\uff08Kaddo-\u6846\u67b6\u5df2\u96c6\u6210\u63d2\u4ef6\u7ba1\u7406\uff0c\u4f7f\u7528\u66f4\u52a0\u65b9\u4fbf\uff09\uff1a <build> <plugins> <plugin> <groupId>org.ec4j.maven</groupId> <artifactId>editorconfig-maven-plugin</artifactId> </plugin> </plugins> </build> 4\uff09\u6267\u884c\u547d\u4ee4\uff08\u4f1a\u81ea\u52a8\u5904\u7406\u4ee3\u7801\u683c\u5f0f\uff09\uff1a mvn editorconfig:format","title":"\u5feb\u901f\u4f7f\u7528"},{"location":"maven/220622_Versions_Maven_Plugin/","text":"Versions Maven Plugin \u00b6 \u9879\u76ee\u7248\u672c\u53f7\u7ba1\u7406\uff0c\u5c24\u5176\u662f\u591a\u6a21\u5757\u9879\u76ee\u7684\u7248\u672c\u53f7\u53d8\u66f4\u3002Spring Boot \u4f9d\u8d56\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u8be5\u63d2\u4ef6\uff0c\u65e0\u987b\u518d\u6b21\u5f15\u5165\u3002 <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>versions-maven-plugin</artifactId> <version>${versions-maven-plugin.version}</version> </plugin> \u51e0\u4e2a\u91cd\u8981\u7684\u547d\u4ee4\uff1a # \u663e\u793a\u6240\u6709\u7684\u4f9d\u8d56\u66f4\u65b0 mvn versions:display-dependency-updates # \u663e\u793a\u9879\u76ee\u7684\u63d2\u4ef6\u66f4\u65b0 mvn versions:display-plugin-updates # \u663e\u793a\u9879\u76ee\u7684\u5c5e\u6027\u66f4\u65b0 mvn versions:display-property-updates # \u8bbe\u7f6e\u9879\u76ee\u7248\u672c\u53f7 mvn versions:set -DnewVersion=1.0.1-SNAPSHOT -DgenerateBackupPoms=true # \u8bbe\u7f6e\u5c5e\u6027\u7248\u672c\u53f7 mvn versions:set-property -Dproperty=kaddo.version -DnewVersion=1.0.1-SNAPSHOT -DgenerateBackupPoms=true # \u79fb\u9664 pom.xml.versionsBackup \u5907\u4efd\u6587\u4ef6 mvn versions:commit # \u57fa\u4e8e pom.xml.versionsBackup \u5907\u4efd\u6587\u4ef6\u56de\u6eda mvn versions:revert \u5b98\u65b9\u6587\u6863\uff1a Versions Maven Plugin","title":"Versions Maven Plugin"},{"location":"maven/220622_Versions_Maven_Plugin/#versions-maven-plugin","text":"\u9879\u76ee\u7248\u672c\u53f7\u7ba1\u7406\uff0c\u5c24\u5176\u662f\u591a\u6a21\u5757\u9879\u76ee\u7684\u7248\u672c\u53f7\u53d8\u66f4\u3002Spring Boot \u4f9d\u8d56\u4e2d\u5df2\u7ecf\u5305\u542b\u4e86\u8be5\u63d2\u4ef6\uff0c\u65e0\u987b\u518d\u6b21\u5f15\u5165\u3002 <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>versions-maven-plugin</artifactId> <version>${versions-maven-plugin.version}</version> </plugin> \u51e0\u4e2a\u91cd\u8981\u7684\u547d\u4ee4\uff1a # \u663e\u793a\u6240\u6709\u7684\u4f9d\u8d56\u66f4\u65b0 mvn versions:display-dependency-updates # \u663e\u793a\u9879\u76ee\u7684\u63d2\u4ef6\u66f4\u65b0 mvn versions:display-plugin-updates # \u663e\u793a\u9879\u76ee\u7684\u5c5e\u6027\u66f4\u65b0 mvn versions:display-property-updates # \u8bbe\u7f6e\u9879\u76ee\u7248\u672c\u53f7 mvn versions:set -DnewVersion=1.0.1-SNAPSHOT -DgenerateBackupPoms=true # \u8bbe\u7f6e\u5c5e\u6027\u7248\u672c\u53f7 mvn versions:set-property -Dproperty=kaddo.version -DnewVersion=1.0.1-SNAPSHOT -DgenerateBackupPoms=true # \u79fb\u9664 pom.xml.versionsBackup \u5907\u4efd\u6587\u4ef6 mvn versions:commit # \u57fa\u4e8e pom.xml.versionsBackup \u5907\u4efd\u6587\u4ef6\u56de\u6eda mvn versions:revert \u5b98\u65b9\u6587\u6863\uff1a Versions Maven Plugin","title":"Versions Maven Plugin"},{"location":"spring/","text":"Spring Projects \u00b6 From configuration to security, web apps to big data\u2014whatever the infrastructure needs of your application may be, there is a Spring Project to help you build it. Start small and use just what you need\u2014Spring is modular by design. Spring Tools 4 Spring Initializr Spring Boot \u00b6 Spring Framework \u00b6 Spring Data \u00b6 Spring Cloud \u00b6 Spring Cloud Data Flow \u00b6 Spring Security \u00b6 Spring for GraphQL \u00b6 Spring Session \u00b6 Spring Integration \u00b6 Spring HATEOAS \u00b6 Spring REST Docs \u00b6 Spring Batch \u00b6 Spring AMQP \u00b6 Spring CredHub \u00b6 Spring Flo \u00b6 Spring for Apache Kafka \u00b6 Spring LDAP \u00b6 Spring Shell \u00b6 Spring Statemachine \u00b6 Spring Vault \u00b6 Spring Web Flow \u00b6 Spring Web Services \u00b6","title":"Spring Projects"},{"location":"spring/#spring-projects","text":"From configuration to security, web apps to big data\u2014whatever the infrastructure needs of your application may be, there is a Spring Project to help you build it. Start small and use just what you need\u2014Spring is modular by design. Spring Tools 4 Spring Initializr","title":"Spring Projects"},{"location":"spring/#spring-boot","text":"","title":"Spring Boot"},{"location":"spring/#spring-framework","text":"","title":"Spring Framework"},{"location":"spring/#spring-data","text":"","title":"Spring Data"},{"location":"spring/#spring-cloud","text":"","title":"Spring Cloud"},{"location":"spring/#spring-cloud-data-flow","text":"","title":"Spring Cloud Data Flow"},{"location":"spring/#spring-security","text":"","title":"Spring Security"},{"location":"spring/#spring-for-graphql","text":"","title":"Spring for GraphQL"},{"location":"spring/#spring-session","text":"","title":"Spring Session"},{"location":"spring/#spring-integration","text":"","title":"Spring Integration"},{"location":"spring/#spring-hateoas","text":"","title":"Spring HATEOAS"},{"location":"spring/#spring-rest-docs","text":"","title":"Spring REST Docs"},{"location":"spring/#spring-batch","text":"","title":"Spring Batch"},{"location":"spring/#spring-amqp","text":"","title":"Spring AMQP"},{"location":"spring/#spring-credhub","text":"","title":"Spring CredHub"},{"location":"spring/#spring-flo","text":"","title":"Spring Flo"},{"location":"spring/#spring-for-apache-kafka","text":"","title":"Spring for Apache Kafka"},{"location":"spring/#spring-ldap","text":"","title":"Spring LDAP"},{"location":"spring/#spring-shell","text":"","title":"Spring Shell"},{"location":"spring/#spring-statemachine","text":"","title":"Spring Statemachine"},{"location":"spring/#spring-vault","text":"","title":"Spring Vault"},{"location":"spring/#spring-web-flow","text":"","title":"Spring Web Flow"},{"location":"spring/#spring-web-services","text":"","title":"Spring Web Services"},{"location":"spring/220616_Spring_Framework_Documentationon/","text":"Spring Framework Documentation \u00b6 The Spring Framework provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform. Overview \u00b6 history, design philosophy, feedback, getting started. Spring Initializr Getting Started Guides Core \u00b6 IoC Container, Events, Resources, i18n, Validation, Data Binding, Type Conversion, SpEL, AOP. The IoC Container The bean definition Resources Built-in Resource Implementations Validation, Data Binding, and Type Conversion Spring Field Formatting Configuring a Global Date and Time Format Java Bean Validation Spring MVC Validation Spring Expression Language (SpEL) Aspect Oriented Programming with Spring (Spring AOP) Null-safety Data Buffers and Codecs Logging Appendix Testing \u00b6 Mock Objects, TestContext Framework, Spring MVC Test, WebTestClient. Unit Testing Integration Testing Data Access \u00b6 Transactions, DAO Support, JDBC, R2DBC, O/R Mapping, XML Marshalling. Transaction Management Data Access with JDBC Data Access with R2DBC Object Relational Mapping (ORM) Data Access Hibernate JPA Web Servlet \u00b6 Spring MVC, WebSocket, SockJS, STOMP Messaging. Spring Web MVC DispatcherServlet Filters Annotated Controllers Declaration - Request Mapping - Handler Methods - Model - DataBinder - Exceptions - Controller Advice Functional Endpoints URI Links Asynchronous Requests CORS Web Security HTTP Caching View Technologies MVC Config REST Clients - RestTemplate & WebClient Testing WebSockets Web Reactive \u00b6 Spring WebFlux, WebClient, WebSocket, RSocket. Integration \u00b6 Remoting, JMS, JCA, JMX, Email, Tasks, Scheduling, Caching. REST Endpoints Remoting and Web Services Enterprise JavaBeans (EJB) Integration JMS (Java Message Service) JMX (Java Management Extensions) Email Task Execution and Scheduling Cache Abstraction Languages \u00b6 Kotlin, Groovy, Dynamic Languages. Kotlin Apache Groovy Appendix \u00b6 Spring properties. Wiki \u00b6 What\u2019s New, Upgrade Notes, Supported Versions, and other cross-version information.","title":"Spring Framework Documentation"},{"location":"spring/220616_Spring_Framework_Documentationon/#spring-framework-documentation","text":"The Spring Framework provides a comprehensive programming and configuration model for modern Java-based enterprise applications - on any kind of deployment platform.","title":"Spring Framework Documentation"},{"location":"spring/220616_Spring_Framework_Documentationon/#overview","text":"history, design philosophy, feedback, getting started. Spring Initializr Getting Started Guides","title":"Overview"},{"location":"spring/220616_Spring_Framework_Documentationon/#core","text":"IoC Container, Events, Resources, i18n, Validation, Data Binding, Type Conversion, SpEL, AOP. The IoC Container The bean definition Resources Built-in Resource Implementations Validation, Data Binding, and Type Conversion Spring Field Formatting Configuring a Global Date and Time Format Java Bean Validation Spring MVC Validation Spring Expression Language (SpEL) Aspect Oriented Programming with Spring (Spring AOP) Null-safety Data Buffers and Codecs Logging Appendix","title":"Core"},{"location":"spring/220616_Spring_Framework_Documentationon/#testing","text":"Mock Objects, TestContext Framework, Spring MVC Test, WebTestClient. Unit Testing Integration Testing","title":"Testing"},{"location":"spring/220616_Spring_Framework_Documentationon/#data-access","text":"Transactions, DAO Support, JDBC, R2DBC, O/R Mapping, XML Marshalling. Transaction Management Data Access with JDBC Data Access with R2DBC Object Relational Mapping (ORM) Data Access Hibernate JPA","title":"Data Access"},{"location":"spring/220616_Spring_Framework_Documentationon/#web-servlet","text":"Spring MVC, WebSocket, SockJS, STOMP Messaging. Spring Web MVC DispatcherServlet Filters Annotated Controllers Declaration - Request Mapping - Handler Methods - Model - DataBinder - Exceptions - Controller Advice Functional Endpoints URI Links Asynchronous Requests CORS Web Security HTTP Caching View Technologies MVC Config REST Clients - RestTemplate & WebClient Testing WebSockets","title":"Web Servlet"},{"location":"spring/220616_Spring_Framework_Documentationon/#web-reactive","text":"Spring WebFlux, WebClient, WebSocket, RSocket.","title":"Web Reactive"},{"location":"spring/220616_Spring_Framework_Documentationon/#integration","text":"Remoting, JMS, JCA, JMX, Email, Tasks, Scheduling, Caching. REST Endpoints Remoting and Web Services Enterprise JavaBeans (EJB) Integration JMS (Java Message Service) JMX (Java Management Extensions) Email Task Execution and Scheduling Cache Abstraction","title":"Integration"},{"location":"spring/220616_Spring_Framework_Documentationon/#languages","text":"Kotlin, Groovy, Dynamic Languages. Kotlin Apache Groovy","title":"Languages"},{"location":"spring/220616_Spring_Framework_Documentationon/#appendix","text":"Spring properties.","title":"Appendix"},{"location":"spring/220616_Spring_Framework_Documentationon/#wiki","text":"What\u2019s New, Upgrade Notes, Supported Versions, and other cross-version information.","title":"Wiki"},{"location":"spring/220620_Spring_Boot_Documentation/","text":"Spring Boot Documentation \u00b6 https://spring.io/projects/spring-boot Overview \u00b6 About the Documentation, First Steps, and more. First Steps Upgrading From an Earlier Version Developing with Spring Boot Learning About Spring Boot Features Web Data Messaging IO Container Images Advanced Topics Getting Started \u00b6 Introducing Spring Boot, System Requirements, Servlet Containers, Installing Spring Boot, and Developing Your First Spring Boot Application. System Requirements Installing Spring Boot Developing Your First Spring Boot Application Upgrading Spring Boot Applications \u00b6 Upgrading from 1.x, Upgrading to a new feature release, and Upgrading the Spring Boot CLI. Using Spring Boot \u00b6 Build Systems, Structuring Your Code, Configuration, Spring Beans and Dependency Injection, DevTools, and more. Build Systems Spring Boot application starters Structuring Your Code Configuration Classes Auto-configuration Spring Beans and Dependency Injection Using the @SpringBootApplication Annotation Running Your Application Developer Tools Core Features \u00b6 Profiles, Logging, Security, Caching, Spring Integration, Testing, and more. SpringApplication Application Events and Listeners Externalized Configuration Profiles Logging Internationalization JSON Task Execution and Scheduling Testing Creating Your Own Auto-configuration Kotlin support Web \u00b6 Servlet Web, Reactive Web, GraphQL, Embedded Container Support, Graceful Shutdown, and more. Servlet Web Applications Reactive Web Applications Graceful Shutdown Spring Security Spring Session Spring for GraphQL Spring HATEOAS Data \u00b6 SQL and NOSQL data access. SQL Databases Working with NoSQL Technologies IO \u00b6 Caching, Quartz Scheduler, REST clients, Sending email, Spring Web Services, and more. Caching Hazelcast Quartz Scheduler Sending Email Validation Calling REST Services Web Services Distributed Transactions with JTA Messaging \u00b6 JMS, AMQP, Apache Kafka, RSocket, WebSocket, and Spring Integration. JMS AMQP Apache Kafka Support RSocket Spring Integration WebSockets Container Images \u00b6 Efficient container images and Building container images with Dockerfiles and Cloud Native Buildpacks. Efficient container images Dockerfiles Production-ready Features \u00b6 Monitoring, Metrics, Auditing, and more. Enabling Production-ready Features Endpoints Monitoring and Management over HTTP Monitoring and Management over JMX Loggers Metrics Auditing HTTP Tracing Process Monitoring Cloud Foundry Support Deploying Spring Boot Applications \u00b6 Deploying to the Cloud, and Installing as a Unix application. Deploying to the Cloud Installing Spring Boot Applications Spring Boot CLI \u00b6 Installing the CLI, Using the CLI, Configuring the CLI, and more. Build Tool Plugins \u00b6 Maven Plugin, Gradle Plugin, Antlib, and more. \u201cHow-to\u201d Guides \u00b6 Application Development, Configuration, Embedded Servers, Data Access, and many more. Spring Boot Application Properties and Configuration Embedded Web Servers Spring MVC Jersey HTTP Clients Logging Data Access Database Initialization Messaging Batch Applications Actuator Security Hot Swapping Testing Build Traditional Deployment Appendix \u00b6 Application Properties - Common application properties that you can use to configure your application. Configuration Metadata - Metadata that you can use to describe configuration properties. Auto-configuration Classes - Auto-configuration classes provided by Spring Boot. Test Auto-configuration Annotations - Test auto-configuration annotations that you can use to test slices of your application. Executable Jars - Spring Boot\u2019s executable jars, their launchers, and their format. Dependency Versions - Details of the dependencies that are managed by Spring Boot.","title":"Spring Boot Documentation"},{"location":"spring/220620_Spring_Boot_Documentation/#spring-boot-documentation","text":"https://spring.io/projects/spring-boot","title":"Spring Boot Documentation"},{"location":"spring/220620_Spring_Boot_Documentation/#overview","text":"About the Documentation, First Steps, and more. First Steps Upgrading From an Earlier Version Developing with Spring Boot Learning About Spring Boot Features Web Data Messaging IO Container Images Advanced Topics","title":"Overview"},{"location":"spring/220620_Spring_Boot_Documentation/#getting-started","text":"Introducing Spring Boot, System Requirements, Servlet Containers, Installing Spring Boot, and Developing Your First Spring Boot Application. System Requirements Installing Spring Boot Developing Your First Spring Boot Application","title":"Getting Started"},{"location":"spring/220620_Spring_Boot_Documentation/#upgrading-spring-boot-applications","text":"Upgrading from 1.x, Upgrading to a new feature release, and Upgrading the Spring Boot CLI.","title":"Upgrading Spring Boot Applications"},{"location":"spring/220620_Spring_Boot_Documentation/#using-spring-boot","text":"Build Systems, Structuring Your Code, Configuration, Spring Beans and Dependency Injection, DevTools, and more. Build Systems Spring Boot application starters Structuring Your Code Configuration Classes Auto-configuration Spring Beans and Dependency Injection Using the @SpringBootApplication Annotation Running Your Application Developer Tools","title":"Using Spring Boot"},{"location":"spring/220620_Spring_Boot_Documentation/#core-features","text":"Profiles, Logging, Security, Caching, Spring Integration, Testing, and more. SpringApplication Application Events and Listeners Externalized Configuration Profiles Logging Internationalization JSON Task Execution and Scheduling Testing Creating Your Own Auto-configuration Kotlin support","title":"Core Features"},{"location":"spring/220620_Spring_Boot_Documentation/#web","text":"Servlet Web, Reactive Web, GraphQL, Embedded Container Support, Graceful Shutdown, and more. Servlet Web Applications Reactive Web Applications Graceful Shutdown Spring Security Spring Session Spring for GraphQL Spring HATEOAS","title":"Web"},{"location":"spring/220620_Spring_Boot_Documentation/#data","text":"SQL and NOSQL data access. SQL Databases Working with NoSQL Technologies","title":"Data"},{"location":"spring/220620_Spring_Boot_Documentation/#io","text":"Caching, Quartz Scheduler, REST clients, Sending email, Spring Web Services, and more. Caching Hazelcast Quartz Scheduler Sending Email Validation Calling REST Services Web Services Distributed Transactions with JTA","title":"IO"},{"location":"spring/220620_Spring_Boot_Documentation/#messaging","text":"JMS, AMQP, Apache Kafka, RSocket, WebSocket, and Spring Integration. JMS AMQP Apache Kafka Support RSocket Spring Integration WebSockets","title":"Messaging"},{"location":"spring/220620_Spring_Boot_Documentation/#container-images","text":"Efficient container images and Building container images with Dockerfiles and Cloud Native Buildpacks. Efficient container images Dockerfiles","title":"Container Images"},{"location":"spring/220620_Spring_Boot_Documentation/#production-ready-features","text":"Monitoring, Metrics, Auditing, and more. Enabling Production-ready Features Endpoints Monitoring and Management over HTTP Monitoring and Management over JMX Loggers Metrics Auditing HTTP Tracing Process Monitoring Cloud Foundry Support","title":"Production-ready Features"},{"location":"spring/220620_Spring_Boot_Documentation/#deploying-spring-boot-applications","text":"Deploying to the Cloud, and Installing as a Unix application. Deploying to the Cloud Installing Spring Boot Applications","title":"Deploying Spring Boot Applications"},{"location":"spring/220620_Spring_Boot_Documentation/#spring-boot-cli","text":"Installing the CLI, Using the CLI, Configuring the CLI, and more.","title":"Spring Boot CLI"},{"location":"spring/220620_Spring_Boot_Documentation/#build-tool-plugins","text":"Maven Plugin, Gradle Plugin, Antlib, and more.","title":"Build Tool Plugins"},{"location":"spring/220620_Spring_Boot_Documentation/#how-to-guides","text":"Application Development, Configuration, Embedded Servers, Data Access, and many more. Spring Boot Application Properties and Configuration Embedded Web Servers Spring MVC Jersey HTTP Clients Logging Data Access Database Initialization Messaging Batch Applications Actuator Security Hot Swapping Testing Build Traditional Deployment","title":"\u201cHow-to\u201d Guides"},{"location":"spring/220620_Spring_Boot_Documentation/#appendix","text":"Application Properties - Common application properties that you can use to configure your application. Configuration Metadata - Metadata that you can use to describe configuration properties. Auto-configuration Classes - Auto-configuration classes provided by Spring Boot. Test Auto-configuration Annotations - Test auto-configuration annotations that you can use to test slices of your application. Executable Jars - Spring Boot\u2019s executable jars, their launchers, and their format. Dependency Versions - Details of the dependencies that are managed by Spring Boot.","title":"Appendix"}]}